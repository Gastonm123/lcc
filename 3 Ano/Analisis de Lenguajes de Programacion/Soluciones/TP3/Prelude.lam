def I = \x:B. x
def K = \x:B.\y:B.x
def S = \x:B->B->B.\y:B->B.\z:B.(x z) (y z)

def uno = suc 0
def dos = suc uno
def tres = suc dos
def cuatro = suc tres
def cinco = suc cuatro
def seis = suc cinco

def succ = \x:Nat. suc x
def pre  = \x:Nat. R (0) (\y:Nat.\z:Nat.z) (x)
def add  = \x:Nat. \y:Nat. R (y) (\a:Nat.\b:Nat. suc a) (x)
def mul  = \x:Nat. \y:Nat. R (0) (\a:Nat.\b:Nat. add y a) (x)
def fac  = \x:Nat. R (uno) (\a:Nat.\b:Nat. mul (suc b) a) (x)

-- https://nms.kcl.ac.uk/maribel.fernandez/papers/TCS10.pdf
-- def iterA = \t:Nat.\u:Nat.\v:Nat->Nat. R (u) (\x:Nat.\y:Nat. v x) (t)
-- def iterB = \t:Nat.\u:Nat->Nat.\v:(Nat->Nat)->Nat->Nat->Nat. R (u) (v) (t)
-- def ackL = \m:Nat.\n:Nat. (iterB m (\x:Nat. suc x) (\g:Nat->Nat.\u:Nat.\z:Nat.iterA (suc z) uno g)) n
