#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{tikz}
\usetikzlibrary{positioning,shapes,fit,arrows}
\usetikzlibrary{er}

\tikzstyle{multi attribute}=[attribute ,double  distance =1.5pt]
\tikzstyle{weak entity}=[entity ,double  distance =1.5pt]
\tikzstyle{weak relationship}=[relationship,double  distance =1.5pt]
\tikzstyle{derived attribute}=[attribute ,dashed]
\tikzstyle{total}=[double  distance =1.5pt]
\tikzstyle{every entity}=[draw=orange , fill=orange!20]
\tikzstyle{every attribute}=[draw=purple, fill=purple!20]
\tikzstyle{every relationship}=[draw=green, fill=green!20]
\tikzstyle{isa}=[
regular polygon, regular polygon sides=3,
minimum size =1,
draw=yellow, fill=yellow!20
]

\newcommand{\key}[1]{\underline{#1}}
\newcommand{\udash}[1]{%
    \tikz[baseline=(todotted.base)]{
        \node[inner sep=0.2pt,outer sep=0pt] (todotted) {#1};
        \draw[dashed] (todotted.south west) -- (todotted.south east);
    }%
}%
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language spanish-mexico
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Part
Introducción
\end_layout

\begin_layout Chapter
Sistemas de procesamiento de archivos
\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
Los sistemas de bases de datos surgieron en respuesta a los primeros métodos
 de gestión informatizada de los datos comerciales.
 Una manera de guardar la información en la computadora es almacenarla en
 archivos del sistema operativo.
 Para permitir que los usuarios manipulen la información, el sistema tiene
 varios programas de aplicación que gestionan los archivos.
\end_layout

\begin_layout Standard
Los sistemas operativos convencionales soportan este sistema de procesamiento
 de archivos típico.
 El sistema almacena los registros permanentes en varios archivos y necesita
 diferentes programas de aplicación para extraer y añadir a los archivos
 correspondientes.
 Antes de la aparición de los sistemas gestores de bases de datos (DBMS),
 las organizaciones normalmente almacenaban la información en sistemas de
 este tipo.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Inconvenientes
\end_layout

\begin_layout Standard
Guardar la información de la organización en un sistema de procesamiento
 de archivos tiene una serie de inconvenientes importantes:
\end_layout

\begin_layout Itemize

\noun on
Redundancia e inconsistencia de los datos
\noun default
: Debido a que los archivos y programas de aplicación los crean diferentes
 programadores en el transcurso de un largo período de tiempo, es probable
 que los diversos archivos tengan estructuras diferentes y que los programas
 estén escritos en varios lenguajes de programación diferentes.
 Además, puede que la información esté duplicada en varios lugares (archivos).
 Esta redundancia conduce a costes de almacenamiento y de acceso más elevados.
 Además, puede dar lugar a la inconsistencia de los datos; es decir, puede
 que las diferentes copias de los mismos datos no coincidan.
\end_layout

\begin_layout Itemize

\noun on
Dificultad en el acceso a los datos
\noun default
: Si una solicitud no fue prevista al diseñarse el sistema original, no
 habrá ningún programa de aplicación que la satisfaga.
 Para solucionar el inconveniente hay dos alternativas: realizar una extracción
 manual desde informes ya existentes o bien pedir a un programador de sistemas
 que escriba el programa de aplicación necesario.
 Ambas alternativas son obviamente insatisfactorias.
\end_layout

\begin_layout Itemize

\noun on
Aislamiento de datos
\noun default
: Como los datos están dispersos en varios archivos, y los archivos pueden
 estar en diferentes formatos, es difícil escribir nuevos programas de aplicació
n para recuperar los datos correspondientes.
\end_layout

\begin_layout Itemize

\noun on
Problemas de integridad
\noun default
: Los valores de los datos almacenados en la base de datos deben satisfacer
 ciertos tipos de restricciones de consistencia.
 Sin embargo, cuando se añaden nuevas restricciones, es difícil cambiar
 los programas para hacer que se cumplan.
\end_layout

\begin_layout Itemize

\noun on
Problemas de atomicidad
\noun default
: Los sistemas informáticos, como cualquier otro dispositivo mecánico o
 eléctrico, está sujeto a fallos.
 En muchas aplicaciones es crucial asegurar que, si se produce algún fallo,
 los datos se restauren al estado consistente que existía antes del fallo.
 Resulta difícil asegurar la atomicidad en los sistemas convencionales de
 procesamiento de archivos.
\end_layout

\begin_layout Itemize

\noun on
Anomalías en el acceso concurrente
\noun default
: Para aumentar el rendimiento global del sistema y obtener una respuesta
 más rápida, muchos sistemas permiten que varios usuarios actualicen los
 datos simultáneamente.
 Como en un sistema de procesamiento de archivos los datos se acceden por
 diferentes aplicaciones programadas por diferentes personas, es muy difícil
 supervisar y coordinar el acceso concurrente.
\end_layout

\begin_layout Itemize

\noun on
Problemas de seguridad
\noun default
: No todos los usuarios de un sistema de bases de datos deben poder acceder
 a todos los datos.
 Como los programas de aplicación se añaden al sistema de procesamiento
 de datos de una forma ad hoc, es difícil hacer cumplir tales restricciones
 de seguridad.
\end_layout

\begin_layout Standard
Estas dificultades, entre otras, motivaron el desarrollo de los sistemas
 de bases de datos.
\end_layout

\begin_layout Chapter
Sistemas de gestión de bases de datos (DBMS)
\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
Un sistema de bases de datos es una colección de datos interrelacionados
 y un conjunto de programas que permiten a los usuarios tener acceso a esos
 datos y modificarlos.
 Una de las principales finalidades de los sistemas de bases de datos es
 ofrecer a los usuarios una visión abstracta de los datos.
 Es decir, el sistema oculta ciertos detalles del modo en que se almacenan
 y mantienen los datos.
\end_layout

\begin_layout Section
Abstracción de datos
\end_layout

\begin_layout Standard
Para que el sistema sea útil debe recuperar los datos eficientemente.
 La necesidad de eficiencia ha llevado a los diseñadores a usar estructuras
 de datos complejas para la representación de los datos en la base de datos.
 Dado que muchos de los usuarios de sistemas de bases de datos no tienen
 formación en informática, los desarrolladores ocultan esa complejidad a
 los usuarios mediante varios niveles de abstracción para simplificar la
 interacción de los usuarios con el sistema:
\end_layout

\begin_layout Itemize

\noun on
Nivel físico
\noun default
: El nivel más bajo de abstracción describe cómo se almacenan realmente
 los datos.
 El nivel físico describe en detalle las estructuras de datos complejas
 de bajo nivel.
\end_layout

\begin_layout Itemize

\noun on
Nivel lógico
\noun default
: El nivel inmediatamente superior de abstracción describe qué datos se
 almacenan en la base de datos y qué relaciones existen entre esos datos.
 El nivel lógico, por tanto, describe toda la base de datos en términos
 de un número pequeño de estructuras relativamente simples.
 Aunque la implementación de esas estructuras simples en el nivel lógico
 puede involucrar estructuras complejas del nivel físico, los usuarios del
 nivel lógico no necesitan preocuparse de esta complejidad.
 Los administradores de bases de datos, que deben decidir la información
 que se guarda en la base de datos, usan el nivel de abstracción lógico.
\end_layout

\begin_layout Itemize

\noun on
Nivel de vistas
\noun default
: El nivel más elevado de abstracción solo describe parte de la base de
 datos.
 Aunque el nivel lógico usa estructuras más simples, queda algo de complejidad
 debido a la variedad de información almacenada en las grandes bases de
 datos.
 Muchos usuarios del sistema de bases de datos no necesitan toda esta informació
n; en su lugar solo necesitan tener acceso a una parte de la base de datos.
 El nivel de abstracción de vistas existe para simplificar su interacción
 con el sistema.
 El sistema puede proporcionar muchas vistas para la misma base de datos.
\end_layout

\begin_layout Section
Modelos de datos
\end_layout

\begin_layout Standard
Bajo la estructura de las bases de datos se encuentra el modelo de datos:
 una colección de herramientas conceptuales para describir los datos, sus
 relaciones, su semántica y las restricciones de consistencia.
 Los modelos de datos ofrecen un modo de describir el diseño de las bases
 de datos en los niveles físico, lógico y de vistas.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize

\noun on
El modelo entidad-relación
\noun default
: El modelo de datos entidad-relación (E-R) se basa en una percepción del
 mundo real que consiste en una colección de objetos básicos, denominados
 
\emph on
entidades
\emph default
, y de las 
\emph on
relaciones
\emph default
 entre ellos.
 Una entidad es una “cosa” u “objeto” del mundo real que es distinguible
 de otros objetos.
 El modelo entidad-relación se usa mucho en el diseño de bases de datos.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[node  distance =7em]
\end_layout

\begin_layout Plain Layout


\backslash
node[entity] (cliente) {Cliente};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[attribute] (nombre) [above left of=cliente] {Nombre} edge (cliente);
\end_layout

\begin_layout Plain Layout

	
\backslash
node[attribute] (calle) [left of=cliente] {Calle} edge (cliente);
\end_layout

\begin_layout Plain Layout

	
\backslash
node[attribute] (ciudad) [below left of=cliente] {Ciudad} edge (cliente);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node[relationship] (ctacli) [right of=cliente] {CtaCli} edge (cliente);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
node[entity] (cuenta) [right of= ctacli] {Cuenta} edge (ctacli);
\end_layout

\begin_layout Plain Layout

	
\backslash
node[attribute] (numero) [above right of=cuenta] {Numero} edge (cuenta);
\end_layout

\begin_layout Plain Layout

	
\backslash
node[attribute] (saldo) [below right of=cuenta] {Saldo} edge (cuenta);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama Entidad Relación
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\noun on
Modelo relacional
\noun default
: El modelo relacional usa una colección de tablas para representar tanto
 los datos como sus relaciones.
 Cada tabla tiene varias columnas, y cada columna tiene un nombre único.
 El modelo relacional es un ejemplo de un modelo basado en registros.
 Los modelos basados en registros se denominan así porque la base de datos
 se estructura en registros de formato fijo de varios tipos.
 Cada tabla contiene registros de un tipo dado.
 Cada tipo de registro define un número fijo de campos, o atributos.
 Las columnas de la tabla se corresponden con los atributos del tipo de
 registro.
 El modelo de datos relacional es el modelo de datos más ampliamente usado,
 y una gran mayoría de sistemas de bases de datos actuales se basan en el
 modelo relacional.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nombre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Calle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ciudad
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Numero
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lowery
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maple
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Queens
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
900
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Shiver
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
North
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bronx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
556
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Shiver
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
North
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bronx
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
647
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hodges
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sidehill
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Brooklyn
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
801
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hodges
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sidehill
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Brooklyn
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
647
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Modelo Relacional
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Instancias, esquemas e independencia de datos
\end_layout

\begin_layout Standard
Una instancia de una base de datos, es la colección de información almacenada
 en la base de datos en un determinado momento en el tiempo.
\end_layout

\begin_layout Standard
El esquema de la base de datos es el diseño global de la base de datos.
\end_layout

\begin_layout Standard
Los DBMS proveen la la independencia de datos, es decir, la capacidad de
 modificar una definición de un esquema en un nivel sin afectar la definición
 de un esquema superior siguiente.
\end_layout

\begin_layout Itemize

\noun on
Independencia física
\noun default
: Es la capacidad de modificar el esquema físico sin tener que volver a
 escribir los programas de aplicación.
\end_layout

\begin_layout Itemize

\noun on
Independencia lógica
\noun default
: Es la capacidad de modificar el esquema conceptual (alterar la estructura
 lógica de la base de datos) sin tener que volver a escribir los programas
 de aplicación; como por ejemplo añadir un nuevo campo.
\end_layout

\begin_layout Section
Lenguaje de definición de datos (DDL)
\end_layout

\begin_layout Standard
Los esquemas de las bases de datos se especifican mediante un conjunto de
 definiciones expresadas mediante un lenguaje especial denominado lenguaje
 de definición de datos (DDL).
 El DDL también se usa para especificar más propiedades de los datos.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
El DDL, al igual que cualquier otro lenguaje de programación, obtiene como
 entrada algunas instrucciones y genera una salida.
 La salida del DDL se coloca en el diccionario de datos, que contiene metadatos,
 es decir, datos sobre datos.
 El diccionario de datos se considera un tipo especial de tabla, a la que
 solo puede tener acceso y actualizar el propio sistema de bases de datos
 (no los usuarios normales).
 El sistema de bases de datos consulta el diccionario de datos antes de
 leer o modificar los datos reales.
\end_layout

\begin_layout Section
Lenguaje de manipulación de datos (DML)
\end_layout

\begin_layout Standard
Un lenguaje de manipulación de datos (DML) es un lenguaje que permite a
 los usuarios tener acceso a los datos organizados mediante el modelo de
 datos correspondiente o manipularlos.
 Los tipos de acceso son:
\end_layout

\begin_layout Itemize
La recuperación de la información almacenada en la base de datos.
\end_layout

\begin_layout Itemize
La inserción de información nueva en la base de datos.
\end_layout

\begin_layout Itemize
El borrado de la información de la base de datos.
\end_layout

\begin_layout Itemize
La modificación de la información almacenada en la base de datos.
 
\end_layout

\begin_layout Standard
Hay fundamentalmente dos tipos:
\end_layout

\begin_layout Itemize
Los DMLs procedimentales necesitan que el usuario especifique qué datos
 se necesitan y cómo obtener esos datos.
 
\end_layout

\begin_layout Itemize
Los DMLs declarativos (también conocidos como DMLs no procedimentales) necesitan
 que el usuario especifique qué datos se necesitan sin que haga falta que
 especifique cómo obtener esos datos.
\end_layout

\begin_layout Standard
Una consulta es una instrucción que solicita que se recupere información.
 La parte de los DMLs implicada en la recuperación de información se denomina
 lenguaje de consultas.
 Existen varios lenguajes de consultas de bases de datos en uso, tanto comercial
 como experimentalmente.
 El lenguaje de consultas más ampliamente usado se denomina: SQL.
\end_layout

\begin_layout Section
Gestor de base de datos (DBMS)
\end_layout

\begin_layout Standard
Un gestor de bases de datos es un programa que proporciona la interfaz entre
 los datos de bajo nivel almacenados en la base de datos y los programas
 de aplicación y consultas hechos al sistema.
 El gestos de base de datos es responsable de:
\end_layout

\begin_layout Itemize
Traducir las distintas sentencias DDL y DML a comandos del sistema de archivos
 de bajo nivel.
\end_layout

\begin_layout Itemize
Almacenar, recuperar y actualizar los datos en la base de datos.
\end_layout

\begin_layout Itemize
Mantener la integridad de los datos.
\end_layout

\begin_layout Itemize
Asegurar que se cumplan los requisitos de seguridad.
\end_layout

\begin_layout Itemize
Detectar fallos y recuperarse ante eventuales fallas.
\end_layout

\begin_layout Itemize
Controlar el acceso concurrente a la información.
\end_layout

\begin_layout Section
Administrador de base de datos (DBA)
\end_layout

\begin_layout Standard
Una de las principales razones de usar DBMS es tener un control centralizado
 tanto de los datos como de los programas que tienen acceso a esos datos.
 La persona que tiene ese control central sobre el sistema se denomina administr
ador de bases de datos (DBA).
 Las funciones del DBA incluyen:
\end_layout

\begin_layout Itemize

\noun on
Definición del esquema conceptual
\noun default
: El DBA crea el esquema original de la base de datos mediante la ejecución
 de un conjunto de instrucciones de definición de datos en el DDL.
 
\end_layout

\begin_layout Itemize

\noun on
Definición del esquema interno
\noun default
: El DBA debe decidir cómo se representará la información en la BD almacenada
 (diseño físico).
\end_layout

\begin_layout Itemize

\noun on
Modificación del esquema y de la organización física
\noun default
: El DBA realiza modificaciones en el esquema y en la organización física
 para reflejar las necesidades cambiantes de la organización, o para alterar
 la organización física a fin de mejorar el rendimiento.
\end_layout

\begin_layout Itemize

\noun on
Concesión de autorización para el acceso a los datos
\noun default
: Mediante la concesión de diferentes tipos de autorización, el administrador
 de bases de datos puede regular las partes de la base de datos a las que
 puede tener acceso cada usuario.
 La información de autorización se guarda en una estructura especial del
 sistema que el DBMS consulta siempre que alguien intenta tener acceso a
 los datos del sistema.
\end_layout

\begin_layout Itemize

\noun on
Mantenimiento rutinario
\noun default
: Algunos ejemplos de las actividades de mantenimiento rutinario del administrad
or de la base de datos son:
\end_layout

\begin_deeper
\begin_layout Itemize
Copia de seguridad periódica de la base de datos, para impedir la pérdida
 de datos en caso de desastres.
\end_layout

\begin_layout Itemize
Asegurarse de que se dispone de suficiente espacio libre en disco para las
 operaciones normales y aumentar el espacio en disco según sea necesario.
\end_layout

\begin_layout Itemize
Supervisar los trabajos que se ejecuten en la base de datos y asegurarse
 de que el rendimiento no se degrade debido a que algún usuario haya remitido
 tareas muy costosas.
\end_layout

\end_deeper
\begin_layout Section
Usuarios de base de datos
\end_layout

\begin_layout Standard
Hay tres tipos diferentes de usuarios de los sistemas de bases de datos,
 diferenciados por la forma en que esperan interactuar con el sistema:
\end_layout

\begin_layout Itemize

\noun on
Usuarios normales
\noun default
: Son usuarios no sofisticados que interactúan con el sistema invocando
 alguno de los programas de aplicación que se han escrito previamente.
\end_layout

\begin_layout Itemize

\noun on
Programadores de aplicaciones
\noun default
: Son profesionales informáticos que escriben programas de aplicación que
 utilizan el DML para interaccionar con el sistema.
\end_layout

\begin_layout Itemize

\noun on
Usuarios sofisticados
\noun default
: Interactúan con el sistema sin escribir programas.
 En su lugar, formulan sus consultas en un lenguaje de consultas de bases
 de datos.
\end_layout

\begin_layout Part
Modelado de datos
\end_layout

\begin_layout Chapter
Modelo relacional
\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
El modelo relacional utiliza un conjunto de tablas para representar tanto
 los datos como las relaciones entre ellos.
 Su simplicidad conceptual ha conducido a su adopción generalizada; actualmente,
 una amplia mayoría de los productos de bases de datos se basan en el modelo
 relacional.
\end_layout

\begin_layout Standard
Una base de datos relacional consiste en un conjunto de tablas, a cada una
 de las cuales se le asigna un nombre exclusivo.
 Cada fila de la tabla representa una relación entre un conjunto de valores.
 De manera informal, cada tabla es un conjunto de entidades, y cada fila
 es una entidad.
 Dado que cada tabla es un conjunto de tales relaciones, hay una fuerte
 correspondencia entre el concepto de tabla y el concepto matemático de
 relación, del que toma su nombre el modelo de datos relacional.
 Para cada atributo hay un conjunto de valores permitidos, denominado dominio
 de ese atributo.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sucursal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cuenta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cliente
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Saldo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Downtown
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
101
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Johnson
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
500
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mianus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
215
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Smith
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
700
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Perryridge
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
102
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hayes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
400
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Round Hill
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
305
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Turner
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
350
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Tabla 
\emph on
deposito
\emph default
 del modelo relacional
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Formalmente: Sean 
\begin_inset Formula $D_{1}$
\end_inset

 el conjunto de todos los nombres de sucursales, 
\begin_inset Formula $D_{2}$
\end_inset

 el de los números de cuenta, 
\begin_inset Formula $D_{3}$
\end_inset

 el de los nombres de clientes y 
\begin_inset Formula $D_{4}$
\end_inset

 el de los saldos; entonces 
\begin_inset Formula $deposito\subseteq D_{1}\times D_{2}\times D_{3}\times D_{4}$
\end_inset

.
 Cada fila de la tabla sera entonces una cuatro-upla 
\begin_inset Formula $\left(v_{1},v_{2},v_{3},v_{4}\right)$
\end_inset

 donde 
\begin_inset Formula $v_{1}\in D_{1}$
\end_inset

, 
\begin_inset Formula $v_{2}\in D_{2}$
\end_inset

, 
\begin_inset Formula $v_{3}\in D_{3}$
\end_inset

 y 
\begin_inset Formula $v_{3}\in D_{4}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Como las tablas son, esencialmente, relaciones, se usarán los términos matemátic
os relación y tupla en correspondencia a los términos tabla y fila.
 El orden en que aparecen las tuplas en cada relación es irrelevante, dado
 que una relación es simplemente un conjunto.
\end_layout

\begin_layout Section
Notación
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $t$
\end_inset

 una tupla de una relación 
\begin_inset Formula $r$
\end_inset

, notaremos con 
\begin_inset Formula $t\left[atributo\right]$
\end_inset

 al valor de 
\begin_inset Formula $t$
\end_inset

 en dicho atributo.
 Por ejemplo si 
\begin_inset Formula $t=\left(Mianus,215,Smith,700\right)$
\end_inset

 entonces 
\begin_inset Formula $t\left[Saldo\right]=700$
\end_inset

.
\end_layout

\begin_layout Standard
Para denotar al esquema de una 
\begin_inset Formula $r$
\end_inset

 escribimos 
\begin_inset Formula $r=\left(atributo1,atributo2,\ldots\right)$
\end_inset

.
 Por ejemplo para la tabla deposito: 
\begin_inset Formula $deposito=\left(Sucursal,Cuenta,Cliente,Saldo\right)$
\end_inset

.
\end_layout

\begin_layout Section
Claves
\end_layout

\begin_layout Standard
Es necesario disponer de un modo de especificar la manera en que las tuplas
 de una relación dada se distingan entre sí.
 Esto se expresa en términos de sus atributos.
 Es decir, los valores de los valores de los atributos de una tupla deben
 ser tales que puedan identificarla unívocamente.
\end_layout

\begin_layout Standard
Una 
\emph on
superclave
\emph default
 es un conjunto de uno o varios atributos que, considerados conjuntamente,
 permiten identificar de manera unívoca una tupla de la relación.
 El concepto de superclave no es suficiente para nuestros propósitos, ya
 que, como se puede ver, las superclaves pueden contener atributos innecesarios.
 Si 
\begin_inset Formula $C$
\end_inset

 es una superclave, entonces también lo es cualquier superconjunto de 
\begin_inset Formula $C$
\end_inset

.
 
\end_layout

\begin_layout Standard
A menudo resultan interesantes superclaves para las que ninguno de sus subconjun
tos constituya una superclave.
 Esas superclaves mínimas se denominan 
\emph on
claves candidatas
\emph default
.
 Es posible que varios conjuntos diferentes de atributos puedan ejercer
 como claves candidatas.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Se usará el término 
\emph on
clave primaria
\emph default
 para denotar una clave candidata que ha elegido el diseñador de la base
 de datos como medio principal para la identificación de las tuplas de una
 relación.
\end_layout

\begin_layout Standard
Formalmente, sea 
\begin_inset Formula $R$
\end_inset

 el esquema de una relación 
\begin_inset Formula $r$
\end_inset

.
 Si se dice que un subconjunto 
\begin_inset Formula $C$
\end_inset

 de 
\begin_inset Formula $R$
\end_inset

 es una superclave de 
\begin_inset Formula $r$
\end_inset

, se restringe la consideración a las relaciones 
\begin_inset Formula $r(R)$
\end_inset

 en las que no hay dos tuplas diferentes que tengan los mismos valores en
 todos los atributos de 
\begin_inset Formula $C$
\end_inset

.
 Es decir:
\begin_inset Formula 
\[
t_{1},t_{2}\in r\land t_{1}\neq t_{2}\Rightarrow t_{1}\left[C\right]\neq t_{2}\left[C\right]
\]

\end_inset


\end_layout

\begin_layout Chapter
Modelo entidad relación
\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
El modelo entidad-relación (E-R) es un modelo de datos de alto nivel.
 En lugar de representar todos los datos en tablas, distingue entre los
 objetos básicos, denominados 
\emph on
entidades
\emph default
, y las 
\emph on
relaciones
\emph default
 entre esos objetos.
 Suele utilizarse como un primer paso en el diseño de los esquemas de las
 bases de datos.
\end_layout

\begin_layout Section
Entidades
\end_layout

\begin_layout Standard
Una entidad es una “cosa” u “objeto” del mundo real que es distinguible
 de todos los demás objetos.
 Las entidades pueden ser concretas, como las personas o los libros, o abstracta
s, como los préstamos, las vacaciones o los conceptos.
 Un conjunto de entidades es un conjunto de entidades del mismo tipo que
 comparten las mismas propiedades, o atributos.
\end_layout

\begin_layout Standard
Puede que un conjunto de entidades no tenga suficientes atributos para formar
 una clave primaria.
 Ese conjunto de entidades se denomina conjunto de entidades débiles.
 Los conjuntos de entidades que tienen una clave primaria se denominan conjuntos
 de entidades fuertes.
\end_layout

\begin_layout Standard
Para que un conjunto de entidades débiles tenga sentido, debe estar asociado
 con otro conjunto de entidades, denominado conjunto de entidades identificadora
s o propietarias.
 Cada entidad débil debe estar asociada con una entidad identificadora;
 es decir, se dice que el conjunto de entidades débiles depende existencialmente
 del conjunto de entidades identificadoras.
\end_layout

\begin_layout Standard
Aunque los conjuntos de entidades débiles no tienen clave primaria, hace
 falta un medio para distinguir entre todas las entidades del conjunto de
 entidades débiles que dependen de una entidad fuerte concreta.
 El 
\emph on
discriminante
\emph default
 de un conjunto de entidades débiles es un conjunto de atributos que permite
 que se haga esta distinción.
\end_layout

\begin_layout Standard
La clave primaria de un conjunto de entidades débiles se forma con la clave
 primaria del conjunto de entidades identificadoras y el discriminante del
 conjunto de entidades débiles.
\end_layout

\begin_layout Section
Atributos
\end_layout

\begin_layout Standard
Cada entidad se representa mediante un conjunto de atributos.
 Los atributos son propiedades descriptivas que posee cada miembro de un
 conjunto de entidades.
 La designación de un atributo para un conjunto de entidades expresa que
 la base de datos almacena información parecida relativa a cada entidad
 del conjunto de entidades; sin embargo, cada entidad puede tener su propio
 valor para cada atributo.
\end_layout

\begin_layout Standard
Formalmente, un atributo es una función que asigna al conjunto de entidades,
 valores en un dominio.
 Los dominios pueden incluir un valor especial llamado valor nulo, que es
 el valor que toma una entidad que no puede expresar dicha propiedad.
 El valor nulo también puede indicar 
\begin_inset Quotes fld
\end_inset

no aplicable
\begin_inset Quotes frd
\end_inset

, es decir, que el valor no existe para esa entidad.
\end_layout

\begin_layout Standard
Los atributos pueden clasificarse según su tipo:
\end_layout

\begin_layout Itemize

\noun on
Simples o compuestos
\noun default
: Si un atributo se puede dividir en varias partes (como por ejemplo 
\begin_inset Quotes fld
\end_inset

direccion
\begin_inset Quotes frd
\end_inset

) se lo llama compuesto, de lo contrario se trata de un atributo simple.
\end_layout

\begin_layout Itemize

\noun on
Monovalorados o multivalorados
\noun default
: Los atributos multivalorados son los que almacenan un conjunto de valores
 para una entidad, como podría ser el atributo 
\begin_inset Quotes fld
\end_inset

teléfonos
\begin_inset Quotes frd
\end_inset

.
 En general, este tipo de atributos no deberían ser utilizados.
\end_layout

\begin_layout Itemize

\noun on
Derivados
\noun default
: Son atributos que pueden obtenerse a partir de valores de otros atributos.
 El atributo 
\begin_inset Quotes fld
\end_inset

edad
\begin_inset Quotes frd
\end_inset

 es un ejemplo de un atributo derivado de la 
\begin_inset Quotes fld
\end_inset

fecha de nacimiento
\begin_inset Quotes frd
\end_inset

.
 Su valor no se almacena en la base de datos, sino que se calcula cuando
 es necesario.
\end_layout

\begin_layout Section
Relaciones
\end_layout

\begin_layout Standard
Una relación es una asociación entre varias entidades.
 Un conjunto de relaciones es un conjunto de relaciones del mismo tipo.
 Formalmente es una relación matemática con 
\begin_inset Formula $n\geq2$
\end_inset

 de conjuntos de entidades (posiblemente no distintos).
 Si 
\begin_inset Formula $E_{1},E_{2},\ldots,E_{n}$
\end_inset

 son conjuntos de entidades cuyas claves primarias son 
\begin_inset Formula $\left(E_{1}\right),\ldots,\left(E_{n}\right)$
\end_inset

, entonces un conjunto de relaciones 
\begin_inset Formula $R$
\end_inset

 es un subconjunto de:
\begin_inset Formula 
\[
\left\{ \left(e_{1},\ldots,e_{n}\right)/e_{1}\in E_{1}\land\ldots\land e_{n}\in E_{n}\right\} 
\]

\end_inset

donde 
\begin_inset Formula $\left(e_{1},\ldots,e_{n}\right)$
\end_inset

 es una instancia de la relación.
\end_layout

\begin_layout Standard
Una relación puede también tener atributos denominados 
\emph on
atributos descriptivos
\emph default
.
 Sea 
\begin_inset Formula $A=\left\{ a_{1},\ldots,a_{m}\right\} $
\end_inset

 un conjunto de atributos descriptivos, definimos:
\begin_inset Formula 
\[
atributo\left(R\right)=\left(E_{1}\right)\cup\ldots\cup\left(E_{n}\right)\cup A
\]

\end_inset


\end_layout

\begin_layout Standard
Si 
\begin_inset Formula $R$
\end_inset

 no tiene atributos descriptivos, 
\begin_inset Formula $atributo\left(R\right)$
\end_inset

 es una superclave.
\end_layout

\begin_layout Itemize
Si la cardinalidad es N:N, 
\begin_inset Formula $atributo\left(R\right)$
\end_inset

 es una clave primaria.
\end_layout

\begin_layout Itemize
Si la cardinalidad es N:1 o 1:N, la clave primaria sera un subconjunto de
 
\begin_inset Formula $atributo\left(R\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Si 
\begin_inset Formula $R$
\end_inset

 tiene atributos descriptivos, es probable que haya que agregar alguno (o
 todos) a 
\begin_inset Formula $atributo\left(R\right)$
\end_inset

 para formar la clave.
\end_layout

\begin_layout Section
Cardinalidad
\end_layout

\begin_layout Standard
La correspondencia de cardinalidades, o razón de cardinalidad, expresa el
 número de entidades a las que otra entidad se puede asociar mediante un
 conjunto de relaciones.
 La correspondencia de cardinalidades resulta muy útil para describir conjuntos
 de relaciones binarias, aunque pueda contribuir a la descripción de conjuntos
 de relaciones que impliquen más de dos conjuntos de entidades.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Para un conjunto de relaciones binarias 
\begin_inset Formula $R$
\end_inset

 entre los conjuntos de entidades 
\begin_inset Formula $A$
\end_inset

 y 
\begin_inset Formula $B$
\end_inset

, la correspondencia de cardinalidades debe ser una de las siguientes:
\end_layout

\begin_layout Itemize

\noun on
Uno a uno
\noun default
: Cada entidad de 
\begin_inset Formula $A$
\end_inset

 se asocia, a lo sumo, con una entidad de 
\begin_inset Formula $B$
\end_inset

, y cada entidad en 
\begin_inset Formula $B$
\end_inset

 se asocia, a lo sumo, con una entidad de 
\begin_inset Formula $A$
\end_inset

 (véase la Figura 6.5a).
\end_layout

\begin_layout Itemize

\noun on
Uno a varios
\noun default
: Cada entidad de 
\begin_inset Formula $A$
\end_inset

 se asocia con cualquier número (cero o más) de entidades de 
\begin_inset Formula $B$
\end_inset

.
 Cada entidad de B, sin embargo, se puede asociar, a lo sumo, con una entidad
 de 
\begin_inset Formula $A$
\end_inset

 (véase la Figura 6.5b).
\end_layout

\begin_layout Itemize

\noun on
Varios a uno
\noun default
: Cada entidad de 
\begin_inset Formula $A$
\end_inset

 se asocia, a lo sumo, con una entidad de 
\begin_inset Formula $B$
\end_inset

.
 Cada entidad de 
\begin_inset Formula $B$
\end_inset

, sin embargo, se puede asociar con cualquier número (cero o más) de entidades
 de 
\begin_inset Formula $A$
\end_inset

 (véase la Figura 6.6a).
\end_layout

\begin_layout Itemize

\noun on
Varios a varios
\noun default
: Cada entidad de 
\begin_inset Formula $A$
\end_inset

 se asocia con cualquier número (cero o más) de entidades de 
\begin_inset Formula $B$
\end_inset

, y cada entidad de 
\begin_inset Formula $B$
\end_inset

 se asocia con cualquier número (cero o más) de entidades de 
\begin_inset Formula $A$
\end_inset

 (véase la Figura 6.6b).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
node (a1) {$a_1$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of a1] (a2) {$a_2$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of a2] (a3) {$a_3$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
node[right=of a1] (b1) {$b_1$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of b1] (b2) {$b_2$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of b2] (b3) {$b_3$};
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	
\backslash
node[shape=ellipse,draw=black,fit={(a1) (a3)}] {};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[shape=ellipse,draw=black,fit={(b1) (b3)}] {};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a1) -- (b1);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a2) -- (b2);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a3) -- (b3);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
node (a1) {$a_1$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of a1] (a2) {$a_2$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
node[above right=of a1] (b1) {$b_1$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of b1] (b2) {$b_2$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of b2] (b3) {$b_3$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of b3] (b4) {$b_4$};
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	
\backslash
node[shape=ellipse,draw=black,fit={(a1) (a2)}] {};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[shape=ellipse,draw=black,fit={(b1) (b4)}] {};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a1) -- (b1);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a1) -- (b2);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a2) -- (b4);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a2) -- (b3);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{Cardinalidad 1:1}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{Cardinalidad 1:N}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
node (a1) {$a_1$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of a1] (a2) {$a_2$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of a2] (a3) {$a_3$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of a3] (a4) {$a_4$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
node[right=of a2] (b1) {$b_1$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of b1] (b2) {$b_2$};
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	
\backslash
node[shape=ellipse,draw=black,fit={(a1) (a4)}] {};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[shape=ellipse,draw=black,fit={(b1) (b2)}] {};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a1) -- (b1);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a2) -- (b1);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a3) -- (b2);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a4) -- (b2);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
node (a1) {$a_1$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of a1] (a2) {$a_2$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of a2] (a3) {$a_3$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
node[right=of a1] (b1) {$b_1$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of b1] (b2) {$b_2$};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[below=of b2] (b3) {$b_3$};
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	
\backslash
node[shape=ellipse,draw=black,fit={(a1) (a3)}] {};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[shape=ellipse,draw=black,fit={(b1) (b3)}] {};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a1) -- (b1);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a1) -- (b2);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a2) -- (b2);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a3) -- (b2);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a3) -- (b3);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{Cardinalidad N:1}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
caption{Cardinalidad N:N}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Especialización
\end_layout

\begin_layout Standard
Los conjuntos de entidades pueden incluir subgrupos de entidades que se
 diferencian de alguna forma de las demás entidades del conjunto.
 Por ejemplo, un subconjunto de entidades de un conjunto de entidades puede
 tener atributos que no sean compartidos por todas las entidades del conjunto
 de entidades.
\end_layout

\begin_layout Standard
Considérese el conjunto de entidades persona con los atributos 
\emph on
dni
\emph default
, 
\emph on
nombre
\emph default
, 
\emph on
calle
\emph default
 y 
\emph on
ciudad
\emph default
.
 Cada persona puede clasificarse además como cliente o empleado.
 Cada uno de estos tipos de persona se describen mediante un conjunto de
 atributos que incluye todos los atributos del conjunto de entidades 
\emph on
persona
\emph default
 más otros posibles atributos adicionales.
\end_layout

\begin_layout Standard
Por ejemplo, las entidades 
\emph on
cliente
\emph default
 se pueden describir además mediante el atributo 
\emph on
calificación_crediticia
\emph default
, mientras que las entidades empleado se pueden describir además mediante
 el atributo 
\emph on
sueldo
\emph default
.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
El proceso de establecimiento de subgrupos dentro del conjunto de entidades
 se denomina 
\emph on
especialización
\emph default
.
 La especialización de 
\emph on
persona
\emph default
 permite distinguir entre las personas basándonos en si son empleados o
 clientes: en general, cada persona puede ser empleado, cliente, las dos
 cosas o ninguna de ellas.
\end_layout

\begin_layout Standard
La especialización parte de un único conjunto de entidades; destaca las
 diferencias entre las entidades del conjunto mediante la creación de diferentes
 conjuntos de entidades de nivel inferior.
 Esos conjuntos de entidades de nivel inferior pueden tener atributos o
 participar en relaciones que no se aplican a todas las entidades del conjunto
 de entidades de nivel inferior.
\end_layout

\begin_layout Section
Generalización
\end_layout

\begin_layout Standard
La 
\emph on
generalización
\emph default
, es una relación de contención que existe entre el conjunto de entidades
 de nivel superior y uno o varios conjuntos de entidades de nivel inferior.
 Los conjuntos de entidades de nivel superior e inferior también se pueden
 denominar con los términos superclase y subclase, respectivamente.
 El conjunto de entidades persona es la superclase de las subclases 
\emph on
cliente
\emph default
 y 
\emph on
empleado
\emph default
.
\end_layout

\begin_layout Standard
Los conjuntos de entidades de nivel superior e inferior también se pueden
 denominar con los términos superclase y subclase, respectivamente.
 El conjunto de entidades persona es la superclase de las subclases cliente
 y empleado.
\end_layout

\begin_layout Standard
La generalización parte del reconocimiento de que varios conjuntos de entidades
 comparten algunas características comunes (es decir, se describen mediante
 los mismos atributos y participan en los mismos conjuntos de relaciones).
 Con base en esas similitudes, la generalización sintetiza esos conjuntos
 de entidades en un solo conjunto de nivel superior.
 La generalización se usa para destacar las similitudes entre los conjuntos
 de entidades de nivel inferior y para ocultar las diferencias; también
 permite una economía de representación, ya que no se repiten los atributos
 compartidos.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Diagrama entidad relación
\end_layout

\begin_layout Standard
Los diagramas E-R pueden expresar gráficamente la estructura lógica general
 de las bases de datos.
 Estos diagramas constan de los siguientes componentes principales:
\end_layout

\begin_layout Itemize

\noun on
Rectángulos
\noun default
: que representan conjuntos de entidades.
\end_layout

\begin_layout Itemize

\noun on
Elipses
\noun default
: que representan atributos.
\end_layout

\begin_layout Itemize

\noun on
Rombos
\noun default
: que representan conjuntos de relaciones.
\end_layout

\begin_layout Itemize

\noun on
Líneas
\noun default
: que unen los atributos con los conjuntos de entidades y los conjuntos
 de entidades con los conjuntos de relaciones.
\end_layout

\begin_layout Itemize

\noun on
Elipses dobles
\noun default
: que representan atributos multivalorados.
\end_layout

\begin_layout Itemize

\noun on
Elipses discontinuas
\noun default
: que denotan atributos derivados.
\end_layout

\begin_layout Itemize

\noun on
Rectángulos dobles
\noun default
: que representan conjuntos de entidades débiles.
\end_layout

\begin_layout Itemize

\noun on
Triángulos
\noun default
: que representan generalizaciones.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
scalebox{.67} {
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{tikzpicture}[node  distance =5em]
\end_layout

\begin_layout Plain Layout

		
\backslash
node[entity] (persona) {Persona};
\end_layout

\begin_layout Plain Layout

			
\backslash
node[multi attribute] (nombre) [left = 1em of persona] {Nombre} edge (persona);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (dni) [above = 1em of nombre] {
\backslash
key{DNI}} edge (persona);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (fecha) [below = 1em of nombre] {Fecha} edge (persona);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[derived attribute] (edad) [below = 1em of persona] {Edad} edge (fecha);
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		
\backslash
node[isa] (es) [right of=persona] {Es} edge (persona);
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		
\backslash
node[entity] (cliente) [above right of= es] {Cliente} edge (es);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (telefono) [left = 1em of cliente] {Telefono} edge (cliente);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[entity] (escritor) [below right of= es] {Escritor} edge (es);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (nacionalidad) [below = 1em of escritor] {Nacionalidad}
 edge (escritor);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[relationship] (compro) [right = 1em of cliente] {Compro} edge (cliente);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (fecha2) [above  = 1em of cliente] {
\backslash
udash{Fecha}} edge (compro);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[relationship] (escribio) [right = 1em of escritor] {Escribio} edge
 (escritor);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[entity] (libro) [right = 1em of escribio] {Libro} edge (escribio);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (isbn) [below = 1em of libro] {
\backslash
key{ISBN}} edge (libro);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[weak entity] (ejemplar) [right = 1em of compro] {Ejemplar} edge (compro);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (numero) [above = 1em of ejemplar] {
\backslash
udash{Numero}} edge (ejemplar);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[relationship] (almacenado) [right = 1em of ejemplar] {Almacenado} edge
 (ejemplar);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[entity] (deposito) [right = 1em of almacenado] {Deposito} edge (almacenado)
;
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (direccion2) [above = 1em of deposito] {
\backslash
key{Direccion}} edge (deposito);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[multi attribute] (telefonos) [below = 1em of deposito] {Telefonos}
 edge (deposito);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[weak relationship] (de) [below = 1em of ejemplar] {De} edge (ejemplar)
 edge (libro);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[relationship] (genero) [right = 1em of libro] {Genero} edge (libro);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
node[entity] (generos) [right of= genero] {Genero} edge (genero);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (codigo) [right = 1em of generos] {
\backslash
key{Codigo}} edge (generos);
\end_layout

\begin_layout Plain Layout

			
\backslash
node[attribute] (nombre2) [below = 1em of generos] {Nombre} edge (generos);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
end{tikzpicture}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama Entidad Relacion
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Mapa canónico
\end_layout

\begin_layout Standard
Las bases de datos que se ajustan a un esquema de bases de datos E-R se
 pueden representar mediante conjuntos de esquemas de relación.
 Para cada conjunto de entidades y para cada conjunto de relaciones de la
 base de datos hay un solo esquema de relación a la que se asigna el nombre
 del conjunto de entidades o del conjunto de relaciones correspondiente.
\end_layout

\begin_layout Standard
Tanto el modelo E-R de bases de datos como el relacional son representaciones
 abstractas y lógicas de empresas del mundo real.
 Como los dos modelos usan principios de diseño parecidos, los diseños E-R
 se pueden convertir en diseños relacionales.
\end_layout

\begin_layout Subsection
Representación de conjuntos de entidades fuertes
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $E$
\end_inset

 un conjunto de entidades fuertes con los atributos descriptivos 
\begin_inset Formula $\left\{ a_{1},\ldots,a_{n}\right\} $
\end_inset

.
 Esta entidad se representa mediante una tabla denominado 
\begin_inset Formula $E$
\end_inset

 con 
\begin_inset Formula $n$
\end_inset

 columnas distintas.
 Cada fila de la tabla corresponde a una entidad del conjunto de entidades
 
\begin_inset Formula $E$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DNI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nombre
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fecha
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
54.321.098
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Oliver Harris
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24/09/1984
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
90.123.456
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bill Marsh
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11/10/1986
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
56.789.012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
John Pepper
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30/02/3075
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Tabla correspondiente a la entidad 
\emph on
persona
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Representación de conjuntos de entidades debiles
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $A$
\end_inset

 un conjunto de entidades débiles con los atributos 
\begin_inset Formula $\left\{ a_{1},\ldots,a_{m}\right\} $
\end_inset

.
 Sea 
\begin_inset Formula $B$
\end_inset

 el conjunto de entidades fuertes del que 
\begin_inset Formula $A$
\end_inset

 depende.
 La clave primaria de 
\begin_inset Formula $B$
\end_inset

 consiste en los atributos 
\begin_inset Formula $\left\{ b_{1},\ldots,b_{n}\right\} $
\end_inset

.
 El conjunto de entidades 
\begin_inset Formula $A$
\end_inset

 se representa mediante una tabla denominada 
\begin_inset Formula $A$
\end_inset

 con una columna por cada miembro del conjunto:
\begin_inset Formula 
\[
\left\{ a_{1},\ldots,a_{m}\right\} \cup\left\{ b_{1},\ldots,b_{n}\right\} 
\]

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Para los esquemas derivados de conjuntos de entidades débiles la combinación
 de la clave primaria del conjunto de entidades fuertes y del discriminador
 del conjunto de entidades débiles sirve de clave primaria del esquema.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ISBN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Numero
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9780385514231
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9780385541176
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9780316225908
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
315
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Tabla correspondiente a la entidad 
\emph on
ejemplar
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Representación de conjuntos de relaciones
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $R$
\end_inset

 un conjunto de relaciones, sea 
\begin_inset Formula $\left\{ a_{1},\ldots,a_{m}\right\} $
\end_inset

 el conjunto de atributos formado por la unión de las claves primarias de
 cada uno de los conjuntos de entidades que participan en 
\begin_inset Formula $R$
\end_inset

, y sean 
\begin_inset Formula $\left\{ b_{1},\ldots,b_{n}\right\} $
\end_inset

 los atributos descriptivos de 
\begin_inset Formula $R$
\end_inset

 (si los hay).
 El conjunto de relaciones se representa mediante la tabla 
\begin_inset Formula $R$
\end_inset

, con un atributo por cada uno de los miembros del conjunto:
\begin_inset Formula 
\[
\left\{ a_{1},\ldots,a_{m}\right\} \cup\left\{ b_{1},\ldots,b_{n}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ISBN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Código
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9780385514231
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9780316225908
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Tabla correspondiente a la relación 
\emph on
genero
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los conjuntos de relaciones que enlazan los conjuntos de entidades débiles
 con el conjunto correspondiente de entidades fuertes se tratan de manera
 especial.
 Estas relaciones son varios a uno y no tienen atributos descriptivos.
 Además, la clave primaria de los conjuntos de entidades débiles incluye
 la clave primaria de los conjuntos de entidades fuertes.
\end_layout

\begin_layout Standard
En general, el esquema de los conjuntos de relaciones que enlazan los conjuntos
 de entidades débiles con su conjunto correspondiente de entidades fuertes
 es redundante y no hace falta que esté presente en el diseño de la base
 de datos relacional basado en el diagrama E-R .
\end_layout

\begin_layout Subsection
Representación de generalizaciones
\end_layout

\begin_layout Standard
Existen dos métodos diferentes para designar los esquemas de relación de
 los diagramas E-R que incluyen generalización:
\end_layout

\begin_layout Itemize
Se crea una tabla para el conjunto de entidades de nivel superior.
 Para cada conjunto de entidades de nivel inferior se crea una tabla que
 incluye un atributo para cada uno de los atributos de ese conjunto de entidades
 más un atributo por cada atributo de la clave primaria del conjunto de
 entidades de nivel superior.
 Los atributos de clave primaria del conjunto de entidades de nivel superior
 pasan a ser atributos de clave primaria del conjunto de entidades de nivel
 superior y de todos los conjuntos de entidades de nivel inferior.
\end_layout

\begin_layout Itemize
Es posible una representación alternativa si la generalización es disjunta
 y completa, es decir, si no hay ninguna entidad miembro de dos conjuntos
 de entidades de nivel inferior directamente por debajo de un conjunto de
 entidades de nivel superior, y si todas las entidades del conjunto de entidades
 de nivel superior también pertenece a uno de los conjuntos de entidades
 de nivel inferior.
\end_layout

\begin_deeper
\begin_layout Standard
En este caso no se crea una tabla para el conjunto de entidades de nivel
 superior.
 En vez de eso, para cada conjunto de entidades de nivel inferior se crea
 una tabla que incluye un atributo por cada atributo de ese conjunto de
 entidades más un atributo por cada atributo del conjunto de entidades de
 nivel superior.
\end_layout

\end_deeper
\begin_layout Part
Lenguajes de manejo de datos (DML)
\end_layout

\begin_layout Chapter
Álgebra relacional
\end_layout

\begin_layout Section
Operaciones fundamentales
\end_layout

\begin_layout Subsection
Selección
\end_layout

\begin_layout Standard
La operación selección selecciona tuplas que satisfacen un predicado dado.
 Se usa la letra griega sigma minúscula (
\begin_inset Formula $\sigma$
\end_inset

) para denotar la selección.
 El predicado aparece como subíndice de 
\begin_inset Formula $\sigma$
\end_inset

.
 La relación de argumentos se da entre paréntesis a continuación de 
\begin_inset Formula $\sigma$
\end_inset

.
\end_layout

\begin_layout Standard
En general, se permiten las comparaciones que usan 
\begin_inset Formula $=$
\end_inset

, 
\begin_inset Formula $\neq$
\end_inset

, 
\begin_inset Formula $<$
\end_inset

, 
\begin_inset Formula $\leq$
\end_inset

, 
\begin_inset Formula $>$
\end_inset

, 
\begin_inset Formula $\geq$
\end_inset

 en el predicado de selección.
 Además, se pueden combinar varios predicados en uno mayor usando las conectivas
 
\emph on
y
\emph default
 (
\begin_inset Formula $\land$
\end_inset

), 
\emph on
o
\emph default
 (
\begin_inset Formula $\lor$
\end_inset

) y 
\emph on
no
\emph default
 (
\begin_inset Formula $\neg$
\end_inset

).
 También es posible comprar atributos en el predicado.
\end_layout

\begin_layout Subsection
Proyección
\end_layout

\begin_layout Standard
La operación proyección es una operación unaria que devuelve su relación
 de argumentos, excluyendo algunos argumentos.
 Dado que las relaciones son conjuntos, se eliminan todas las filas duplicadas.
 La proyección se denota por la letra griega mayúscula 
\emph on
pi
\emph default
 (
\begin_inset Formula $\Pi$
\end_inset

).
 Se crea una lista de los atributos que se desea que aparezcan en el resultado
 como subíndice de 
\begin_inset Formula $\Pi$
\end_inset

.
 Su único argumento, una relación, se escribe a continuación entre paréntesis.
\end_layout

\begin_layout Subsection
Union
\end_layout

\begin_layout Standard
La unión de dos relaciones, es decir, las filas que aparecen en alguna de
 las dos relaciones o en ambas se pueden averiguar mediante la operación
 binaria unión, denotada, como en la teoría de conjuntos, por 
\begin_inset Formula $\cup$
\end_inset

.
 Dado que las relaciones son conjuntos, se eliminan los valores duplicados.
\end_layout

\begin_layout Standard
Para que la operación unión sea válida hay que exigir que se cumplan dos
 condiciones:
\end_layout

\begin_layout Itemize
Las relaciones que intervienen deben tener la misma aridad, es decir, deben
 tener el mismo numero de atributos.
\end_layout

\begin_layout Itemize
Los dominios de los atributos i-esimos de ambas relaciones deben ser iguales.
\end_layout

\begin_layout Subsection
Resta
\end_layout

\begin_layout Standard
La operación diferencia de conjuntos, denotada por 
\begin_inset Formula $-$
\end_inset

, permite hallar las tuplas que están en una relación pero no en la otra.
 La expresión 
\begin_inset Formula $r-s$
\end_inset

 da como resultado una relación que contiene las tuplas que están en 
\begin_inset Formula $r$
\end_inset

 pero no en 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
Como en el caso de la operación unión, hay que asegurarse de que las diferencias
 de conjuntos se realicen entre relaciones 
\emph on
compatibles
\emph default
.
\end_layout

\begin_layout Subsection
Producto cartesiano
\end_layout

\begin_layout Standard
La operación producto cartesiano, denotada por 
\begin_inset Formula $\times$
\end_inset

, permite combinar información de cualesquiera dos relaciones.
 El producto cartesiano de las relaciones 
\begin_inset Formula $r_{1}$
\end_inset

 y 
\begin_inset Formula $r_{2}$
\end_inset

 se escribe 
\begin_inset Formula $r_{1}\times r_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Dado que el mismo nombre de atributo puede aparecer tanto en 
\begin_inset Formula $r_{1}$
\end_inset

 como en 
\begin_inset Formula $r_{2}$
\end_inset

, es necesario crear un convenio de denominación para distinguir unos atributos
 de otros.
 En este caso se realiza adjuntando al atributo el nombre de la relación
 de la que proviene originalmente.
 Para los atributos que sólo aparecen en uno de los dos esquemas se suele
 omitir el prefijo con el nombre de la relación.
 Esta simplificación no genera ambigüedad alguna.
\end_layout

\begin_layout Standard
En general, si se tienen las relaciones 
\begin_inset Formula $r_{1}\left(R_{1}\right)$
\end_inset

 y 
\begin_inset Formula $r_{2}\left(R_{2}\right)$
\end_inset

, la relación 
\begin_inset Formula $r_{1}\times r_{2}$
\end_inset

 es una relación cuyo esquema es la concatenación de 
\begin_inset Formula $R_{1}$
\end_inset

 y 
\begin_inset Formula $R_{2}$
\end_inset

.
 La relación resultante contiene todas las tuplas 
\begin_inset Formula $t$
\end_inset

 para las que hay unas tuplas 
\begin_inset Formula $t_{1}\in r_{1}$
\end_inset

 y 
\begin_inset Formula $t_{2}\in r_{2}$
\end_inset

 tales que 
\begin_inset Formula $t\left[R_{1}\right]=t_{1}\left[R_{1}\right]$
\end_inset

 y 
\begin_inset Formula $t\left[R_{2}\right]=t_{2}\left[R_{2}\right]$
\end_inset

.
\end_layout

\begin_layout Subsection
Renombre
\end_layout

\begin_layout Standard
A diferencia de las relaciones de la base de datos, los resultados de las
 expresiones de álgebra relacional no tienen un nombre que se pueda usar
 para referirse a ellas.
 Resulta útil poder ponerles nombre; la operación renombramiento, denotada
 por la letra griega 
\emph on
ro
\emph default
 minúscula (
\begin_inset Formula $\rho$
\end_inset

), permite hacerlo.
\end_layout

\begin_layout Standard
Dada una expresión 
\begin_inset Formula $E$
\end_inset

 del álgebra relacional, la expresión 
\begin_inset Formula $\rho_{x}\left(E\right)$
\end_inset

 devuelve el resultado de la expresión 
\begin_inset Formula $E$
\end_inset

 con el nombre 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_layout Standard
Las relaciones por sí mismas se consideran expresiones (triviales) del álgebra
 relacional.
 Por tanto, también se puede aplicar la operación renombramiento a una relación
 para obtener la misma relación con un nombre nuevo.
\end_layout

\begin_layout Section
Operaciones derivadas
\end_layout

\begin_layout Subsection
Intersección
\end_layout

\begin_layout Standard
La operación de intersección es una operación binaria que consta de las
 tuplas 
\begin_inset Formula $t$
\end_inset

 que pertenecen a ambas relaciones.
 Nosete que:
\begin_inset Formula 
\[
r_{1}\cap r_{2}=r_{1}-\left(r_{1}-r_{2}\right)
\]

\end_inset

por tanto, la intersección de conjuntos no es una operación fundamental
 y no añade potencia al álgebra relacional.
\end_layout

\begin_layout Subsection
Producto natural
\end_layout

\begin_layout Standard
Suele resultar deseable simplificar ciertas consultas que exijan un producto
 cartesiano.
 Generalmente, las consultas que implican un producto cartesiano incluyen
 un operador selección sobre el resultado del producto cartesiano.
\end_layout

\begin_layout Standard
La reunión natural es una operación binaria que permite combinar ciertas
 selecciones y un producto cartesiano en una sola operación.
 Se denota por el símbolo de reunión 
\begin_inset Formula $\bowtie$
\end_inset

.
 La operación reunión natural forma un producto cartesiano de sus dos argumentos
, realiza una selección forzando la igualdad de los atributos que aparecen
 en ambos esquemas de relación y, finalmente, elimina los atributos duplicados.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Formalmente, sean las relaciones 
\begin_inset Formula $r\left(R\right)$
\end_inset

 y 
\begin_inset Formula $s\left(S\right)$
\end_inset

, el producto natural de ambas relaciones es una relación con esquema 
\begin_inset Formula $R\cup S$
\end_inset

 definida por:
\begin_inset Formula 
\[
r\bowtie s=\Pi_{R\cup S}\left[\sigma_{r.a_{1}=s.a_{1}\land\ldots\land r.a_{n}=s.a_{n}}\left(r\times s\right)\right]
\]

\end_inset

donde 
\begin_inset Formula $R\cap S=\left\{ a_{1},\ldots,a_{n}\right\} $
\end_inset

.
\end_layout

\begin_layout Subsection
División
\end_layout

\begin_layout Standard
La operación división, denotada por 
\begin_inset Formula $/$
\end_inset

, resulta adecuada para las consultas que incluyen la expresión 
\begin_inset Quotes fld
\end_inset

para todos
\begin_inset Quotes frd
\end_inset

.
 Formalmente, para las relaciones 
\begin_inset Formula $r\left(R\right)$
\end_inset

 y 
\begin_inset Formula $s\left(S\right)$
\end_inset

 donde 
\begin_inset Formula $S\subseteq R$
\end_inset

, la relación 
\begin_inset Formula $r/s$
\end_inset

 es una relación con esquema 
\begin_inset Formula $R-S$
\end_inset

 que contara unicamente con todas las tuplas 
\begin_inset Formula $t$
\end_inset

 que satisfacen:
\end_layout

\begin_layout Itemize
\begin_inset Formula $t\in\Pi_{R-S}\left(r\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\forall t_{s}\in s\exists t_{r}\in r/t_{r}\left[S\right]=t_{s}\left[S\right]\land t_{r}\left[R-S\right]=t$
\end_inset

.
\end_layout

\begin_layout Standard
Es decir, estará formada por todas las tuplas 
\begin_inset Formula $t$
\end_inset

 tales que aparece una tupla 
\begin_inset Formula $\left(x,y\right)$
\end_inset

 en 
\begin_inset Formula $r$
\end_inset

 para todas las tuplas 
\begin_inset Formula $y\in s$
\end_inset

.
\end_layout

\begin_layout Standard
Puede resultar sorprendente descubrir que, dados una operación división
 y los esquemas de las relaciones, se pueda definir la operación división
 en términos de las operaciones fundamentales:
\begin_inset Formula 
\[
r/s=\Pi_{R-S}\left(r\right)-\Pi_{R-S}\left\{ \left[\Pi_{R-S}\left(r\right)\times s\right]-r\right\} 
\]

\end_inset


\end_layout

\begin_layout Subsection
Asignación
\end_layout

\begin_layout Standard
En ocasiones resulta conveniente escribir una expresión del álgebra relacional
 mediante la asignación de partes de esa expresión a variables de relación
 temporal.
 La operación asignación, denotada por 
\begin_inset Formula $\leftarrow$
\end_inset

, actúa de manera parecida a la asignación de los lenguajes de programación.
\end_layout

\begin_layout Standard
La evaluación de una asignación no hace que se muestre ninguna relación
 al usuario.
 Por el contrario, el resultado de la expresión situada a la derecha de
 
\begin_inset Formula $\leftarrow$
\end_inset

 se asigna a la variable relación situada a la izquierda de 
\begin_inset Formula $\leftarrow$
\end_inset

.
 Esta variable relación puede usarse en expresiones posteriores.
\end_layout

\begin_layout Chapter
Calculo relacional de tuplas
\end_layout

\begin_layout Section
Definición formal
\end_layout

\begin_layout Standard
Cuando se escribe una expresión del álgebra relacional se proporciona una
 serie de procedimientos que generan la respuesta a la consulta.
 El cálculo relacional de tuplas, en cambio, es un lenguaje de consultas
 no procedimental.
 Describe la información deseada sin dar un procedimiento concreto para
 obtenerla.
\end_layout

\begin_layout Standard
Las consultas se expresan en el cálculo relacional de tuplas como 
\begin_inset Formula $\left\{ t/P\left(t\right)\right\} $
\end_inset

, donde 
\begin_inset Formula $P$
\end_inset

 es una fórmula.
 En una fórmula pueden aparecer varias variables tupla.
 Las fórmulas del cálculo relacional de tuplas se construyen con átomos.
 Los átomos tienen una de las formas siguientes:
\end_layout

\begin_layout Itemize
\begin_inset Formula $s\in r$
\end_inset

, donde 
\begin_inset Formula $s$
\end_inset

 es una variable tupla y 
\begin_inset Formula $r$
\end_inset

 es una relación.
\end_layout

\begin_layout Itemize
\begin_inset Formula $s\left[x\right]\Theta u\left[y\right]$
\end_inset

, donde 
\begin_inset Formula $s$
\end_inset

 y 
\begin_inset Formula $u$
\end_inset

 son variables tuplas, 
\begin_inset Formula $x$
\end_inset

 es un atributo en el que está definida 
\begin_inset Formula $s$
\end_inset

, 
\begin_inset Formula $y$
\end_inset

 es un atributo en el que está definida 
\begin_inset Formula $u$
\end_inset

, y 
\begin_inset Formula $\Theta$
\end_inset

 es un operador de comparación.
\end_layout

\begin_layout Itemize
\begin_inset Formula $s\left[x\right]\Theta c$
\end_inset

, donde 
\begin_inset Formula $s$
\end_inset

 es una variable tupla, 
\begin_inset Formula $x$
\end_inset

 es un atributo en el que está definida 
\begin_inset Formula $s$
\end_inset

, 
\begin_inset Formula $\Theta$
\end_inset

 es un operador de comparación y 
\begin_inset Formula $c$
\end_inset

 es una constante en el dominio del atributo 
\begin_inset Formula $x$
\end_inset

.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Las fórmulas se construyen a partir de los átomos usando las reglas siguientes:
\end_layout

\begin_layout Itemize
Cada átomo es una formula.
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $P_{1}$
\end_inset

 es una fórmula, también lo son 
\begin_inset Formula $\neg P_{1}$
\end_inset

 y 
\begin_inset Formula $\left(P_{1}\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $P_{1}$
\end_inset

 y 
\begin_inset Formula $P_{2}$
\end_inset

 son fórmulas, también lo son 
\begin_inset Formula $P_{1}\lor P_{2}$
\end_inset

, 
\begin_inset Formula $P_{1}\land P_{2}$
\end_inset

 y 
\begin_inset Formula $P_{1}\Rightarrow P_{2}$
\end_inset

.
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $P_{1}\left(s\right)$
\end_inset

 es una fórmula que contiene la variable tupla libre 
\begin_inset Formula $s$
\end_inset

, y 
\begin_inset Formula $r$
\end_inset

 es una relación, también son formulas 
\begin_inset Formula $\exists s\in r\left(P_{1}\left(s\right)\right)$
\end_inset

 y 
\begin_inset Formula $\forall s\in r\left(P_{1}\left(s\right)\right)$
\end_inset

.
\end_layout

\begin_layout Section
Equivalencia con álgebra relacional
\end_layout

\begin_layout Itemize
\begin_inset Formula $r\cup s=\left\{ t/t\in r\lor t\in s\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $r-s=\left\{ t/t\in r\land\neg\left(t\in s\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\Pi_{a_{1},\ldots,a_{n}}\left(r\right)=\left\{ t^{\left(n\right)}/t\left[1\right]=u\left[a_{1}\right]\land\ldots\land t\left[n\right]=u\left[a_{n}\right]\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
COMPLETAR.
\end_layout

\begin_layout Itemize
COMPLETAR.
\end_layout

\begin_layout Itemize
COMPLETAR.
\end_layout

\begin_layout Chapter
Calculo relacional de dominios
\end_layout

\begin_layout Section
Definición formal
\end_layout

\begin_layout Standard
Una segunda forma de cálculo relacional, denominada cálculo relacional de
 dominios, usa variables de dominio, que toman sus valores del dominio de
 un atributo, en vez de hacerlo para una tupla completa.
 El cálculo relacional de dominios, no obstante, se halla estrechamente
 relacionado con el cálculo relacional de tuplas.
\end_layout

\begin_layout Standard
Las expresiones del cálculo relacional de dominios son de la forma:
\begin_inset Formula 
\[
\left\{ \left\langle x_{1},\ldots,x_{n}\right\rangle /P\left(x_{1},\ldots,x_{n}\right)\right\} 
\]

\end_inset

donde 
\begin_inset Formula $x_{1},\ldots,x_{n}$
\end_inset

 representan variables de dominio y 
\begin_inset Formula $P$
\end_inset

 representa una fórmula compuesta por átomos, como era el caso en el cálculo
 relacional de tuplas.
 Los átomos del cálculo relacional de dominios tienen una de las formas
 siguientes:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle x_{1},\ldots,x_{n}\right\rangle \in r$
\end_inset

, donde 
\begin_inset Formula $r$
\end_inset

 es una relación con 
\begin_inset Formula $n$
\end_inset

 atributos y 
\begin_inset Formula $x_{1},\ldots,x_{n}$
\end_inset

 son variables de dominio o constantes de dominio.
\end_layout

\begin_layout Itemize
\begin_inset Formula $x\Theta y$
\end_inset

, donde 
\begin_inset Formula $x$
\end_inset

 e 
\begin_inset Formula $y$
\end_inset

 son variables de dominio y 
\begin_inset Formula $\Theta$
\end_inset

 es un operador de comparación.
\end_layout

\begin_layout Itemize
\begin_inset Formula $x\Theta c$
\end_inset

, donde 
\begin_inset Formula $x$
\end_inset

 es una variable de dominio, 
\begin_inset Formula $\Theta$
\end_inset

 es un operador de comparación y 
\begin_inset Formula $c$
\end_inset

 es una constante del dominio del atributo para el que 
\begin_inset Formula $x$
\end_inset

 es una variable de dominio.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Las fórmulas se construyen a partir de los átomos usando las reglas siguientes:
\end_layout

\begin_layout Itemize
Los átomos son fórmulas.
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $P_{1}$
\end_inset

 es una fórmula, también lo son 
\begin_inset Formula $\neg P_{1}$
\end_inset

 y 
\begin_inset Formula $\left(P_{1}\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $P_{1}$
\end_inset

 y 
\begin_inset Formula $P_{2}$
\end_inset

 son fórmulas, también lo son 
\begin_inset Formula $P_{1}\lor P_{2}$
\end_inset

, 
\begin_inset Formula $P_{1}\land P_{2}$
\end_inset

 y 
\begin_inset Formula $P_{1}\Rightarrow P_{2}$
\end_inset

.
\end_layout

\begin_layout Itemize
Si 
\begin_inset Formula $P_{1}\left(x\right)$
\end_inset

 es una fórmula en 
\begin_inset Formula $x$
\end_inset

, donde 
\begin_inset Formula $x$
\end_inset

 es una variable de dominio, también son formulas 
\begin_inset Formula $\exists x\left(P_{1}\left(x\right)\right)$
\end_inset

 y 
\begin_inset Formula $\forall x\left(P_{1}\left(s\right)\right)$
\end_inset

.
\end_layout

\begin_layout Section
Equivalencia con calculo de tuplas
\end_layout

\begin_layout Itemize
COMPLETAR.
\end_layout

\begin_layout Itemize
COMPLETAR.
\end_layout

\begin_layout Itemize
COMPLETAR.
\end_layout

\begin_layout Itemize
COMPLETAR.
\end_layout

\begin_layout Itemize
COMPLETAR.
\end_layout

\begin_layout Itemize
COMPLETAR.
\end_layout

\begin_layout Part
Normalización
\end_layout

\begin_layout Chapter
Dependencias funcionales
\end_layout

\begin_layout Standard
COMPLETAR.
\end_layout

\begin_layout Chapter
Formas normales
\end_layout

\begin_layout Standard
COMPLETAR.
\end_layout

\begin_layout Part
SQL
\end_layout

\begin_layout Chapter
DML
\end_layout

\begin_layout Section
Consultas
\end_layout

\begin_layout Subsection
Consultas básicas
\end_layout

\begin_layout Standard
La estructura básica de una expresión SQL consta de tres cláusulas: 
\emph on
select
\emph default
, 
\emph on
from
\emph default
 y 
\emph on
where
\emph default
.
\end_layout

\begin_layout Itemize
La cláusula 
\emph on
select
\emph default
 se corresponde con la operación proyección del álgebra relacional.
 Se usa para obtener una relación de los atributos deseados en el resultado
 de una consulta.
\end_layout

\begin_layout Itemize
La cláusula 
\emph on
from
\emph default
 se corresponde con la operación producto cartesiano del álgebra relacional.
 Genera una lista de las relaciones que deben ser analizadas en la evaluación
 de la expresión.
\end_layout

\begin_layout Itemize
La cláusula 
\emph on
where
\emph default
 se corresponde con el predicado selección del álgebra relacional.
 Es un predicado que engloba a los atributos de las relaciones que aparecen
 en la cláusula 
\emph on
from
\emph default
.
\end_layout

\begin_layout Standard
Las consultas habituales de SQL tienen la forma:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

SELECT [DISTINCT] a1,...,an FROM r1,...,rm WHERE P [ORDER BY aj1,...,ajk]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde cada 
\begin_inset Formula $a_{i}$
\end_inset

 representa un atributo, cada 
\begin_inset Formula $r_{i}$
\end_inset

 es una tabla y 
\begin_inset Formula $P$
\end_inset

 es un predicado.
 Si se pretenden todos los atributos puede utilizarse el símbolo 
\begin_inset Quotes fld
\end_inset

*
\begin_inset Quotes frd
\end_inset

.
 Al omitirse la cláusula 
\emph on
where
\emph default
, el predicado 
\begin_inset Formula $P$
\end_inset

 es cierto.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
A diferencia de la expresión del álgebra relacional, el resultado de la
 consulta SQL puede contener varias copias de algunas tuplas.
 Para evitar este comportamiento se debe agregar la clausula 
\emph on
distinct
\emph default
 luego de 
\emph on
select
\emph default
.
\end_layout

\begin_layout Standard
La cláusula 
\emph on
from
\emph default
 define por sí misma un producto cartesiano de las relaciones que aparecen
 en la cláusula.
\end_layout

\begin_layout Standard
SQL proporciona un mecanismo para renombrar tanto relaciones como atributos.
 Utiliza la cláusula 
\emph on
as
\emph default
 de la forma siguiente:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

nombre_viejo AS nombre_nuevo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La cláusula as puede aparecer tanto en la cláusula 
\emph on
select
\emph default
 como en la cláusula 
\emph on
from
\emph default
.
\end_layout

\begin_layout Standard
La cláusula 
\emph on
order by
\emph default
 hace que las tuplas del resultado de una consulta se presenten en un cierto
 orden.
 De manera predeterminada, la cláusula order by coloca los elementos en
 orden ascendente.
 Para especificar el tipo de ordenación se puede especificar 
\emph on
desc
\emph default
 para orden descendente o 
\emph on
asc
\emph default
 para orden ascendente.
 Además, se puede ordenar con respecto a más de un atributo.
\end_layout

\begin_layout Standard
En la práctica, SQL puede convertir la expresión en una forma equivalente
 que puede ser procesada de manera más eficiente.
\end_layout

\begin_layout Subsection
Funciones de agregado
\end_layout

\begin_layout Standard
Las funciones de agregación son funciones que toman una colección (un conjunto
 o multiconjunto) de valores como entrada y devuelven un solo valor.
 SQL ofrece cinco funciones de agregación incorporadas:
\end_layout

\begin_layout Itemize
Promedio: 
\emph on
avg
\emph default
.
\end_layout

\begin_layout Itemize
Mínimo: 
\emph on
min
\emph default
.
\end_layout

\begin_layout Itemize
Máximo: 
\emph on
max
\emph default
.
\end_layout

\begin_layout Itemize
Total: 
\emph on
sum
\emph default
.
\end_layout

\begin_layout Itemize
Recuento: 
\emph on
count
\emph default
.
\end_layout

\begin_layout Standard
Los datos de entrada para 
\emph on
sum
\emph default
 y 
\emph on
avg
\emph default
 deben ser una colección de números, pero los otros operadores también pueden
 operar sobre colecciones de datos de tipo no numérico como las cadenas
 de caracteres.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
A modo de ejemplo, considérese la consulta 
\begin_inset Quotes fld
\end_inset

Determinar el saldo total de las cuentas de las sucursales de Rosario
\begin_inset Quotes frd
\end_inset

.
 Esta consulta se puede formular del modo siguiente:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

SELECT SUM(saldo) FROM cuenta WHERE ciudad = 
\begin_inset Quotes fld
\end_inset

Rosario
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Agrupamiento
\end_layout

\begin_layout Standard
Existen circunstancias en las cuales sería deseable aplicar las funciones
 de agregación no sólo a un único conjunto de tuplas sino también a un grupo
 de conjuntos de tuplas; esto se especifica en SQL mediante la cláusula
 
\emph on
group by
\emph default
.
 El atributo o atributos especificados en la cláusula 
\emph on
group by
\emph default
 se usan para formar grupos.
 Las tuplas con el mismo valor en todos los atributos de la cláusula group
 by constituyen un mismo grupo.
\end_layout

\begin_layout Standard
Como ejemplo, considérese la consulta 
\begin_inset Quotes fld
\end_inset

Determinar los saldo medios de las sucursales de cada ciudad
\begin_inset Quotes frd
\end_inset

.
 Esta consulta se formula del modo siguiente:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

SELECT nombre, AVG(saldo) FROM cuenta GROUP BY ciudad
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A veces resulta útil establecer una condición que se aplique a los grupos
 en vez de a las tuplas.
 Por ejemplo, puede que solo estemos interesados en las sucursales de Rosario
 en las que el saldo medio de las cuentas sea superior a 1000.
 Esta condición no se aplica a una sola tupla, sino a cada grupo creado
 por la cláusula 
\emph on
group by
\emph default
.
 Para expresar este tipo de consultas se utiliza la cláusula 
\emph on
having
\emph default
 de SQL.
 SQL aplica los predicados de la cláusula 
\emph on
having
\emph default
 una vez formados los grupos, de modo que se puedan usar las funciones de
 agregación.
 Esta consulta se expresa en SQL del modo siguiente:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

SELECT nombre, AVG(saldo) FROM cuenta GROUP BY ciudad HAVING AVG(saldo)
 > 1000
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Subconsultas
\end_layout

\begin_layout Standard
SQL proporciona un mecanismo para anidar subconsultas.
 Las subconsultas son expresiones 
\emph on
select
\emph default
 
\emph on
from
\emph default
 
\emph on
where
\emph default
 que están anidadas dentro de otra consulta.
 Una finalidad habitual de las subconsultas es llevar a cabo comprobaciones
 de pertenencia a conjuntos.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
La conectiva 
\emph on
in
\emph default
 comprueba la pertenencia a un conjunto, donde el conjunto es la colección
 de valores resultado de una cláusula 
\emph on
select
\emph default
.
 La conectiva 
\emph on
not in
\emph default
 comprueba la no pertenencia a un conjunto.
\end_layout

\begin_layout Standard
La forma de este tipo de consultas es:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

SELECT a1,...,an FROM r1,...,rm WHERE ai [NOT] IN (subconsulta)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Clausula exists
\end_layout

\begin_layout Standard
SQL incluye la posibilidad de comprobar si las subconsultas tienen alguna
 tupla en su resultado.
 El constructor 
\emph on
exists
\emph default
 devuelve el valor true si su argumento subconsulta no resulta vacía.
 Mediante el constructor 
\emph on
not exists
\emph default
 se puede comprobar la inexistencia de tuplas en el resultado de las subconsulta
s.
\end_layout

\begin_layout Standard
La forma de este tipo de consultas es:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

SELECT a1,...,an FROM r1,...,rm WHERE [NOT] EXISTS (subconsulta)
\end_layout

\end_inset


\end_layout

\begin_layout Section
Altas, bajas y modificaciones
\end_layout

\begin_layout Standard
Las tablas recién creadas están inicialmente vacías.
 Se puede utilizar el comando 
\emph on
insert
\emph default
 para añadir datos a la tabla.
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

INSERT INTO nombre VALUES (v1,...,vn)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los valores se especifican en el orden en que se relacionan los atributos
 correspondientes en el esquema de la relación.
\end_layout

\begin_layout Standard
Las solicitudes de borrado se expresan casi igual que las consultas.
 Solo se pueden borrar tuplas completas; no se pueden borrar solo valores
 de atributos concretos.
 SQL expresa los borrados mediante:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

DELETE FROM nombre WHERE P
\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $P$
\end_inset

 es un predicado.
\end_layout

\begin_layout Standard
En determinadas situaciones puede ser deseable modificar un valor dentro
 de una tupla sin cambiar todos los valores de la misma.
 Para este tipo de situaciones se puede utilizar la instrucción 
\emph on
update
\emph default
.
 Al igual que ocurre con 
\emph on
insert
\emph default
 y 
\emph on
delete
\emph default
, se pueden elegir las tuplas que se van a actualizar mediante una consulta.
 La sintaxis general es la siguiente:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

UPDATE nombre SET campo = valor WHERE P
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
DDL
\end_layout

\begin_layout Section
Tipos básicos de dominios
\end_layout

\begin_layout Standard
La norma SQL soporta gran variedad de tipos de dominio predefinidos, entre
 ellos:
\end_layout

\begin_layout Itemize

\emph on
char(n)
\emph default
: Una cadena de caracteres de longitud fija, con una longitud 
\begin_inset Formula $n$
\end_inset

 especificada por el usuario.
\end_layout

\begin_layout Itemize

\emph on
varchar(n)
\emph default
: Una cadena de caracteres de longitud variable con una longitud máxima
 
\begin_inset Formula $n$
\end_inset

 especificada por el usuario.
\end_layout

\begin_layout Itemize

\emph on
int
\emph default
: Un entero (un subconjunto finito de los enteros dependiente de la máquina).
\end_layout

\begin_layout Itemize

\emph on
smallint
\emph default
: Un entero pequeño (un subconjunto dependiente de la máquina del tipo de
 dominio entero).
\end_layout

\begin_layout Itemize

\emph on
numeric(p, d)
\emph default
: Un número de coma fija, cuya precisión la especifica el usuario.
 El número está formado por 
\begin_inset Formula $p$
\end_inset

 dígitos (más el signo), y de esos 
\begin_inset Formula $p$
\end_inset

 dígitos, 
\begin_inset Formula $d$
\end_inset

 pertenecen a la parte decimal.
 Así, 
\emph on
numeric(3,1)
\emph default
 permite que el número 
\emph on
44.5
\emph default
 se almacene exactamente, pero ni 
\emph on
444.5
\emph default
 ni 
\emph on
0.32
\emph default
 se pueden almacenar exactamente en un campo de este tipo.
\end_layout

\begin_layout Itemize

\emph on
real
\emph default
, 
\emph on
double precision
\emph default
: Números de coma flotante y números de coma flotante de doble precisión,
 con precisión dependiente de la máquina.
\end_layout

\begin_layout Itemize

\emph on
float(n)
\emph default
: Un número de coma flotante cuya precisión es, al menos, de 
\begin_inset Formula $n$
\end_inset

 dígitos.
\end_layout

\begin_layout Itemize

\emph on
date
\emph default
: Una fecha de calendario que contiene el año (de cuatro cifras), el mes
 y el día del mes.
\end_layout

\begin_layout Itemize

\emph on
time
\emph default
: La hora del día, en horas, minutos y segundos.
 Se puede usar una variante, 
\emph on
time(p)
\emph default
, para especificar el número de cifras decimales para los segundos (el valor
 predeterminado es 
\begin_inset Formula $0$
\end_inset

).
\end_layout

\begin_layout Itemize

\emph on
timestamp
\emph default
: Una combinación de 
\emph on
date
\emph default
 y 
\emph on
time
\emph default
.
 Se puede usar una variante, 
\emph on
timestamp(p)
\emph default
, para especificar el número de cifras decimales para los segundos (el valor
 predeterminado es 
\begin_inset Formula $6$
\end_inset

).
\end_layout

\begin_layout Section
Altas, bajas y modificaciones
\end_layout

\begin_layout Standard
Las tablas se definen mediante el comando 
\emph on
create table
\emph default
:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

CREATE TABLE nombre(a1 d1,...,an dn)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde cada 
\begin_inset Formula $a_{i}$
\end_inset

 es el nombre de un atributo de la relación y 
\begin_inset Formula $d_{i}$
\end_inset

 es el dominio de los valores de dicho atributo.
\end_layout

\begin_layout Standard
Para eliminar una relación de una base de datos SQL se utiliza el comando
 drop table.
 Este comando elimina de la base de datos toda la información de la relación:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

DROP TABLE nombre
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una vez eliminada, no se puede insertar ninguna tupla en dicha relación,
 a menos que se vuelva a crear con la instrucción 
\emph on
create table
\emph default
.
\end_layout

\begin_layout Standard
El comando 
\emph on
alter table
\emph default
 se utiliza para añadir atributos a una relación existente.
 Se asigna a todas las tuplas de la relación un valor nulo como valor del
 atributo nuevo.
 La forma del comando alter table es:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

ALTER TABLE nombre ADD a d [BEFORE b]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $a$
\end_inset

 es el nombre del atributo que se desea añadir y 
\begin_inset Formula $d$
\end_inset

 es el dominio del atributo.
 Se pueden eliminar atributos de una relación utilizando el comando:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

ALTER TABLE nombre DROP a
\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Para crear un indice y acelerar la búsqueda sobre un campo en una tabla
 se utiliza el comando 
\emph on
create index
\emph default
:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

CREATE [UNIQUE] INDEX nombre ON (a1 [ASC|DESC],...)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si lo que se desea es borrar el indice, se debe utilizar la siguiente instrucció
n:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

DROP INDEX nombre
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integridad
\end_layout

\begin_layout Standard
Las restricciones de integridad garantizan que las modificaciones realizadas
 en la base de datos por los usuarios autorizados no den lugar a una pérdida
 de la consistencia de los datos.
\end_layout

\begin_layout Standard
Existen tres tipos de restricciones de integridad:
\end_layout

\begin_layout Itemize
De dominio.
\end_layout

\begin_layout Itemize
De las entidades
\end_layout

\begin_layout Itemize
Referencial.
\end_layout

\begin_layout Standard
Como se estudio previamente, el comando 
\emph on
create table
\emph default
 permite especificar reglas de integridad al indicar los dominios de los
 atributos.
 También es posible exigir que un campo no acepte valores nulos, que sea
 único o que satisfaga algún predicado.
 La sintaxis en estos casos es:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

CREATE TABLE nombre [UNIQUE](a1 d1 [NOT NULL],...,an dn [NOT NULL]) CHECK P
\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\begin_inset Formula $P$
\end_inset

 es un predicado que deben cumplir los atributos.
\end_layout

\begin_layout Standard
Las restricciones de dominio son específicas porque se refieren a una tabla
 en particular, sin embargo el modelo relacional incluye dos reglas generales
 de integridad que se aplican a toda la base de datos: las claves primarias
 y las claves ajenas.
 Para definir una clave primaria se utiliza la sentencia:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

CREATE TABLE nombre (a1 d1,...,an dn, PRIMARY KEY (aj1,...,ajm))
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La especificación de clave primaria determina que los atributos 
\begin_inset Formula $a_{j1},\ldots,a_{jm}$
\end_inset

 forman la clave primaria de la relación.
 Los atributos de la clave primaria tienen que ser no nulos y únicos; es
 decir, ninguna tupla puede tener un valor nulo para un atributo de la clave
 primaria y ningún par de tuplas de la relación puede ser igual en todos
 los atributos de la clave primaria
\end_layout

\begin_layout Standard
A menudo se desea garantizar que el valor que aparece en una relación para
 un conjunto dado de atributos aparezca también para un conjunto determinado
 de atributos en otra relación.
 Esta condición se denomina integridad referencial.
 Las claves externas pueden especificarse como parte de la instrucción de
 SQL 
\emph on
create table
\emph default
 mediante la cláusula 
\emph on
foreign key
\emph default
.
\end_layout

\begin_layout Standard
Para cada clave ajena el diseñador de la base de datos debe responder tres
 preguntas:
\end_layout

\begin_layout Itemize
¿Puede aceptar nulos esa clave ajena?
\end_layout

\begin_layout Itemize
¿Qué deberá suceder si hay un intento de eliminar el objetivo de una referencia
 de clave ajena?
\end_layout

\begin_layout Itemize
¿Qué deberá suceder si hay un intento de modificar la clave primaria del
 objetivo de una referencia de clave ajena?
\end_layout

\begin_layout Standard
Formalmente, sean 
\begin_inset Formula $r_{1}\left(R_{1}\right)$
\end_inset

 y 
\begin_inset Formula $r_{2}\left(R_{2}\right)$
\end_inset

 relaciones con las claves primarias 
\begin_inset Formula $C_{1}$
\end_inset

 y 
\begin_inset Formula $C_{2}$
\end_inset

 respectivamente, se dice que un subconjunto 
\begin_inset Formula $\alpha$
\end_inset

 de 
\begin_inset Formula $R_{2}$
\end_inset

 es una clave externa que hace referencia a 
\begin_inset Formula $C_{1}$
\end_inset

 de la relación 
\begin_inset Formula $r_{1}$
\end_inset

 si se exige que, para cada tupla 
\begin_inset Formula $t_{2}$
\end_inset

 de 
\begin_inset Formula $r_{2}$
\end_inset

, deba haber una tupla 
\begin_inset Formula $t_{1}$
\end_inset

 de 
\begin_inset Formula $r_{1}$
\end_inset

 tal que 
\begin_inset Formula $t_{1}\left[C_{1}\right]=t_{2}\left[\alpha\right]$
\end_inset

.
\end_layout

\begin_layout Standard
La sintaxis para crear una restricción de integridad referencial es:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline false
status open

\begin_layout Plain Layout

CREATE TABLE nombre (a1 d1,...,an dn,
\end_layout

\begin_layout Plain Layout

                     FOREIGN KEY ai REFERENCES tabla(campo)
\end_layout

\begin_layout Plain Layout

                     [ON UPDATE RESTRICT|CASCADE|SET NULL)]
\end_layout

\begin_layout Plain Layout

                     [ON DELETE RESTRICT|CASCADE|SET NULL)]
\end_layout

\begin_layout Plain Layout

                    )
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Otras características
\end_layout

\begin_layout Section
Vistas
\end_layout

\begin_layout Standard
Hasta este momento los ejemplos se han limitado a operar en el nivel de
 los modelos lógicos.
 Es decir, se ha dado por supuesto que las relaciones facilitadas son las
 relaciones reales almacenadas en la base de datos.
\end_layout

\begin_layout Standard
No resulta deseable que todos los usuarios vean el modelo lógico completo.
 Las consideraciones de seguridad pueden exigir que se oculten ciertos datos
 a los usuarios.
 Aparte de las consideraciones de seguridad, puede que se desee crear un
 conjunto personalizado de relaciones que se adapte mejor a la intuición
 de un usuario determinado que el modelo lógico.
\end_layout

\begin_layout Standard
Las relaciones que no forman parte del modelo lógico pero se hacen visibles
 a los usuarios como relaciones virtuales se denominan vistas.
 Es posible definir un gran número de vistas de cualquier conjunto dado
 de relaciones reales.
\end_layout

\begin_layout Standard
Las vistas en SQL se definen mediante la instrucción 
\emph on
create view
\emph default
.
 Para definir una vista hay que darle un nombre e indicar la consulta que
 la va a calcular.
 La forma de la instrucción 
\emph on
create view
\emph default
 es:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

CREATE VIEW nombre AS expresion [WITH CHECK OPTION]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
donde 
\emph on
expresión
\emph default
 es cualquier expresión legal de consulta.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Para borrar una vista se utiliza:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

DROP VIEW nombre
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los usuarios pueden trabajar en las vistas como si fueran una tabla real,
 pues el sistema convierte esta operación en una equivalente realizada sobre
 la tabla (o tablas) subyacente.
 La conversión se hace combinando la instrucción del usuario con la expresión
 de la vista.
\end_layout

\begin_layout Section
Seguridad
\end_layout

\begin_layout Standard
Se pueden asignar a los usuarios varios tipos de autorización para diferentes
 partes de la base de datos.
 Por ejemplo:
\end_layout

\begin_layout Itemize
La autorización de lectura.
\end_layout

\begin_layout Itemize
La autorización de inserción.
\end_layout

\begin_layout Itemize
La autorización de actualización.
\end_layout

\begin_layout Itemize
La autorización de borrado.
\end_layout

\begin_layout Standard
Cada uno de estos tipos de autorización se denomina privilegio.
 Se puede conceder a cada usuario todos estos tipos de privilegios, ninguno
 de ellos o una combinación de los mismos sobre partes concretas de la base
 de datos, como puede ser una relación o una vista.
\end_layout

\begin_layout Standard
La norma de SQL incluye los privilegios 
\emph on
select
\emph default
, 
\emph on
insert
\emph default
, 
\emph on
update
\emph default
 y 
\emph on
delete
\emph default
.
 El privilegio 
\emph on
select
\emph default
 autoriza al usuario a leer los datos.
 Además de estas formas de privilegio para el acceso a los datos, SQL soporta
 otros privilegios, como el de crear, borrar o modificar relaciones y ejecutar
 procedimientos.
 
\end_layout

\begin_layout Standard
El usuario que crea una relación nueva recibe de manera automática todos
 los privilegios sobre esa relación.
 Se puede permitir al usuario al que se le ha concedido alguna forma de
 autorización que transmita (conceda) esa autorización a otros usuarios
 o que retire (revoque) una autorización concedida previamente.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
La instrucción 
\emph on
grant
\emph default
 se utiliza para conceder autorizaciones.
 La forma básica de esta instrucción es:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

GRANT SELECT|INSERT|UPDATE|DELETE ON tabla TO usuario
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La autorización 
\emph on
update
\emph default
 puede concederse sobre todos los atributos de la relación o solo sobre
 algunos.
 Si se incluye la autorización 
\emph on
update
\emph default
 en una instrucción grant, la lista de atributos sobre los que se concede
 la autorización 
\emph on
update
\emph default
 puede aparecer entre paréntesis justo después de la palabra clave 
\emph on
update
\emph default
.
 Si se omite la lista de atributos, el privilegio 
\emph on
update
\emph default
 se concede sobre todos los atributos de la relación.
\end_layout

\begin_layout Standard
El privilegio 
\emph on
insert
\emph default
 también puede especificar una lista de atributos; cualquier inserción en
 la relación debe especificar solo esos atributos y el sistema asigna al
 resto de los atributos valores predeterminados (si hay alguno definido
 para ellos) o los define como nulos.
\end_layout

\begin_layout Standard
El nombre de usuario 
\emph on
public
\emph default
 hace referencia a todos los usuarios actuales y futuros del sistema.
 Por tanto, los privilegios concedidos a 
\emph on
public
\emph default
 se conceden de manera implícita a todos los usuarios actuales y futuros.
\end_layout

\begin_layout Standard
Para retirar una autorización se emplea la instrucción 
\emph on
revoke
\emph default
.
 Su forma es casi idéntica a la de 
\emph on
grant
\emph default
:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

REVOKE privilegios ON tabla FROM usuarios
\end_layout

\end_inset


\end_layout

\begin_layout Part
Otros temas
\end_layout

\begin_layout Chapter
Catalogo y optimizaciones
\end_layout

\begin_layout Section
Catalogo
\end_layout

\begin_layout Standard
Un sistema de bases de datos relacionales necesita tener datos sobre las
 tablas, como puede ser su esquema.
 Esta información se denomina diccionario de datos o catálogo del sistema.
 Entre los tipos de información que debe guardar el sistema figuran los
 siguientes:
\end_layout

\begin_layout Itemize
El nombre de las relaciones.
\end_layout

\begin_layout Itemize
El nombre de los atributos de cada relación.
\end_layout

\begin_layout Itemize
El dominio y la longitud de los atributos.
\end_layout

\begin_layout Itemize
El nombre de las vistas definidas en la base de datos, y la definición de
 esas vistas.
\end_layout

\begin_layout Itemize
Las restricciones de integridad (por ejemplo, las restricciones de las claves).
\end_layout

\begin_layout Standard
Además, muchos sistemas guardan los siguientes datos de los usuarios del
 sistema:
\end_layout

\begin_layout Itemize
El nombre de los usuarios autorizados.
\end_layout

\begin_layout Itemize
La autorización y la información sobre las cuentas de los usuarios.
\end_layout

\begin_layout Itemize
Las contraseñas u otra información utilizada para autentificar a los usuarios.
\end_layout

\begin_layout Standard
Por ultimo, la base de datos puede guardar información estadística y descriptiva
 sobre las relaciones, como:
\end_layout

\begin_layout Itemize
El número de filas de cada tabla.
\end_layout

\begin_layout Itemize
El método de almacenamiento utilizado para cada relación.
\end_layout

\begin_layout Standard
El catalogo esta almacenado en forma de tablas dinámicas que mantiene el
 DBMS, y utiliza esta información para chequear autorizaciones y optimizar
 las consultas entre otras cosas.
 Algunas de las tablas del catalogo son:
\end_layout

\begin_layout Itemize

\noun on
Systables
\noun default
: Esta tabla contiene una fila por cada tabla del sistema.
 Proporciona el nombre de la tabla, usuario, cantidad de columnas y otros
 datos.
\end_layout

\begin_layout Itemize

\noun on
Syscolumns
\noun default
: Esta table contiene una fila por cada columna de cada tabla mencionada
 en la tabla anterior.
 Proporciona el nombre de la columna, de la tabla a la cual pertenece, dominio,
 etc.
\end_layout

\begin_layout Itemize

\noun on
Sysindexes
\noun default
: Contiene una fila por cada indice en el sistema.
 Proporciona nombre del indice, nombre de la tabla indexada, creador, etc.
\end_layout

\begin_layout Itemize

\noun on
Sysuser
\noun default
: Contiene una fila por cada usuario en el sistema.
 Proporciona el nombre del usuario, clave de acceso, nivel de privilegio,
 etc.
\end_layout

\begin_layout Itemize

\noun on
Systabauth
\noun default
: Contiene información sobre privilegios de acceso a nivel tabla.
 Proporciona propietario de la tabla, beneficiario del privilegio, nombre
 de la tabla, código de privilegio, etc.
\end_layout

\begin_layout Itemize

\noun on
Syscolauth
\noun default
: Contiene una fila por cada privilegio columna atribuido a un usuario.
 Proporciona: propietario de la tabla, beneficiario del privilegio, nombre
 de la columna, etc.
\end_layout

\begin_layout Itemize

\noun on
Sysviews
\noun default
: Contiene sentencias de definición de vistas.
 Proporciona nombre de la vista, creador, instrucción, etc.
\end_layout

\begin_layout Standard
Como la información del catalogo esta almacenada en forma de tablas, estas
 pueden consultarse normalmente mediante SQL.
 Por ejemplo, puede consultarse cuales tablas tienen una columna 
\emph on
sCod
\emph default
 con la instrucción:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

SELECT tbname FROM syscolumns WHERE name = 
\begin_inset Quotes fld
\end_inset

sCod
\begin_inset Quotes frd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El catalogo no se puede actualizar utilizando 
\emph on
update
\emph default
, 
\emph on
delete
\emph default
 o 
\emph on
insert.
\end_layout

\begin_layout Section
Optimizaciones
\end_layout

\begin_layout Standard
La optimización de consultas es el proceso de selección del plan de evaluación
 de las consultas más eficiente de entre las muchas estrategias generalmente
 disponibles para el procesamiento de una consulta dada, especialmente si
 la consulta es compleja.
 No se espera que los usuarios escriban las consultas de modo que puedan
 procesarse de manera eficiente.
 Por el contrario, se espera que el sistema cree un plan de evaluación que
 minimice el coste de la evaluación de las consultas.
 Ahí es donde entra en acción la optimización de consultas.
\end_layout

\begin_layout Standard
La diferencia en coste (en términos de tiempo de evaluación) entre una estrategi
a buena y una mala suele ser sustancial, y puede resultar de varios órdenes
 de magnitud.
 Por tanto, merece la pena que el sistema invierta una cantidad importante
 de tiempo en la selección de una buena estrategia para el procesamiento
 de la consulta, aunque esa consulta solo se ejecute una vez.
\end_layout

\begin_layout Standard
A modo de ejemplo, consideremos la siguiente consulta, donde la tabla autores
 tiene 100 filas y la tabla libros tiene 10.000 de los cuales solo 50 son
 de terror:
\end_layout

\begin_layout Standard
\align center
\begin_inset Formula 
\[
\Pi_{nombre}\left[\sigma_{autor=id\land genero=rerror}\left(libros\times autores\right)\right]
\]

\end_inset


\end_layout

\begin_layout Standard
Para calcular el producto cartesiano es necesario leer 100 veces cada uno
 de los 10.000 libros, es decir 1.000.000 lecturas.
 Dicha cantidad seguramente no quepa en la memoria principal por lo que
 habrá que realizar 1.000.000 grabaciones de tuplas al disco.
 Sobre ese resultado se deben filtrar el genero terror por lo que hay que
 volver a leer 1.000.000 de filas del disco.
 Todo esto nos ha costado 3.000.000 de accesos al disco, para una tabla final
 de 50 filas.
\end_layout

\begin_layout Standard
En forma alternativa, podríamos haber planteado la siguiente consulta equivalent
e:
\end_layout

\begin_layout Standard
\align center
\begin_inset Formula $\Pi_{nombre}\left\{ \sigma_{id=autor}\left[\sigma_{genero=terror}\left(libros\right)\times autores\right]\right\} $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset

De esta manera necesitamos 10.000 accesos al disco para producir las primeras
 50 filas y luego leemos 50 veces los 100 autores para juntar los resultados,
 que ahora si entran en memoria.
 En total hemos necesitado 15.000 accesos al disco para generar la misma
 consulta.
 Con solo cambiar el orden de las operaciones, hemos obtenido una consulta
 200 veces mas rápida.
\end_layout

\begin_layout Standard
Ademas, si la tabla de libros estuviera indexada por genero, solo necesitaríamos
 50 accesos a disco en vez de 10.000.
 Esto incrementa notablemente a una perfomance 600 veces mas rápida.
\end_layout

\begin_layout Standard
El proceso de optimización consiste en transformar la consulta al álgebra
 relacionar y tratar de encontrar una forma equivalente mas eficiente que
 la original.
\end_layout

\begin_layout Standard
En general se intenta efectuar las selecciones antes que las reuniones,
 pues reducen el tamaño de entrada a la reunión y el tamaño de salida por
 lo que quizás se pueda conservar dicho resultado en la memoria.
\end_layout

\begin_layout Standard
Otra estrategia de optimización es convertir cada condición de restricción
 a una condición en forma normal conjuntiva.
 Es decir, a un conjunto de disyunciones enlazadas por conjunciones.
 Por ejemplo: 
\begin_inset Formula $\text{\ensuremath{p\lor\left(q\land r\right)\equiv\left(p\lor q\right)\land\left(p\lor r\right)}}$
\end_inset

.
 Esto tiene la ventaja de que si una de las disyunciones es falsa, no es
 necesario seguir evaluando el resto.
\end_layout

\begin_layout Standard
En caso de proyecciones sobre una misma tabla, se puede hacer caso omiso
 a todas, a excepción de la ultima.
 También es posible intercambiar el orden de una restricción seguida de
 una proyección para poder aprovechar mas optimizaciones.
\end_layout

\begin_layout Standard
Luego de convertir la consulta, el optimizador deberá evaluarla, considerando:
\end_layout

\begin_layout Itemize
La distribución de los datos almacenados.
\end_layout

\begin_layout Itemize
La existencia de índices u otras rutas de acceso.
\end_layout

\begin_layout Itemize
El agrupamiento físico de los registros, etc.
\end_layout

\begin_layout Itemize
Nro.
 de tuplas de cada relación.
\end_layout

\begin_layout Itemize
Nro.
 de valores distintos de un atributo.
\end_layout

\begin_layout Itemize
Tamaño del registro de una relación.
\end_layout

\begin_layout Standard
En base a ello, construye planes de consulta candidatos y elige el de menor
 costo.
 El costo es en esencia, una estimación de las operaciones de entrada/salida
 de disco requeridas.
\end_layout

\begin_layout Chapter
Recuperación y concurrencia
\end_layout

\begin_layout Section
Recuperación
\end_layout

\begin_layout Standard
El término transacción hace referencia a un conjunto de operaciones que
 forman una única unidad lógica de trabajo.
 Por ejemplo, una transferencia de fondos desde una cuenta corriente a otra
 es una operación simple desde el punto de vista del cliente; sin embargo,
 en el sistema de base de datos, está compuesta internamente por varias
 operaciones.
\end_layout

\begin_layout Standard
Consideremos la secuencia de operaciones para efectuar una transferencia
 bancaria:
\end_layout

\begin_layout Standard
\align center
\begin_inset listings
lstparams "language=SQL"
inline false
status open

\begin_layout Plain Layout

EXEC SQL WHENEVER SQLERROR GO TO ANULAR;
\end_layout

\begin_layout Plain Layout

EXEC SQL UPDATE cuentas SET saldo = saldo + 100 WHERE cliente = 
\begin_inset Quotes fld
\end_inset

Ariel
\begin_inset Quotes frd
\end_inset

;
\end_layout

\begin_layout Plain Layout

EXEC SQL UPDATE cuentas SET saldo = saldo - 100 WHERE cliente = 
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

;
\end_layout

\begin_layout Plain Layout

EXEC SQL COMMIT;
\end_layout

\begin_layout Plain Layout

GO TO TERMINAR;
\end_layout

\begin_layout Plain Layout

ANULAR:
\end_layout

\begin_layout Plain Layout

	EXEC SQL ROLLBACK;
\end_layout

\begin_layout Plain Layout

TERMINAR:
\end_layout

\begin_layout Plain Layout

	RETURN;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Evidentemente es esencial que tengan lugar todas las operaciones o que,
 en caso de fallo, ninguna de ellas se produzca.
 Sería inaceptable efectuar el deposito en la cuenta de destino y que no
 se abonase en la cuenta de origen.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
El DBMS tiene un componente llamado manejador de transacciones que se encargara
 de ejecutar alguna de las modificaciones y si se presenta una falla antes
 de que llegue a término normal de la transacción, se anularán esas modificacion
es.
 Es decir, la transacción se lleva a cabo en su totalidad, o se cancela
 en su totalidad (como sí jamás se hubiera ejecutado).
\end_layout

\begin_layout Standard
De eso precisamente se encargan las instrucciones 
\emph on
commit
\emph default
 y 
\emph on
rollback
\emph default
:
\end_layout

\begin_layout Itemize
Commit le dice al manejador de transacciones que ha finalizado con éxito
 una unidad lógica, que la BD está de nuevo en un estado consistente y que
 se pueden comprometer o hacer permanentes todas las modificaciones efectuadas.
\end_layout

\begin_layout Itemize
Rollback señala el término no exitoso de la transacción.
 Le dice al manejador de transacciones que algo salió mal, que la BD podría
 estar en un estado inconsistente y que todas las modificaciones deben retrocede
r o anularse.
\end_layout

\begin_layout Standard
Para que esto sea posible, el sistema mantiene un registro o diario donde
 se registran los detalles de todas las operaciones de actualización, en
 particular los valores inicial y final del objeto modificado.
 Si resulta necesario anular alguna modificación, el sistema puede utilizar
 la entrada correspondiente del registro para restaurar el valor original
 del objeto modificado.
 El registro se deberá grabar físicamente antes de poderse completar el
 procesamiento de una instrucción 
\emph on
commit
\emph default
.
 Así el procedimiento de reinicio recuperará todas las transacciones completadas
 con éxito pero cuyas modificaciones no lograron grabarse físicamente antes
 de la caída.
\end_layout

\begin_layout Standard
Se le llama punto de sincronización al límite entre dos transacciones consecutiv
as, de modo que corresponde al final de una unidad de trabajo, y por tanto
 al punto en el cual la BD está (o debería estar) en un estado de consistencia.
 Las únicas operaciones que establecen un punto de sincronización son 
\emph on
commit
\emph default
, 
\emph on
rollback
\emph default
 y el inicio de un programa.
\end_layout

\begin_layout Standard
Una sola ejecución de programa puede incluir varias transacciones.
 Si una transacción se compromete con éxito, el sistema deberá garantizar
 el establecimiento permanente de sus modificaciones en la BD, aún si el
 sistema cae en el instante siguiente.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Para poder saber cuales transacciones anular y cuales volver a realizar
 luego de una caída; cada cierto intervalo previamente establecido, el sistema
 
\begin_inset Quotes fld
\end_inset

establece un punto de revisión
\begin_inset Quotes frd
\end_inset

 de manera automática.
 El registro de punto de revisión incluye una lista de todas las transacciones
 que se estaban realizando en el momento de establecerse el punto de revisión.
\end_layout

\begin_layout Standard
Veamos un ejemplo de como se usa la información.
 Se presento una falla en un momento 
\begin_inset Formula $t_{f}$
\end_inset

 y el ultimo punto de verificación fue tomando en el momento 
\begin_inset Formula $t_{v}$
\end_inset

.
 El siguiente cuadro modela la situación:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="13">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{v}$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{f}$
\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tiempo
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="top" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacciones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Linea de tiempo de una falla
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Al reiniciarse el sistema, deberán:
\end_layout

\begin_layout Itemize
Anularse las transacciones del tipo 
\begin_inset Formula $T_{3}$
\end_inset

 y 
\begin_inset Formula $T_{5}$
\end_inset

, pues no llegaron a hacer 
\emph on
commit
\emph default
.
\end_layout

\begin_layout Itemize
Deberán realizarse de nuevo las transacciones del tipo 
\begin_inset Formula $T_{2}$
\end_inset

 y 
\begin_inset Formula $T_{4}$
\end_inset

, pues si lograron hacerlo.
\end_layout

\begin_layout Itemize
Las del tipo 
\begin_inset Formula $T_{1}$
\end_inset

 no entran porque sus modificaciones ya fueron grabadas físicamente en la
 BD en el momento 
\begin_inset Formula $t_{v}$
\end_inset

 como parte del proceso de punto de revisión.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Concurrencia
\end_layout

\begin_layout Subsection
Descripción
\end_layout

\begin_layout Standard
En los sistemas de bases de datos en los que se ejecutan de manera concurrente
 varias transacciones, si no se controlan las actualizaciones de los datos
 compartidos, existe la posibilidad de que las transacciones operen sobre
 estados intermedios inconsistentes creados por las actualizaciones de otras
 transacciones.
 Esta situación puede dar lugar a actualizaciones erróneas de los datos
 almacenados en la base de datos.
 Por tanto, los sistemas de bases de datos deben proporcionar los mecanismos
 para aislar las transacciones de otras transacciones que se ejecuten de
 manera concurrente.
 Esta propiedad se denomina aislamiento.
\end_layout

\begin_layout Subsection
Problemas
\end_layout

\begin_layout Standard
Los problemas que se pueden presentar en los cuales una transacción correcta
 puede producir un resultado incorrecto debido a una interferencia de otra
 transacción son:
\end_layout

\begin_layout Itemize
El problema de la modificación perdida.
\end_layout

\begin_layout Itemize
El problema de la dependencia no comprometida.
\end_layout

\begin_layout Itemize
El problema del análisis inconsistente.
\end_layout

\begin_layout Standard
Estudiaremos a continuación, en que consisten cada uno de estos problemas
 y como podrían solucionarse.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Problema de la modificación perdida
\end_layout

\begin_layout Standard
Para estudiar este problema, consideremos la situación en la que el cliente
 Damian recibe dos transferencias de dinero simultaneas por 
\begin_inset Formula $\$100$
\end_inset

 y 
\begin_inset Formula $\$200$
\end_inset

.
 El siguiente cuadro modela la situación:
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción A
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

x = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

y = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

x = x + 100
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

y = y + 200
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

actualizarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, x)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

actualizarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, y)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Problema de la modificación perdida
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si el saldo inicial de Damian era 
\begin_inset Formula $\$0$
\end_inset

, el saldo final será de 
\begin_inset Formula $\$200$
\end_inset

 cuando en realidad debería ser de 
\begin_inset Formula $\$300$
\end_inset

, puesto que la segunda transacción a leído el saldo antes de que la primera
 lo actualice.
\end_layout

\begin_layout Subsubsection
Problema de la dependencia no comprometida
\end_layout

\begin_layout Standard
Se presenta cuando se permite a una transacción leer (o modificar) un registro
 que ha sido actualizado por otra transacción y esta última todavía no lo
 ha comprometido.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción A
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

incrementarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, 100)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

extraerDinero(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, 100)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

ROLLBACK
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Problema de la dependencia no comprometida
\end_layout

\end_inset


\end_layout

\end_inset

Si el saldo inicial de Damian era 
\begin_inset Formula $\$0$
\end_inset

, este ha podido retirar un dinero que en realidad nunca fue ingresado,
 ya que por alguna razón la transacción no se llego a comprometer.
\end_layout

\begin_layout Subsubsection
Problema del análisis inconsistente
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción A
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

total = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

x = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Marotte
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

actualizarSaldo(
\begin_inset Quotes fld
\end_inset

Marotte
\begin_inset Quotes frd
\end_inset

, x-100)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

y = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

actualizarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, y-100)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

COMMIT
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

total += consultarSaldo(
\begin_inset Quotes fld
\end_inset

Marotte
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{7}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Problema del análisis inconsistente
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si ambos saldos iniciales eran de 
\begin_inset Formula $\$100$
\end_inset

, la transacción A esta realizando un análisis inconsistente pues ha determinado
 que el saldo total es de 
\begin_inset Formula $\$100$
\end_inset

, cuando en realidad es de 
\begin_inset Formula $\$0$
\end_inset

.
\end_layout

\begin_layout Standard
A diferencia del ejemplo anterior, en este caso A no depende en absoluto
 de una modificación no comprometida, pues B compromete todas sus modificaciones.
\end_layout

\begin_layout Subsection
Soluciones
\end_layout

\begin_layout Standard
Como ejemplo trivial de esquema de control de concurrencia considérese éste:
 una transacción realiza un bloqueo en la base de datos completa antes de
 comenzar y lo libera después de haberse comprometido.
 Mientras una transacción mantiene el bloqueo, no se permite que ninguna
 otra lo obtenga, y todas ellas deben esperar hasta que se libere el bloqueo.
\end_layout

\begin_layout Standard
Como resultado de esta política de bloqueo, solo se puede ejecutar una transacci
ón cada vez.
 Un esquema de control de concurrencia como éste produce un rendimiento
 pobre, ya que fuerza a que las transacciones esperen a que finalicen las
 precedentes para poder comenzar.
 En otras palabras, produce un grado de concurrencia pobre.
\end_layout

\begin_layout Standard
Existen muchos modos mediante los cuales se puede bloquear un elemento de
 datos.
 En este apartado se centra la atención en dos de dichos modos:
\end_layout

\begin_layout Itemize

\noun on
Compartido
\noun default
: Si una transacción 
\begin_inset Formula $T_{i}$
\end_inset

 obtiene un 
\emph on
bloqueo en modo compartido
\emph default
 (denotado por 
\begin_inset Formula $C$
\end_inset

) sobre el elemento 
\begin_inset Formula $Q$
\end_inset

, entonces 
\begin_inset Formula $T_{i}$
\end_inset

 puede leer 
\begin_inset Formula $Q$
\end_inset

 pero no lo puede escribir.
\end_layout

\begin_layout Itemize

\noun on
Exclusivo
\noun default
.
 Si una transacción 
\begin_inset Formula $T_{i}$
\end_inset

 obtiene un 
\emph on
bloqueo en modo exclusivo
\emph default
 (denotado por 
\begin_inset Formula $X$
\end_inset

) sobre el elemento 
\begin_inset Formula $Q$
\end_inset

, entonces 
\begin_inset Formula $T_{i}$
\end_inset

 puede tanto leer como escribir 
\begin_inset Formula $Q$
\end_inset

.
\end_layout

\begin_layout Standard
Es necesario que toda transacción solicite un bloqueo del modo apropiado
 sobre el elemento de datos 
\begin_inset Formula $Q$
\end_inset

 dependiendo de los tipos de operaciones que se vayan a realizar sobre 
\begin_inset Formula $Q$
\end_inset

.
 La petición se hace al gestor de control de concurrencia.
 La transacción puede realizar la operación solo después de que el gestor
 de control de concurrencia conceda el bloqueo a la transacción.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Dado un conjunto de modos de bloqueo, se puede definir sobre ellos una función
 de compatibilidad como se muestra en la siguiente tabla:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $X$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\checked$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\times$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\checked$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $X$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\times$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\times$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\checked$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\checked$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\checked$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\checked$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Matriz de compatibilidad de bloqueo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si a una transacción se le ha denegado un bloqueo, está entrara en modo
 de espera hasta que la otra transacción libere el bloqueo.
\end_layout

\begin_layout Standard
Las solicitudes de bloqueos sobre registros por parte de las transacciones
 son implícitas en condiciones normales.
 Es decir, cuando una transacción lee un registro, adquiere automáticamente
 un bloqueo del tipo 
\begin_inset Formula $C$
\end_inset

 sobre él y cuando una transacción actualiza un registro, adquiere automáticamen
te un bloqueo del tipo 
\begin_inset Formula $X$
\end_inset

 sobre él.
\end_layout

\begin_layout Standard
Observemos ahora como se ha solucionado el problema del análisis inconsistente:
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción A
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

incrementarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, 100)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(X\equiv\checked\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

extraerDinero(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, 100)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(X\equiv\times\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=SQL"
inline true
status open

\begin_layout Plain Layout

ROLLBACK
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Solución del problema de la dependencia no comprometida
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Bloqueo mutuo
\end_layout

\begin_layout Standard
Desafortunadamente, el uso de bloqueos puede conducir a una situación no
 deseada.
 El bloqueo mutuo es una situación en la cual dos o más transacciones están
 en un estado de espera simultáneo y cada uno espera la liberación del otro
 para poder continuar.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción A
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

x = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(C\equiv\checked\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

y = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(C\equiv\checked\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

x = x + 100
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

y = y + 200
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

actualizarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, x)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(X\equiv\times\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

actualizarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, y)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(X\equiv\times\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{7}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bloqueo mutuo en problema de la modificación perdida
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción A
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tiempo
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transacción B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

total = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(C\equiv\checked\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

x = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Marotte
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(C\equiv\checked\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{3}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

actualizarSaldo(
\begin_inset Quotes fld
\end_inset

Marotte
\begin_inset Quotes frd
\end_inset

, x-100)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(X\equiv\checked\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{4}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

y = consultarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(C\equiv\checked\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{5}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

actualizarSaldo(
\begin_inset Quotes fld
\end_inset

Damian
\begin_inset Quotes frd
\end_inset

, y-100)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(X\equiv\times\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline true
status open

\begin_layout Plain Layout

total += consultarSaldo(
\begin_inset Quotes fld
\end_inset

Marotte
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{6}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(C\equiv\times\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{7}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\vdots$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Bloqueo mutuo en problema del análisis inconsistente
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Cuando aparece un bloqueo mutuo, el sistema debe retroceder una de las dos
 transacciones.
 Una vez que se ha provocado el retroceso de una de ellas, se desbloquean
 los elementos de datos que estuvieran bloqueados por la transacción.
 Estos elementos de datos están disponibles entonces para otra transacción,
 la cual puede continuar su ejecución.
\end_layout

\begin_layout Chapter
Sistemas distribuidos
\end_layout

\begin_layout Section
Descripción
\end_layout

\begin_layout Standard
En un sistema distribuido de bases de datos se almacena la base de datos
 en varias computadoras.
 Los medios de comunicación como las redes de alta velocidad o las líneas
 telefónicas pueden poner en contacto las distintas computadoras de un sistema
 distribuido.
 No comparten ni memoria ni discos.
 Las computadoras de un sistema distribuido pueden variar en tamaño y función
 pudiendo abarcar desde las estaciones de trabajo a los grandes sistemas.
\end_layout

\begin_layout Standard
Las principales diferencias entre las bases de datos centralizadas y las
 bases de datos distribuidas son que las bases de datos distribuidas normalmente
 se encuentran en varios lugares geográficos distintos, se administran de
 forma separada y poseen una interconexión más lenta.
 Otra gran diferencia es que en un sistema distribuido existen dos tipos
 de transacciones: locales y globales.
 Una transacción local es aquella que accede a los datos del único sitio
 en el cual se inició la transacción.
 Por otra parte, una transacción global es la que, o bien accede a los datos
 situados en un sitio diferente de aquél en el que se inició la transacción,
 o bien accede a datos de varios sitios distintos.
\end_layout

\begin_layout Standard
Un sistema de base de datos distribuida (BDD) deberá ser capaz de trabajar
 en forma transparente, es decir que la aplicación trabajaría desde un punto
 de vista lógico, como si un solo DBMS ejecutado en una sola máquina administrar
a todos los datos.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Se compone de un conjunto de sitios conectados entre sí mediante algún tipo
 de red de comunicaciones, en el cual cada sitio es un sistema de BD en
 sí mismo, es decir, cada sitio tiene sus BD reales locales, sus propios
 usuarios locales, sus propios DBMS y programas para la administración de
 transacciones.
\end_layout

\begin_layout Section
Ventajas
\end_layout

\begin_layout Standard
Existen varias razones para construir sistemas distribuidos de bases de
 datos, incluyendo el compartimiento de los datos, la autonomía y la disponibili
dad:
\end_layout

\begin_layout Itemize

\noun on
Datos compartidos
\noun default
: La principal ventaja de construir un sistema distribuido de bases de datos
 es poder disponer de un entorno donde los usuarios puedan acceder desde
 una única ubicación a los datos que residen en otras ubicaciones.
\end_layout

\begin_layout Itemize

\noun on
Autonomía
\noun default
: La principal ventaja de compartir datos por medio de distribución de datos
 es que cada ubicación es capaz de mantener un grado de control sobre los
 datos que se almacenan localmente.
 En un sistema centralizado, el administrador de bases de datos de la ubicación
 central controla la base de datos.
 En un sistema distribuido, existe un administrador de bases de datos global
 responsable de todo el sistema.
 Una parte de estas responsabilidades se delegan al administrador de bases
 de datos local de cada sitio.
 Dependiendo del diseño del sistema distribuido de bases de datos, cada
 administrador puede tener un grado diferente de autonomía local.
 La posibilidad de autonomía local es a menudo una de las grandes ventajas
 de las bases de datos distribuidas.
\end_layout

\begin_layout Itemize

\noun on
Disponibilidad
\noun default
: Si un sitio de un sistema distribuido falla, los sitios restantes pueden
 seguir trabajando.
 En particular, si los elementos de datos están replicados en varios sitios,
 una transacción que necesite un elemento de datos en particular puede encontrar
lo en varios sitios.
 De este modo, el fallo de un sitio no implica necesariamente la caída del
 sistema.
 El sistema puede detectar el fallo de un sitio y es posible que sea necesario
 aplicar acciones apropiadas para la recuperación del fallo.
 El sistema no debe seguir utilizando los servicios del sitio que falló.
 Finalmente, cuando el sitio que falló se recupera o se repara, debe haber
 mecanismos disponibles para integrarlo sin problemas de nuevo en el sistema.
 Aunque la recuperación ante un fallo es más compleja en los sistemas distribuid
os que en los sistemas centralizados, la capacidad que tienen muchos sistemas
 de continuar trabajando a pesar del fallo en uno de los sitios produce
 una mayor disponibilidad.
 La disponibilidad es crucial para los sistemas de bases de datos que se
 utilizan en aplicaciones de tiempo real.
\end_layout

\begin_layout Section
Desventajas
\end_layout

\begin_layout Standard
La complejidad de estos sistemas, también los dota de una serie de desventajas.
 A saber:
\end_layout

\begin_layout Itemize
Falta de experiencia generalizada.
\end_layout

\begin_layout Itemize
Si no hay un buen diseño y organización trae mayor complejidad: problemas
 del centralizado y problemas del distribuido.
\end_layout

\begin_layout Itemize
Puede aumentar costos iniciales: Hardware y software de comunicación y distribuc
ión.
\end_layout

\begin_layout Itemize
Se debe aumentar los controles de seguridad respecto a BD centralizadas.
\end_layout

\begin_layout Itemize
Complejidad de los sistemas distribuidos (desde el punto de vista técnico).
\end_layout

\begin_layout Section
Principios fundamentales
\end_layout

\begin_layout Standard
Desde el punto de vista del usuario, un sistema distribuido deberá ser idéntico
 a un sistema no distribuido.
 Es decir que las operaciones de DML no deberán sufrir cambios, aunque las
 operaciones de DDL requerirán cierta ampliación.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Para lograr este cometido, es recomendable respetar las siguientes doce
 reglas:
\end_layout

\begin_layout Enumerate

\noun on
Autonomía local
\noun default
: Los sitios deben ser autónomos.
 Todas las operaciones en un sitio dado se controlan de ese sitio.
 Ningún sitio debe depender de otro para su correcto funcionamiento.
 
\end_layout

\begin_layout Enumerate

\noun on
No dependencia central
\noun default
: Todos los sitios deben tratarse por igual.
 No debe haber dependencia de un sitio central para obtener un servicio.
 Si el sitio central sufriera un desperfecto todo el sistema dejaría de
 funcionar.
\end_layout

\begin_layout Enumerate

\noun on
Operación continua
\noun default
: Nunca debería haber necesidad de apagar el sistema para realizar alguna
 función.
\end_layout

\begin_layout Enumerate

\noun on
Independencia de localización
\noun default
: Los usuarios no deberían necesitar saber dónde están almacenados físicamente
 los datos.
 Debe comportarse desde el punto de vista lógico como si todos los datos
 estuvieran almacenados en su propio sitio local.
\end_layout

\begin_layout Enumerate

\noun on
Independencia de fragmentación
\noun default
: Los usuarios tendrán una vista de los datos con fragmentos combinados
 lógicamente mediante reuniones y uniones apropiadas.
 El optimizador determina a cuáles fragmentos físicos es necesario tener
 acceso para satisfacer cualquier solicitud del usuario.
\end_layout

\begin_layout Enumerate

\noun on
Independencia de replica
\noun default
: Los usuarios deberán comportarse lógicamente como si existiera una sola
 copia aunque en realidad existan varias.
 Debe ser transparente para el usuario.
 Las réplicas son deseable por dos razones: puede producir un mejor desempeño
 (las aplicaciones pueden operar sobre copias locales en vez de tener que
 comunicarse con sitios remotos) y brindan mayor disponibilidad (un objeto
 está disponible para su procesamiento en tanto esté disponible por lo menos
 una copia , al menos para propósitos de recuperación).
\end_layout

\begin_layout Enumerate

\noun on
Procesamiento distribuido
\noun default
: La optimización es más importante en un sistema distribuido que en el
 centralizado.
 Una solicitud de unión de una relación 
\begin_inset Formula $R_{x}$
\end_inset

 almacenada en el sitio 
\begin_inset Formula $X$
\end_inset

 y una 
\begin_inset Formula $R_{y}$
\end_inset

 en 
\begin_inset Formula $Y$
\end_inset

, podría llevarse a cabo: trasladando 
\begin_inset Formula $R_{x}$
\end_inset

 a 
\begin_inset Formula $Y$
\end_inset

, ó trasladando 
\begin_inset Formula $R_{y}$
\end_inset

 a 
\begin_inset Formula $X$
\end_inset

 ó trasladando las dos a un tercer sitio.
 El optimizador distribuido deberá encontrar la estrategia más eficiente.
\end_layout

\begin_layout Enumerate

\noun on
Transacciones distribuidas
\noun default
: En las BDD el sistema debe asegurarse que todos los agentes correspondientes
 a la transacción se comprometan o retrocedan al unísono.
\end_layout

\begin_layout Enumerate

\noun on
Independencia de equipo
\noun default
: Es conveniente ejecutar el mismo DBMS en diferentes equipos y presentar
 al usuario una sola imagen del sistema.
\end_layout

\begin_layout Enumerate

\noun on
Independencia de sistema operativo
\noun default
: Se debe poder ejecutar el mismo DBMS en diferentes equipos y sistemas
 operativos.
\end_layout

\begin_layout Enumerate

\noun on
Independencia de red
\noun default
: Se debe poder manejar varias redes de comunicación distintas.
\end_layout

\begin_layout Enumerate

\noun on
Independencia de DBMS
\noun default
: Los DBMS en los distintos sitios deben manejar la misma interfaz.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"
literal "false"

\end_inset


\noun on
Abraham Silberschatz & Henry Korth
\noun default
 - Fundamentos de Bases de Datos (
\emph on
5ta edición
\emph default
).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset


\noun on
Claudia Deco
\noun default
 - Cátedra de Teoría de Bases de Datos (
\emph on
FCEIA
\emph default
).
\end_layout

\end_body
\end_document
