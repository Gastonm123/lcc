#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{colortbl}
\definecolor{darkgreen}{RGB}{20,155,82}
\definecolor{purple}{RGB}{141,24,143}
\end_preamble
\use_default_options true
\begin_modules
multicol
\end_modules
\maintain_unincluded_children false
\language spanish-mexico
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Exámenes teóricos y prácticos de CSP y Statecharts
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Ejercicios teóricos
\end_layout

\begin_layout Enumerate
Para cada uno de los procesos siguientes, encuentre el proceso secuencial
 equivalente justificando cada paso de su calculo.
\end_layout

\begin_deeper
\begin_layout Enumerate

\color purple
\begin_inset Formula $P=a\to b\to STOP\parallel\left(a\to a\to STOP\sqcap a\to c\to STOP\right)$
\end_inset


\color inherit
.
\end_layout

\begin_layout Enumerate

\color purple
\begin_inset Formula $Q=\left(b\to b\to STOP\square a\to b\to STOP\right)\parallel a\to c\to STOP$
\end_inset


\color inherit
.
\end_layout

\begin_layout Enumerate

\color purple
\begin_inset Formula $R=c\to a\to STOP\parallel\left(a\to b\to STOP\square b\to b\to STOP\right)$
\end_inset


\color inherit
.
\end_layout

\begin_layout Paragraph
Soluciones
\end_layout

\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_layout Enumerate
COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Modele un proceso CSP que debe recibir cien señales en cualquier orden y,
 una vez que las ha recibido a todas, debe comportarse como el proceso 
\color purple

\begin_inset Formula $W$
\end_inset


\color inherit
.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $\alpha$
\end_inset

 el conjunto de todas las señales que puede recibir dicho proceso.
 Si definimos 
\color purple

\begin_inset Formula $P\left(S\right)=x:\alpha\to P\left(S^{\smallfrown}\left\langle x\right\rangle \right)\left\lceil \#S\neq100\right\rceil W$
\end_inset


\color inherit
, entonces el proceso que estamos buscando es: 
\color purple

\begin_inset Formula $P\left(\left\langle \right\rangle \right)$
\end_inset


\color inherit
.
\end_layout

\end_deeper
\begin_layout Enumerate
Explique en pocas líneas el concepto semántico utilizado en CSP que permite
 formalizar la idea de no determinismo.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
Recordemos que 
\color purple

\begin_inset Formula $\boldsymbol{t}\left(P\square Q\right)=\boldsymbol{t}\left(P\sqcap Q\right)$
\end_inset


\color inherit
.
 Este concepto formaliza la idea de cuales son los comportamientos que puede
 tener un proceso, y evidentemente ambos procesos pueden comportarse como
 
\color purple

\begin_inset Formula $P$
\end_inset


\color inherit
 o 
\color purple

\begin_inset Formula $Q$
\end_inset


\color inherit
.
\end_layout

\begin_layout Standard
Por el contrario el no determinismo esta relacionado con la idea de los
 comportamientos que un proceso podría hacer pero finalmente no hace.
 Por ejemplo en el caso 
\color purple

\begin_inset Formula $a\to P\sqcap b\to Q$
\end_inset


\color inherit
 si el entorno ofrece el evento 
\color purple

\begin_inset Formula $a$
\end_inset


\color inherit
 el proceso podría rechazarlo pues prefiere comportarse como 
\color purple

\begin_inset Formula $b\to Q$
\end_inset


\color inherit
 y viceversa; en cambio si ofrece ambos eventos el proceso solo puede rechazar
 uno de ellos.
\end_layout

\begin_layout Standard
Los rechazos de un proceso son el concepto que nos permite formalizar el
 no determinismo y diferenciar entre 
\color purple

\begin_inset Formula $\square$
\end_inset


\color inherit
 y 
\color purple

\begin_inset Formula $\sqcap$
\end_inset


\color inherit
.
\end_layout

\end_deeper
\begin_layout Enumerate
Explique las diferencias y semejanzas entre los operadores CSP: 
\size small
\color purple

\begin_inset Formula $|$
\end_inset


\size default
\color inherit
, 
\size small
\color purple

\begin_inset Formula $\square$
\end_inset


\size default
\color inherit
, 
\size small
\color purple

\begin_inset Formula $\sqcap$
\end_inset


\size default
\color inherit
.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Explique con la debida precisión la semántica del modelo de concurrencia
 de CSP.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Escriba en CSP y explique cada una de las siguientes leyes: 
\begin_inset Quotes fld
\end_inset

Interleaving
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

Deadlock
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

Sincronization
\begin_inset Quotes frd
\end_inset

 y 
\begin_inset Quotes fld
\end_inset

IEOF
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
Interleaving:
\color purple

\begin_inset Formula 
\[
a\notin\alpha Q\land b\notin\alpha Q\Rightarrow a\to P\parallel b\to Q=a\to\left(P\parallel b\to Q\right)\square b\to\left(a\to P\parallel Q\right)
\]

\end_inset


\color inherit
COMPLETAR.
\end_layout

\begin_layout Itemize
Deadlock: 
\color purple

\begin_inset Formula $a\in\alpha Q\land b\in\alpha P\Rightarrow a\to P\parallel b\to Q=STOP$
\end_inset


\color inherit
.
\end_layout

\begin_deeper
\begin_layout Standard
COMPLETAR.
\end_layout

\end_deeper
\begin_layout Itemize
Sincronization: 
\color purple

\begin_inset Formula $a\to P\parallel a\to Q=a\to\left(P\parallel Q\right)$
\end_inset


\color inherit
.
\end_layout

\begin_deeper
\begin_layout Standard
COMPLETAR.
\end_layout

\end_deeper
\begin_layout Itemize
IEOF: 
\color purple

\begin_inset Formula $a\notin\alpha Q\land b\in\alpha P\Rightarrow a\to P\parallel b\to Q=a\to\left(P\parallel b\to Q\right)$
\end_inset


\color inherit
.
\end_layout

\begin_deeper
\begin_layout Standard
COMPLETAR.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Determine si la siguiente proposición es correcta o no (es decir si la igualdad
 es correcta o no) y justifique su respuesta:
\size small
\color purple

\begin_inset Formula 
\[
c?x\to P;Q=c?x\to\left(P;Q\right)
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
La igualdad no es correcta, y para verlo daremos un contraejemplo.
 Sean 
\color purple

\begin_inset Formula $P=SKIP$
\end_inset


\color inherit
 y 
\color purple

\begin_inset Formula $Q=c!x\to STOP$
\end_inset


\color inherit
.
\end_layout

\begin_layout Standard
El proceso al lado derecho de la igualdad recibe un mensaje 
\color purple

\begin_inset Formula $x$
\end_inset


\color inherit
 y luego pasa a comportarse como un proceso que primero termina exitosamente
 y a continuación reenviá ese mismo mensaje antes de finalizar.
\end_layout

\begin_layout Standard
Por el contrario, en el proceso a la izquierda de la igualdad, el mensaje
 recibido solo esta dentro del alcance de 
\color purple

\begin_inset Formula $P$
\end_inset


\color inherit
 por lo que 
\color purple

\begin_inset Formula $Q$
\end_inset


\color inherit
 no enviará dicho mensaje ya que 
\color purple

\begin_inset Formula $P$
\end_inset


\color inherit
 ha terminado.
\end_layout

\end_deeper
\begin_layout Enumerate
Describa el modelo de fallas y divergencias de CSP, explicando y definiendo
 los conceptos de traza, rechazo, falla y divergencia.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Explique y ejemplifique el concepto de pasos intrascendentes.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Explique la diferencia entre los operadores 
\size small
\color purple

\begin_inset Formula $\square$
\end_inset


\size default
\color inherit
 y 
\size small
\color purple

\begin_inset Formula $\nabla$
\end_inset


\size default
\color inherit
.
 Luego muestre como representar 
\size small
\color purple

\begin_inset Formula $\nabla$
\end_inset


\size default
\color inherit
 en Statecharts.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Muestre un ejemplo sencillo donde se pueda apreciar la diferencia de los
 modelos de concurrencia de Statecharts y CSP.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
COMPLETAR.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Muestre un Statechart equivalente al que se muestra en la figura que no
 haga uso de los estados AND.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/teoria/ejercicio.png
	scale 30

\end_inset


\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/teoria/solucion.png
	scale 30

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Traduzca el Statechart de la figura anterior en un proceso CSP equivalente.
 Si no puede hacerlo, justifique su respuesta.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize

\color purple
\begin_inset Formula $PE=a\to QE|x\to PF$
\end_inset


\color inherit
.
\end_layout

\begin_layout Itemize

\color purple
\begin_inset Formula $PF=b\to PE|a\to QF$
\end_inset


\color inherit
.
\end_layout

\begin_layout Itemize

\color purple
\begin_inset Formula $QE=b\to PE|x\to QF$
\end_inset


\color inherit
.
\end_layout

\begin_layout Itemize

\color purple
\begin_inset Formula $QF=b\to PE$
\end_inset


\color inherit
.
\end_layout

\end_deeper
\begin_layout Section
Ejercicios prácticos
\end_layout

\begin_layout Subsection
Electroencefalogramas
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Un sistema debe controlar un aparato para efectuar electroencefalogramas
 simples.
 El análisis consiste en estudiar el voltaje que emiten 10 electrodos que
 permiten conocer la actividad bioeléctrica cerebral (cada uno comunica
 un valor al sistema).
 Es necesario tomar 5 muestras por segundo, espaciadas uniformemente.
 En cada una de las 5 muestras se lee el valor de los 10 electrodos.
 Notar que si el cerebro del paciente no presenta actividad en las cercanías
 de un electrodo, este no emitirá señal alguna.
 Por lo tanto, el sistema no puede esperar indefinidamente por la señal
 del electrodo.
 Finalmente, el sistema debe enviar secuencialmente a una impresora el valor
 obtenido en cada electrodo (que haya retornado uno o nada en caso de que
 no se haya registrado ninguno).
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Itemize
El electrodo 
\begin_inset Formula $i$
\end_inset

 emite una señal 
\begin_inset Formula $\approx$
\end_inset

 
\color purple

\begin_inset Formula $señal.i$
\end_inset


\color inherit
.
\end_layout

\begin_layout Itemize
Se toma una muestra de los 10 electrodos 
\begin_inset Formula $\approx$
\end_inset

 
\color purple

\begin_inset Formula $leer$
\end_inset


\color inherit
.
\end_layout

\begin_layout Itemize
Se terminó de imprimir los 10 electrodos 
\begin_inset Formula $\approx$
\end_inset

 
\color purple

\begin_inset Formula $fin$
\end_inset


\color inherit
.
\end_layout

\begin_layout Itemize
Se imprime el electrodo actual 
\begin_inset Formula $\approx$
\end_inset

 
\color purple

\begin_inset Formula $imprimir$
\end_inset


\color inherit
.
\end_layout

\begin_layout Itemize
Se terminó de imprimir el electrodo actual 
\begin_inset Formula $\approx$
\end_inset

 
\color purple

\begin_inset Formula $listo$
\end_inset


\color inherit
.
\end_layout

\begin_layout Itemize
La impresora imprime un cero 
\begin_inset Formula $\approx$
\end_inset

 
\color purple

\begin_inset Formula $print0$
\end_inset


\color inherit
.
\end_layout

\begin_layout Itemize
La impresora imprime un uno 
\begin_inset Formula $\approx$
\end_inset

 
\color purple

\begin_inset Formula $print1$
\end_inset


\color inherit
.
\end_layout

\begin_layout Subsubsection
Tabla de control (COMPLETAR)
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Evento
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Control
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compartido
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color purple
\begin_inset Formula $señal.i$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $EC$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\CheckedBox$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color purple
\begin_inset Formula $leer$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $MC$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $?$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color purple
\begin_inset Formula $print0$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $MC$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\CheckedBox$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color purple
\begin_inset Formula $print1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $MC$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\CheckedBox$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Imagenes/electro/dkelectrodos.png
	scale 20

\end_inset


\begin_inset Graphics
	filename Imagenes/electro/lectores.png
	scale 20

\end_inset


\begin_inset Graphics
	filename Imagenes/electro/impresor.png
	scale 20

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Imagenes/electro/dkimpresora.png
	scale 20

\end_inset


\begin_inset Graphics
	filename Imagenes/electro/imprimiendo.png
	scale 20

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Multiple Columns
status open

\begin_layout Itemize

\color purple
\begin_inset Formula $cero=print0\land listo$
\end_inset

.
\end_layout

\begin_layout Itemize

\color purple
\begin_inset Formula $uno=print1\land listo$
\end_inset

.
\end_layout

\begin_layout Itemize

\color purple
\begin_inset Formula $fincero=print0\land fin$
\end_inset

.
\end_layout

\begin_layout Itemize

\color purple
\begin_inset Formula $finuno=print1\land fin$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color purple
\begin_inset Formula $SISTEMA=DK\_ELECTRODOS\parallel DK\_IMPRESORA\parallel LECTORES\parallel IMPRESOR\parallel IMPRIMIENDO$
\end_inset


\end_layout

\begin_layout Subsubsection
CSP (COMPLETAR)
\end_layout

\begin_layout Subsection
Computación distribuida (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Un sistema distribuido consta de 
\begin_inset Formula $N$
\end_inset

 computadoras cada una de las cuales ejecuta el mismo programa; estas computador
as pueden estar encendidas o apagadas.
 Este programa recibe dos eventos (en cada computadora) desde el exterior:
 
\begin_inset Formula $a$
\end_inset

 y 
\begin_inset Formula $b$
\end_inset

.
\end_layout

\begin_layout Itemize
Cuando el programa en una computadora recibe 
\begin_inset Formula $a$
\end_inset

, debe comunicarles a todas las otras computadoras por medio de un evento
 interno, que lo ha recibido.
\end_layout

\begin_deeper
\begin_layout Standard
Luego de comunicar esta situacion esa computadora debe esperar a que todas
 le respondan.
 Cada computadora encendida responde con un evento diferente pero solo si
 esta en su estado inicial.
 Como puede haber computadoras apagadas o que estén haciendo otra cosa,
 el programa esperara un tiempo 
\begin_inset Formula $B$
\end_inset

 cada respuesta.
\end_layout

\begin_layout Standard
Cuando recibe todas las respuestas o han transcurrido 
\begin_inset Formula $B$
\end_inset

 unidades de tiempo, debe emitir el evento 
\begin_inset Formula $c$
\end_inset

 y volver al estado inicial.
\end_layout

\end_deeper
\begin_layout Itemize
Si el programa recibe el evento 
\begin_inset Formula $b$
\end_inset

 debe esperar un tiempo 
\begin_inset Formula $t$
\end_inset

 hasta poder recibir el evento 
\begin_inset Formula $a$
\end_inset

, a menos que se de otro evento 
\begin_inset Formula $b$
\end_inset

 luego de 
\begin_inset Formula $T$
\end_inset

 unidades de tiempo en cuyo caso debe reiniciar el tiempo de espera.
\end_layout

\begin_layout Subsubsection
Designaciones (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Tabla de control (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Imagenes/distribuida/programas.png
	scale 20

\end_inset


\end_layout

\begin_layout Subsubsection
CSP (COMPLETAR)
\end_layout

\begin_layout Subsection
Sistema de alarma (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Un sistema de alarma hogareño simple consta de un teclado (contiene los
 10 dígitos y las dos primeras letras del abecedario), dos sensores de movimient
o y dos magnéticos (para aberturas) y una bocina.
 Todo el sistema sera controlado por un programa.
\end_layout

\begin_layout Standard
El sistema puede estar armado o no.
 Armado significa que si se detecta una intrusión debe sonar la bocina hasta
 que se teclee el código de seguridad.
 Si no esta armado no se responderá a las intrusiones.
 Una intrusión se detecta cuando alguno de los sensores envía una señal.
 Si esta armado, al teclear el código de seguridad el sistema se desarma;
 si esta desarmado, al teclear el código de seguridad, se arma.
 El código de seguridad viene de fabrica y consta de 2 dígitos.
\end_layout

\begin_layout Standard
El sistema agrupa un sensor de movimiento y uno magnético en el sector 
\begin_inset Formula $A$
\end_inset

 y a los sensores restantes en el sector 
\begin_inset Formula $B$
\end_inset

.
 Cada sector se puede armar independientemente del otro.
 Para hacerlo se teclea su letra y el código de seguridad.
 Si un sector no esta armado no se responderá a las intrusiones en ese sector.
 Si solo se teclea el código de seguridad se arman todos los sectores; si
 algún sector esta armado y se teclea el código de seguridad, se desarman
 todos los sectores.
\end_layout

\begin_layout Standard
Abstraiga convenientemente el teclado y el código de seguridad.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Detección de errores (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Se cuenta con un proceso 
\begin_inset Formula $S$
\end_inset

 que envía mensajes, un medio 
\begin_inset Formula $E$
\end_inset

 que los transmite y un proceso 
\begin_inset Formula $R$
\end_inset

 que los recibe.
 
\begin_inset Formula $E$
\end_inset

 puede almacenar solo un mensaje a la vez, puede corromper a lo sumo uno
 de cada tres mensajes consecutivos y, por simplicidad, se supone que cada
 mensaje es un 0 o un 1; 
\begin_inset Formula $E$
\end_inset

 esta fuera del control del sistema, es decir es parte del entorno.
 Se espera que 
\begin_inset Formula $S$
\end_inset

 y 
\begin_inset Formula $R$
\end_inset

 colaboren para evitar la corrupción producida por 
\begin_inset Formula $E$
\end_inset

 .
 Para ello utilizaran un mecanismo simple: 
\begin_inset Formula $S$
\end_inset

 enviara cada mensaje por triplicado y 
\begin_inset Formula $R$
\end_inset

 decidirá cual es el valido de acuerdo a una elección por mayoría simple.
 Especifique los procesos 
\begin_inset Formula $S$
\end_inset

 , 
\begin_inset Formula $E$
\end_inset

 y 
\begin_inset Formula $R$
\end_inset

 descriptos arriba.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Robot industrial (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Se requiere el software de control para un robot industrial con las siguientes
 características.
 El robot puede moverse hacia la izquierda o derecha una cierta distancia
 y consta de un rociador y termómetro.
 El robot esta ubicado al borde de una cinta transportadora que acarrea
 piezas metálicas.
 El requerimiento básico es que si el sensor detecta que la temperatura
 de la pieza que esta en su cercana es superior a 
\begin_inset Formula $maxtemp$
\end_inset

 , el robot debe abrir el rociador y debe moverse en el sentido de la cinta
 hasta que la temperatura de la pieza sea inferior a 
\begin_inset Formula $maxtemp$
\end_inset

 .
 Si el robot llega hasta su límite de desplazamiento debe cerrar el rociador.
 En cualquier caso debe retornar a la posición inicial.
 Tener en cuenta lo siguiente:
\end_layout

\begin_layout Itemize
El termómetro envía una señal con la temperatura medida.
 
\end_layout

\begin_layout Itemize
El motor del robot envía una señal indicando que se ha alcanzado el extremo
 derecho o izquierdo.
 
\end_layout

\begin_layout Itemize
El software de control puede encender el motor en uno u otro sentido y detenerlo.
 
\end_layout

\begin_layout Itemize
No se puede poner en funcionamiento el motor en el mismo paso en que se
 recibe una medición de temperatura.
\end_layout

\begin_layout Standard
Abstraiga convenientemente las diferentes temperaturas que puede comunicar
 el termómetro.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Productores y consumidores 1 (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Un productor produce de a un mensaje a la vez a razón de 3 segundos cada
 uno.
 Existen otros dos productores que se comportan de la misma forma pero trabajan
 con tiempos de 1 y 4 segundos, respectivamente.
 Todos los productores tienen un error en sus relojes de 
\end_layout

\begin_layout Standard
segundos con 
\begin_inset Formula $0<\delta<1$
\end_inset

.
\end_layout

\begin_layout Standard
Los mensajes enviados por los tres productores son recibidos por un componente
 que puede recibir de a un mensaje a la vez.
 El componente cuenta con un 
\begin_inset Quotes fld
\end_inset

buffer
\begin_inset Quotes frd
\end_inset

 con capacidad para MB mensajes.
 Poner o sacar un mensaje del 
\begin_inset Quotes fld
\end_inset

buffer
\begin_inset Quotes frd
\end_inset

 le toma 0,1 segundos.
 Por otro lado, hay dos consumidores de mensajes que pueden consumir de
 a un mensaje a la vez cada uno, a razón de 2 segundos por mensaje.
 El componente comunica los mensajes según una política FIFO.
\end_layout

\begin_layout Standard
Tener en cuenta que los productores y consumidores son las entidades activas.
\end_layout

\begin_layout Standard
Explique claramente (mostrando un ejemplo si es necesario) si el modelo
 semántico 
\begin_inset Quotes fld
\end_inset

broadcast
\begin_inset Quotes frd
\end_inset

 de Statecharts hace que el sistema completo se comporte de forma diferente
 a como lo hace la especificación CSP, que responde a un modelo semántico
 sincrónico.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Balanza de camiones (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Una empresa posee una balanza para pesar camiones cargados con materia prima.
 El camión debe ubicarse mas o menos sobre el centro de la balanza para
 que la pesada sea correcta.
 Con este fin la empresa instalo cuatro sensores en los vértices de un rectángul
o imaginario de forma tal que cuando detectan que el camión esta dentro
 de ese rectángulo, se debe bajar una barrera detrás del camión.
 Si el camión rebasa alguno de los laterales del rectángulo se enciende
 una (de dos) luz ubicada delante del camión que indica que lado esta rebasado.
\end_layout

\begin_layout Standard
Una vez que el camión esta correctamente ubicado y se bajaron las barreras,
 el chofer debe deslizar una tarjeta magnética que lo identifica.
 Si la tarjeta es valida, se activa la balanza.
 Cuando el pesaje finaliza, se debe imprimir un tique con los datos del
 conductor y el peso.
 Luego se levantan las barreras.
\end_layout

\begin_layout Standard
Abstraiga adecuadamente la validación de la tarjeta y la impresión del tique
 con sus datos.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Sistema de ventilación (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Una habitación posee varias puertas de ingreso/egreso.
 En cada puerta se han instalado dos sensores ópticos uno al lado del otro
 (cada uno es semejante a los que se instalan en las puertas de los ascensores
 para evitar que se cierren si hay alguien entrando o saliendo).
 Estos sensores envían una señal cada vez que algo interrumpe el haz de
 luz que se establece entre cada extremo.
 Como hay dos por puerta es posible determinar si una persona ingresa a
 la habitación o sale de ella.
 Notar que esta inteligencia 
\emph on
no
\emph default
 es parte de la funcionalidad de los sensores.
\end_layout

\begin_layout Standard
La habitación cuenta con un sistema de ventilación electrónico.
 Es posible aumentar o disminuir discretamente la cantidad de aire que el
 sistema hace circular.
\end_layout

\begin_layout Standard
Se requiere un programa que aumente/disminuya paulatinamente la circulación
 de aire desde cero hasta el máximo posible, cada vez que ingresan/egresan
 tres personas a la sala.
 Es decir la potencia de circulación debe ser la misma, por ejemplo, si
 hay 3, 4 o 5 personas en la sala.
 Ademas, si la habitación permanece vaca por mas de 12 horas se debe encender
 el sistema de ventilación por 1 hora.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Sistema de ascensores (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Un edificio contara con varios ascensores controlados desde un programa.
 No puede haber mas de dos ascensores moviéndose al mismo tiempo.
 Las puertas de los ascensores solo deben abrirse cuando estos están detenidos
 en un piso.
 Cada ascensor puede ser llamado desde cada piso mediante un botón.
 Dentro de cada ascensor hay una botonera para dirigirlo hacia el piso al
 que se desee ir.
 En cada piso y en cada túnel hay un sensor que avisa el paso del ascensor
 por ese piso.
 Las puertas son manuales.
\end_layout

\begin_layout Standard
No tener en cuenta los botones de los pisos.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Dispenser de bebidas (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Una maquina expendedora de bebidas funciona de la siguiente manera.
 La maquina esta inactiva hasta que se libera una traba de seguridad.
 Los clientes pueden seleccionar una bebida pulsando el botón correspondiente.
 Hay cinco bebidas diferentes.
 Cuando la maquina no esta inactiva se pueden insertar monedas mientras
 se muestra en una pequeña pantalla el total hasta el momento.
 (Se aceptan monedas de 25 y 50 centavos y de 1 peso.
 La maquina detecta el valor de la moneda).
 Si se selecciona una bebida y el total de dinero es igual al precio del
 producto, entonces la maquina entrega la bebida correspondiente.
 Cada bebida puede tener un precio diferente.
 Si el total es mayor que el precio del producto, se entrega la bebida y
 la pantalla se actualiza poniendo como nuevo total la diferencia.
 La maquina no puede ponerse en modo inactivo si el total mostrado no es
 cero.
 El usuario puede pulsar un botón para que la maquina le retorne el total
 mostrado en pantalla, en cuyo caso el total mostrado se pone a cero.
\end_layout

\begin_layout Standard
Aunque no es necesario mostrar el total de dinero ingresado por el usuario,
 el modelo debe contemplar una abstracción adecuada.
 También abstraiga adecuadamente el tema de los precios de las bebidas.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Temperatura de automóviles (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
La temperatura solo puede ser regulada ajustando el funcionamiento del acondicio
nador de aire (AA); el AA solo se apaga o se prende, no es posible hacer
 que el aire salga a mayor o menor temperatura.
 Entonces, cuanto mas funciona el AA mas se enfría el habitáculo.
 El conductor puede seleccionar la temperatura que desee mantener por medio
 de una perilla giratoria.
 La temperatura deseada puede estar entre 18 y 30 C; si la temperatura deseada
 es de 18 C, el AA no se detiene nunca.
 El sistema estará en funcionamiento solo si el conductor ha pulsado un
 botón de activación; el sistema sale de funcionamiento cuando el botón
 se vuelve a pulsar o el motor se detiene.
 Existen dos termómetros dentro del habitáculo (uno en la parte delantera
 y el otro en la parte trasera) que, una vez encendido el sistema, envían
 señales de incremento o decremento de la temperatura sensada.
 Los termómetros inicialmente se encuentran a 18 C; los termómetros no envían
 señales si la temperatura excede su rango de funcionamiento.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Minicomponente musical (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Un software controlara el funcionamiento de un minicomponente musical.
 El equipo consta de reproductor de CD y radio AM/FM.
 El panel de control cuenta con la interfaz de usuario habitual: encendido/apaga
do, 
\begin_inset Quotes fld
\end_inset

play
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

prev
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

next
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

stop, 
\begin_inset Quotes fld
\end_inset

pause
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

eject
\begin_inset Quotes frd
\end_inset

 y selector CD- radio.
 Los botones como 
\begin_inset Quotes fld
\end_inset

play
\begin_inset Quotes frd
\end_inset

, 
\begin_inset Quotes fld
\end_inset

prev
\begin_inset Quotes frd
\end_inset

, etc.
 sirven para todos los componentes dependiendo del selector (por ejemplo,
 
\begin_inset Quotes fld
\end_inset

prev
\begin_inset Quotes frd
\end_inset

 sirve para mover el sintonizador de la radio hacia las estaciones mas bajas).
 Si el CD esta seleccionado y se pulsa de forma continua por 2 segundos
 o mas cualquiera de los botones 
\begin_inset Quotes fld
\end_inset

prev
\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset

next
\begin_inset Quotes frd
\end_inset

, entonces se debe avanzar dentro de la misma canción y no saltar de canción.
 En la misma situacion si se pulsan dos veces con diferencia de menos de
 1 décima de segundo, entonces se pasa a la ultima o primera pista.
 Ademas, hay un sensor que detecta la presencia de un CD.
 Si se pulsa el botón de apagado mientras el CD esta en funcionamiento primero
 se debe apagar el CD y luego el equipo.
 El minicomponente cuenta con una memoria que permite que al re-encenderse
 se active el ultimo componente usado, en particular si es la radio se encenderá
 AM o FM.
\end_layout

\begin_layout Standard
Las ordenes recibidas desde los botones, si el CD esta activado, se deben
 traducir en ordenes al motor (giro normal o giro rápido hacia atrás o adelante,
 parar, arrancar, expulsar) o el lector laser (encender, apagar, leer).
\end_layout

\begin_layout Standard
Las ordenes recibidas desde los botones, si la radio esta activada, se deben
 traducir en ordenes a un sintonizador (aumentar/disminuir frecuencia y
 cambiar rango de frecuencia).
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Productores y consumidores 2 (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Un proceso 
\begin_inset Formula $B$
\end_inset

, debe almacenar elementos en dos 
\emph on
buffers
\emph default
 de la misma capacidad finita y conocida 
\begin_inset Formula $N$
\end_inset

.
 Por otro lado, existen procesos (llamados productores) que envían datos
 a 
\begin_inset Formula $B$
\end_inset

 para que este los almacene en los 
\emph on
buffers
\emph default
, y existen procesos (llamados consumidores) que le piden a 
\begin_inset Formula $B$
\end_inset

 los datos que tiene almacenados (lo que hace que los 
\emph on
buffers
\emph default
 se vayan vaciando).
\end_layout

\begin_layout Standard
Cuando un consumidor quiere un dato que 
\begin_inset Formula $B$
\end_inset

 tiene, el proceso le debe indicar el 
\emph on
buffer
\emph default
 del cual lo quiere; en cambio los productores no pueden seleccionar el
 
\emph on
buffer
\emph default
 .
\end_layout

\begin_layout Standard
Obviamente 
\begin_inset Formula $B$
\end_inset

 no puede poner elementos en un 
\emph on
buffer
\emph default
 lleno y no puede sacar elementos de un 
\emph on
buffer
\emph default
 vacío.
 Lo que sí debe hacer 
\begin_inset Formula $B$
\end_inset

 es balancear el uso de los 
\emph on
buffers
\emph default
: cuando almacena datos lo debe hacer en el 
\emph on
buffer
\emph default
 mas vacío y si un 
\emph on
buffer
\emph default
 se esta vaciando mas rápido que el otro, debe pasar elementos del ultimo
 al primero.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Cinta Transportadora (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Una cinta transportadora acarrea ítems de dos tipos (
\begin_inset Formula $A$
\end_inset

 y 
\begin_inset Formula $B$
\end_inset

) que luego son capturados por las maquinas 
\begin_inset Formula $M_{A}$
\end_inset

 y 
\begin_inset Formula $M_{B}$
\end_inset

, respectivamente.
 Un software controla la cinta y ambas maquinas.
 El software debe encender cada una de las maquinas 
\begin_inset Formula $M_{A}$
\end_inset

 y 
\begin_inset Formula $M_{B}$
\end_inset

, mediante los eventos 
\begin_inset Formula $turnona$
\end_inset

 y 
\begin_inset Formula $turnonb$
\end_inset

, respectivamente.
 Cada maquina necesita 
\begin_inset Formula $r$
\end_inset

 unidades de tiempo para estar operativa.
\end_layout

\begin_layout Standard
Cada vez que en la cinta se detecta un ítem de un tipo, el software debe
 emitir el evento 
\begin_inset Formula $takea$
\end_inset

 o 
\begin_inset Formula $takeb$
\end_inset

 para que la maquina correspondiente capture el ítem en cuestión, a menos
 que a continuación se indique otra cosa.
\end_layout

\begin_layout Standard
Si entre la aparición de dos o mas ítems transcurren menos de 
\begin_inset Formula $n$
\end_inset

 unidades de tiempo, no se debe emitir la orden de captura correspondiente
 a los ítems posteriores al primero; se deberá emitir las ordenes de captura
 cuando aparezca un ítem 
\begin_inset Formula $n$
\end_inset

 unidades de tiempo después del anterior.
\end_layout

\begin_layout Standard
Si transcurren mas de 
\begin_inset Formula $t$
\end_inset

 unidades de tiempo entre dos ítems, se debe apagar todo el sistema mediante
 el evento 
\begin_inset Formula $abort$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Protocolo CSMA/CD (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Para transmitir datos entre terminales de trabajo conectadas en red se debe
 hacer uso de algún protocolo.
 En algunas redes 
\begin_inset Formula $broadcast$
\end_inset

 con un único bus la clave esta en como asignar el uso de este cuando varias
 terminales compiten por el.
\end_layout

\begin_layout Standard
Uno de los protocolos que resuelven esta cuestión es el 
\emph on
Carrier Sense, Multiple Access with Collision Detection
\emph default
, o simplemente CSMA/CD.
 Una breve descripción del funcionamiento de este protocolo es la siguiente.
\end_layout

\begin_layout Standard
Una terminal transmite al sistema (es decir a la implementación del protocolo)
 un mensaje que debe ser enviado por la red.
 El sistema, si el bus esta disponible (esto es, no hay otra terminal transmitie
ndo), comienza a enviar su mensaje.
 Sin embargo, si detecta que el bus esta ocupado, espera un tiempo aleatorio
 y vuelve a intentar transmitir el mensaje.
 Esto lo hará tantas veces como sea necesario hasta que pueda empezar a
 transmitir.
\end_layout

\begin_layout Standard
Aun tomando estas precauciones puede ocurrir que dos terminales usen el
 bus al mismo tiempo, lo que da lugar a una 
\emph on
colisión
\emph default
.
 Cuando una colisión ocurre el bus comunica esta situacion a todas las terminale
s.
 Esto implica que todas las terminales abortan inmediatamente las transmisiones
 y, nuevamente, esperan un tiempo aleatorio para empezar a transmitir de
 nuevo.
\end_layout

\begin_layout Standard
Los mensajes que colisionan se pierden.
 Una vez que el mensaje ha sido transmitido, la terminal que inicio la transmisi
ón es notificada.
\end_layout

\begin_layout Standard
Se supone que todos los mensajes (sin importar tamaño) demoran exactamente
 
\begin_inset Formula $\lambda$
\end_inset

 unidades de tiempo en ser transmitidos.
\end_layout

\begin_layout Standard
En resumen, en cada terminal corre una implementación del protocolo y todas
 las terminales comparten el bus.
 La interfaz que provee el bus consta de: determinar si el bus esta libre
 o no, enviar un mensaje, comunicar que un mensaje se transmitió, comunicar
 a todas las terminales que hay colisión.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Teléfono celular (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
Se trata del software que controla un teléfono celular muy simple.
 El teléfono cuenta con un teclado numérico, una tecla 
\begin_inset Quotes fld
\end_inset

enviar
\begin_inset Quotes frd
\end_inset

 y otra 
\begin_inset Quotes fld
\end_inset

cortar
\begin_inset Quotes frd
\end_inset

.
 Ademas posee una bocina que puede ser encendida o apagada y una pantalla
 que puede mostrar una cadena de dígitos; existe una operación que borra
 el contenido de la pantalla.
 El teléfono se enciende si se pulsa la tecla 
\begin_inset Quotes fld
\end_inset

cortar
\begin_inset Quotes frd
\end_inset

 durante mas de 2 segundos.
 Una vez encendido el teléfono espera que el usuario teclee un numero o
 que llegue una llamada.
\end_layout

\begin_layout Standard
Los números a los cuales se puede llamar poseen una cantidad de dígitos
 variable.
 Cada vez el usuario pulsa un digito el numero correspondiente debe mostrarse
 en la pantalla.
 Una vez que el usuario pulsa 
\begin_inset Quotes fld
\end_inset

enviar
\begin_inset Quotes frd
\end_inset

 el sistema debe esperar a que se pulse 
\begin_inset Quotes fld
\end_inset

cortar
\begin_inset Quotes frd
\end_inset

 (no se modela la comunicación en si).
 Mientras tanto no se pueden recibir llamadas, es decir se pierden.
 Cuando se pulsa 
\begin_inset Quotes fld
\end_inset

cortar
\begin_inset Quotes frd
\end_inset

 se debe borrar la pantalla.
\end_layout

\begin_layout Standard
Si el teléfono puede recibir una llamada y esto ocurre, entonces el sistema
 debe hacer sonar la bocina de manera intermitente hasta que el usuario
 pulse 
\begin_inset Quotes fld
\end_inset

enviar
\begin_inset Quotes frd
\end_inset

 o 
\begin_inset Quotes fld
\end_inset

cortar
\begin_inset Quotes frd
\end_inset

.
 La intermitencia es: 1 segundo de ruido seguido de un segundo de silencio.
 Si el usuario pulsa 
\begin_inset Quotes fld
\end_inset

cortar
\begin_inset Quotes frd
\end_inset

 el teléfono podrá recibir o hacer nuevas llamadas.
 Si el usuario pulsa 
\begin_inset Quotes fld
\end_inset

enviar
\begin_inset Quotes frd
\end_inset

 no se podrán hacer ni recibir nuevas llamadas hasta que pulse 
\begin_inset Quotes fld
\end_inset

cortar
\begin_inset Quotes frd
\end_inset

.
 Si el numero que se recibe coincide con uno que se mantiene en la agenda
 del teléfono, entonces se debe mostrar en la pantalla el nombre que le
 corresponda.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\begin_layout Subsection
Sistema de estadísticas (COMPLETAR)
\end_layout

\begin_layout Subsubsection
Requerimientos
\end_layout

\begin_layout Standard
El dispositivo 
\begin_inset Formula $D$
\end_inset

 debe recibir datos de 
\begin_inset Formula $N$
\end_inset

 sensores conectados en serie, y con esos datos realizar diversas estadísticas.
 El mecanismo debe ser el siguiente: 
\begin_inset Formula $D$
\end_inset

 debe pedir al primer sensor que le envíe el dato que tenga disponible.
 Este sensor, a su vez, luego de enviar el dato le 
\begin_inset Quotes fld
\end_inset

avisa
\begin_inset Quotes frd
\end_inset

 al siguiente sensor que es su turno, y as sucesivamente hasta el sensor
 
\begin_inset Formula $N$
\end_inset

.
 
\begin_inset Formula $D$
\end_inset

 espera un cierto tiempo a que arribe el siguiente dato, tras el cual considera
 que no existen mas sensores (el hecho de que estén en serie y que se 
\begin_inset Quotes fld
\end_inset

avisen
\begin_inset Quotes frd
\end_inset

 entre ellos hace que 
\begin_inset Formula $N$
\end_inset

 sea transparente para 
\begin_inset Formula $D$
\end_inset

).
 Cuando 
\begin_inset Formula $D$
\end_inset

 termina de recibir los valores debe enviarle el promedio de los valores
 recibidos a otro dispositivo, y comenzar el ciclo nuevamente en cuto caso
 se reinicia el arreglo de sensores de manera tal que el primero es el que
 posiblemente enviara el primer valor en el nuevo ciclo.
 En caso de no haber recibido ningún valor luego de efectuar el primer pedido
 (porque 
\begin_inset Formula $N$
\end_inset

 es cero o porque el primer sensor se demoro mas de lo esperado), debe enviarle
 al otro dispositivo un mensaje de error.
\end_layout

\begin_layout Standard
Considerar que la maquina a construir es el software que controla a 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Designaciones
\end_layout

\begin_layout Subsubsection
Tabla de control
\end_layout

\begin_layout Subsubsection
Statecharts
\end_layout

\begin_layout Subsubsection
CSP
\end_layout

\end_body
\end_document
