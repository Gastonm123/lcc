#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{tikz-uml}
\usepackage{verbatimbox}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language spanish-mexico
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Patrones de diseño
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Diagramas
\end_layout

\begin_layout Section
Módulo
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="25text%">
<column alignment="block" valignment="middle" width="60text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.7, every node/.style={scale=0.7}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=0.5, y=0]{Nombre} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametros) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Un módulo es una unidad de implementación de software que provee una unidad
 coherente de funcionalidad.
 También se puede definir como una unidad de implementación de software
 que provee un conjunto de servicios.
 Parnas define módulo como una asignación de trabajo para un programador
 o un grupo de programadores.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Interfaz
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="25text%">
<column alignment="block" valignment="middle" width="60text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.7, every node/.style={scale=0.7}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=0.5, y=0]{Nombre} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Metodo1()} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Metodo2(Parametros)} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{...}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
La interfaz de un módulo puede definirse como el conjunto de servicios que
 el módulo exporta.
 También puede definirse como todas las interacciones que tiene el módulo
 con su entorno (es decir, los otros módulos).
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
Implementación
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="55text%">
<column alignment="block" valignment="middle" width="35text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{myverbbox}{
\backslash
imp}
\end_layout

\begin_layout Plain Layout

return f(Parametro);
\end_layout

\begin_layout Plain Layout


\backslash
end{myverbbox}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.7, every node/.style={scale=0.7}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=-2, y=0]{Modulo} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametro) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlnote[width=120, x=4, anchor1=-5, anchor2=-5]{Modulo} {
\end_layout

\begin_layout Plain Layout

        
\backslash
imp
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
La implementación de un módulo es la forma en que se logra que la interfaz
 funcione según lo perciben los otros módulos.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Herencia
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="50text%">
<column alignment="block" valignment="middle" width="40text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.7, every node/.style={scale=0.7}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=0.5, y=0]{Interfaz} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Metodo1()} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Metodo2(Parametros)} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{..}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=-2, y=-4.5]{Modulo1} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametros) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=3, y=-4.5]{Modulo2} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametros) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|, weight=0.4]{Modulo1}{Interfaz}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|, weight=0.4]{Modulo2}{Interfaz}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sean 
\begin_inset Formula $A$
\end_inset

 y 
\begin_inset Formula $B$
\end_inset

 dos módulos, decimos que 
\begin_inset Formula $B$
\end_inset

 es un heredero de 
\begin_inset Formula $A$
\end_inset

 si toda subrutina de la interfaz de 
\begin_inset Formula $A$
\end_inset

 es una subrutina de la interfaz de 
\begin_inset Formula $B$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Instanciacion
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="55text%">
<column alignment="block" valignment="top" width="35text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.7, every node/.style={scale=0.7}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=-2, y=0]{Instanciador} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametros) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=4, y=0]{Instanciado} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametros) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
draw[dashed, ->] (0.2,-0.3) -- (1.8,-0.3);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="block" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Un objeto es una instancia de un módulo.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Composición
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="50text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.7, every node/.style={scale=0.7}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=-2, y=0]{Compositor} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametros) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=4, y=0]{Compuesto} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametros) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniaggreg[arg=obj, pos=0.5]{Compositor}{Compuesto}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Asociación
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.7, every node/.style={scale=0.7}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=-2, y=0]{Cliente} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametros) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=4, y=0]{Servidor} {
\end_layout

\begin_layout Plain Layout

        Metodo1() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Metodo2(Parametros) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ...
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[geometry=|-]{Cliente}{Servidor}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Chapter
Patrones de creación
\end_layout

\begin_layout Section
Abstract Factory
\end_layout

\begin_layout Subsection
Propósito
\end_layout

\begin_layout Standard
Proporciona una interfaz para crear familias de objetos relacionadas o que
 dependen entre sí, sin especificar sus clases concretas.
\end_layout

\begin_layout Subsection
Aplicabilidad
\end_layout

\begin_layout Itemize
Cuando el sistema debe ser independiente de cómo se crean, componen y representa
n sus productos.
\end_layout

\begin_layout Itemize
Cuando el sistema debe ser configurado con una familia de productos de entre
 varias.
\end_layout

\begin_layout Itemize
Cuando una familia de objetos producto relacionados está diseñada para ser
 usada conjuntamente, y es necesario hacer cumplir esta restricción.
\end_layout

\begin_layout Itemize
Cuando quiere proporcionar una biblioteca de clases de productos, y sólo
 quiere revelar sus interfaces, no sus implementaciones.
\end_layout

\begin_layout Subsection
Estructura
\end_layout

\begin_layout Standard
\begin_inset space \hspace*{}
\length -1cm
\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.7, every node/.style={scale=0.7}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=0.5, y=0]{FabricaAbstracta} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{CrearProductoA()} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{CrearProductoB()}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=-2, y=-3.5]{FabricaConcreta1} {
\end_layout

\begin_layout Plain Layout

        CrearProductoA() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        CrearProductoB()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=3, y=-3.5]{FabricaConcreta2} {
\end_layout

\begin_layout Plain Layout

        CrearProductoA() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        CrearProductoB()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=17, y=1]{Cliente}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=11, y=-0.3]{ProductoAbstractoA}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=9, y=-2]{ProductoA2}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=13, y=-2]{ProductoA1}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=11, y=-4.3]{ProductoAbstractoB}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=9, y=-6]{ProductoB2}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=13, y=-6]{ProductoB1}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{FabricaConcreta1}{FabricaAbstracta}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{FabricaConcreta2}{FabricaAbstracta}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{ProductoA1}{ProductoAbstractoA}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{ProductoA2}{ProductoAbstractoA}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{ProductoB1}{ProductoAbstractoB}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{ProductoB2}{ProductoAbstractoB}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[anchor1=180, anchor2=25]{Cliente}{FabricaAbstracta}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[geometry=|-]{Cliente}{ProductoAbstractoA}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[geometry=|-]{Cliente}{ProductoAbstractoB}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umldep[geometry=-|-]{FabricaConcreta2}{ProductoA2}
\end_layout

\begin_layout Plain Layout

    
\backslash
umldep[geometry=-|-]{FabricaConcreta2}{ProductoB2}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
draw[dashed] (-2,-7) -- (16,-7);
\end_layout

\begin_layout Plain Layout

    
\backslash
draw[dashed] (-2,-4.8) -- (-2,-7);
\end_layout

\begin_layout Plain Layout

    
\backslash
draw[dashed] (16,-7) -- (16,-2);
\end_layout

\begin_layout Plain Layout

    
\backslash
draw[dashed, ->] (16,-2) -- (14.6,-2);
\end_layout

\begin_layout Plain Layout

    
\backslash
draw[dashed, ->] (16,-6) -- (14.6,-6);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Participantes
\end_layout

\begin_layout Paragraph
FabricaAbstracta
\end_layout

\begin_layout Itemize
Declara una interfaz para operaciones que crean objetos producto abstractos.
\end_layout

\begin_layout Paragraph
FabricaConcreta
\end_layout

\begin_layout Itemize
Implementa las operaciones para crear objetos producto concretos.
\end_layout

\begin_layout Paragraph
ProductoAbstracto
\end_layout

\begin_layout Itemize
Declara una interfaz para un tipo de objeto producto.
\end_layout

\begin_layout Paragraph
ProductoConcreto
\end_layout

\begin_layout Itemize
Define un objeto producto para que sea creado por la fábrica correspondiente.
\end_layout

\begin_layout Itemize
Implementa la interfaz ProductoAbstracto.
\end_layout

\begin_layout Paragraph
Cliente
\end_layout

\begin_layout Itemize
Sólo usa interfaces declaradas por las clases FabricaAbstracta y ProductoAbstrac
to.
\end_layout

\begin_layout Subsection
Colaboraciones
\end_layout

\begin_layout Itemize
Normalmente sólo se crea una única instancia de una clase FabricaConcreta
 en tiempo de ejecución.
 Esta fábrica concreta crea objetos producto que tienen una determinada
 implementación.
 Para crear diferentes objeto producto, los clientes deben usar una fábrica
 concreta diferente.
\end_layout

\begin_layout Itemize
FabricaAbstracta delega la creación de objetos producto en su subclase FabricaCo
ncreta.
\end_layout

\begin_layout Subsection
Consecuencias
\end_layout

\begin_layout Itemize
Aísla las clases concretas.
 El patrón Abstract Factory ayuda a controlar las clases de objetos que
 crea una aplicación.
 Encapsula la responsabilidad y el proceso de creación de objetos producto,
 aísla a los clientes de las clases de implementación.
 Los clientes manipulan las instancias a través de sus interfaces abstractas.
 Los nombres de las clases producto quedan aisladas en la implementación
 de la fábrica concreta; no aparecen en el código cliente.
\end_layout

\begin_layout Itemize
Facilita el intercambio de familias de productos.
 La clase de una fábrica concreta sólo aparece una vez en una aplicación.
 Esto facilita cambiar la fábrica concreta que usa una aplicación.
 Como una fábrica abstracta crea una familia completa de productos, toda
 la familia de productos cambia de una vez.
\end_layout

\begin_layout Itemize
Promueve la consistencia entre productos.
 Cuando se diseñan objetos producto en una familia para trabajar juntos,
 es importante que una aplicación use objetos de una sola familia a la vez.
 FabricaAbstracta facilita que se cumpla esta restricción.
\end_layout

\begin_layout Itemize
Es difícil dar cabida a nuevos tipos de productos.
 Ampliar las fábricas abstractas para producir nuevos tipos de productos
 no es fácil.
\end_layout

\begin_layout Subsection
Patrones relacionados
\end_layout

\begin_layout Itemize

\strikeout on
Las clases FabricaAbstracta suelen implementarse con métodos de fabricación
 (patron Factory Method), pero también se pueden implementar usando prototipos
 (patrón Prototype).
\end_layout

\begin_layout Itemize

\strikeout on
Una fábrica concreta suele ser un Singleton.
\end_layout

\begin_layout Subsection
Documentación
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="20" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pattern
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
based on
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abstract Factory
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
because
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Fundamentación de la elección del patrón en términos de:
\end_layout

\begin_layout Itemize
Los cambios que este admite y los cambios probables anticipados en el diseño
 concreto.
\end_layout

\begin_layout Itemize
Las necesidades funcionales de alguna parte del sistema.
\end_layout

\begin_layout Itemize
Las restricciones de diseño que se deseen imponer.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
where
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cliente
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
FabricaAbstracta
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
FabricaAbstracta
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
CrearProductoA()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
CrearProductoB()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FabricaConcreta1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CrearProductoA()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CrearProductoB()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FabricaConcreta2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CrearProductoA()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CrearProductoB()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ProductoAbstractoA
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ProductoA1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ProductoA2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ProductoAbstractoB
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ProductoB1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ProductoB2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
comments
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Explicación coloquial de la relación entre los elementos del patrón y los
 elementos del diseño concreto; otros comentarios adicionales que ayuden
 a entender cómo se aplica el patrón de diseño
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Chapter
Patrones estructurales
\end_layout

\begin_layout Section
Birdge
\end_layout

\begin_layout Subsection
Propósito
\end_layout

\begin_layout Standard
Desacopla una abstracción de una implementación de manera tal que ambas
 puedan variar de forma independiente.
\end_layout

\begin_layout Subsection
Aplicabilidad
\end_layout

\begin_layout Itemize
Evitar un enlace permanente entre una abstracción y su implementación.
 Por ejemplo, cuando debe seleccionarse o cambiarse la implementación en
 tiempo de ejecución.
\end_layout

\begin_layout Itemize
Evitar que los cambios en la implementación de una abstracción impacten
 en el código cliente; es decir, su código no tendría que ser recompilado.
\end_layout

\begin_layout Itemize
Extender de forma independiente las diferentes abstracciones y sus implementacio
nes.
\end_layout

\begin_layout Itemize
Compartir una implementación entre varios objetos.
\end_layout

\begin_layout Subsection
Estructura
\end_layout

\begin_layout Standard
\begin_inset space \hspace*{}
\length -1cm
\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{myverbbox}{
\backslash
imp}
\end_layout

\begin_layout Plain Layout

imp->OperacionImp();
\end_layout

\begin_layout Plain Layout


\backslash
end{myverbbox}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.8, every node/.style={scale=0.8}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=0, y=2]{Cliente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=0, y=0]{Abstraccion} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Operacion()}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=11, y=0]{Implementador} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{OperacionImp()}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=8, y=-3]{ImplementadorConcretoA} {
\end_layout

\begin_layout Plain Layout

        OperacionImp()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=14, y=-3]{ImplementadorConcretoB} {
\end_layout

\begin_layout Plain Layout

        OperacionImp()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umlnote[width=120, x=2.6, y=-2, anchor2=-10, geometry=|-]{Abstraccion} {
\end_layout

\begin_layout Plain Layout

        
\backslash
imp
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=0, y=-3.5]{AbstraccionRefinada}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc{Cliente}{Abstraccion}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit{AbstraccionRefinada}{Abstraccion}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlVHVinherit{ImplementadorConcretoA}{Implementador}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlVHVinherit{ImplementadorConcretoB}{Implementador}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniaggreg[anchor1=25, anchor2=160, arg=imp, pos=0.1]{Abstraccion}{Implementado
r}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Participantes
\end_layout

\begin_layout Paragraph
Abstracción
\end_layout

\begin_layout Itemize
Define la interfaz de abstracción.
\end_layout

\begin_layout Itemize
Mantiene una referencia a un objeto de tipo Implementador.
\end_layout

\begin_layout Paragraph
Abstracción Refinada
\end_layout

\begin_layout Itemize
Extiende la interfaz definida por Abstracción.
\end_layout

\begin_layout Paragraph
Implementador
\end_layout

\begin_layout Itemize
Define la interfaz de las clases de implementación.
 Esta interfaz no tiene por que corresponderse exactamente con la de Abstracción
; de hecho, ambas interfaces pueden ser muy distintas.
 Normalmente la interfaz Implementador solo proporciona operaciones primitivas,
 y Abstracción define operaciones de mas alto nivel basadas en dichas primitivas.
\end_layout

\begin_layout Paragraph
Implementador Concreto
\end_layout

\begin_layout Itemize
Implementa la interfaz Implementador y define su implementación concreta.
\end_layout

\begin_layout Subsection
Colaboraciones
\end_layout

\begin_layout Standard
Abstracción redirige las peticiones del cliente a su objeto Implementador.
\end_layout

\begin_layout Subsection
Consecuencias
\end_layout

\begin_layout Itemize

\emph on
Desacopla la interfaz y la implementación
\emph default
.
 No une permanentemente una implementación a una interfaz, sino que la implement
ación puede configurarse en tiempo de ejecución.
 Incluso es posible que un objeto cambie su implementación en tiempo de
 ejecución.
\end_layout

\begin_deeper
\begin_layout Standard
Además, este desacoplamiento potencia una división en capas que puede dar
 lugar a sistemas mejor estructurados.
 La parte de alto nivel de un sistema sólo tiene que conocer a Abstracción
 y a Implementador.
\end_layout

\end_deeper
\begin_layout Itemize

\emph on
Mejora la extensibilidad
\emph default
.
 Podemos extraer las jerarquías de Abstracción y de Implementador de forma
 independiente.
\end_layout

\begin_layout Itemize

\emph on
Oculta detalles de implementación a los clientes
\emph default
.
 Podemos aislar a los clientes de los detalles de implementación, como el
 compartimiento de objetos implementadores y el correspondiente mecanismo
 de conteo de referencias (si es que hay alguno).
\end_layout

\begin_layout Subsection
Patrones relacionados
\end_layout

\begin_layout Itemize
El patrón Abstract Factory puede crear y configurar el Bridge.
\end_layout

\begin_layout Itemize

\strikeout on
El patrón Adapter esta orientado a conseguir que trabajen juntas clases
 que no están relacionadas.
 Normalmente se aplica a sistemas que ya han sido diseñados.
 El patrón Bridge, por otro lado, se usa al comenzar un diseño para permitir
 que abstracciones e implementaciones varíen independientemente unas de
 otras.
\end_layout

\begin_layout Subsection
Documentación
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pattern
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre en del diseño
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
based on
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bridge
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
because
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Fundamentación de la elección del patrón en términos de:
\end_layout

\begin_layout Itemize
Los cambios que este admite y los cambios probables anticipados en el diseño
 concreto.
\end_layout

\begin_layout Itemize
Las necesidades funcionales de alguna parte del sistema.
\end_layout

\begin_layout Itemize
Las restricciones de diseño que se deseen imponer.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
where
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cliente
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Abstraccion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Operacion()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AbstraccionRefinada
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Implementador
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
OperacionImp()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ImplementadorConcretoA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OperacionImp()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ImplementadorConcretoB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OperacionImp()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
comments
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Explicación coloquial de la relación entre los elementos del patrón y los
 elementos del diseño concreto; otros comentarios adicionales que ayuden
 a entender cómo se aplica el patrón de diseño
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Composite
\end_layout

\begin_layout Subsection
Propósito
\end_layout

\begin_layout Standard
Compone objetos en estructuras de árbol para representar jerarquías de parte-tod
o.
 Permite que los clientes traten de manera uniforme a los objetos individuales
 y a los compuestos.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Aplicabilidad
\end_layout

\begin_layout Itemize
Representar jerarquías de objetos parte-todo.
\end_layout

\begin_layout Itemize
Abstraer las diferencias entre composiciones de objetos y objetos individuales.
 Los clientes tratarán a todos los objetos de la estructura compuesta de
 manera uniforme.
\end_layout

\begin_layout Subsection
Estructura
\end_layout

\begin_layout Standard
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{myverbbox}{
\backslash
imp}
\end_layout

\begin_layout Plain Layout

for g in hijos:
\end_layout

\begin_layout Plain Layout

    g.Operacion();
\end_layout

\begin_layout Plain Layout


\backslash
end{myverbbox}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.8, every node/.style={scale=0.8}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=0, y=0]{Cliente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=4, y=-1.3]{Componente} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Operacion()} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Añadir(Componente)} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Eliminar(Componente)} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{ObtenerHijo(Int)}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=2, y=-6]{Hoja} {
\end_layout

\begin_layout Plain Layout

        Operacion()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=6.5, y=-6]{Compuesto} {
\end_layout

\begin_layout Plain Layout

        Operacion() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Añadir(Componente) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        Eliminar(Componente) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ObtenerHijo(Int)
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlnote[width=115, x=12, y=-5.5, anchor1=0, geometry=-|]{Compuesto} {
\end_layout

\begin_layout Plain Layout

        
\backslash
imp
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[anchor1=0, anchor2=150]{Cliente}{Componente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{Hoja}{Componente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{Compuesto}{Componente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniaggreg[arg=hijos, pos=0.1, anchor1=45, anchor2=30, geometry=|-, name=assoc]
{Compuesto}{Componente}
\end_layout

\begin_layout Plain Layout

    
\backslash
fill (6.3,0) circle (2pt) coordinate[pos=0.7];
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Participantes
\end_layout

\begin_layout Paragraph
Componente
\end_layout

\begin_layout Itemize
Declara la interfaz de los objetos de la composición.
\end_layout

\begin_layout Itemize
Implementa el comportamiento predeterminado de la interfaz que es común
 a todas las clases.
\end_layout

\begin_layout Itemize
Declara una interfaz para acceder a sus componentes hijos y gestionarlos.
\end_layout

\begin_layout Itemize
Opcionalmente, define una interfaz para acceder al padre de un componente
 en la estructura recursiva y, si es necesario, la implementa.
\end_layout

\begin_layout Paragraph
Hoja
\end_layout

\begin_layout Itemize
Representa objetos hoja en la composición.
 Una hoja no tiene hijos.
\end_layout

\begin_layout Itemize
Define el comportamiento de los objetos primitivos de la composición.
\end_layout

\begin_layout Paragraph
Compuesto
\end_layout

\begin_layout Itemize
Define el comportamiento de los componentes que tienen hijos.
\end_layout

\begin_layout Itemize
Almacena componentes hijos.
\end_layout

\begin_layout Itemize
Implementa las operaciones de la interfaz Componente relacionadas con los
 hijos.
\end_layout

\begin_layout Paragraph
Cliente
\end_layout

\begin_layout Itemize
Manipula objetos en la composición a través de la interfaz Componente.
\end_layout

\begin_layout Subsection
Colaboraciones
\end_layout

\begin_layout Standard
Los Clientes usan la interfaz de la clase Componente para interactuar con
 los objetos de la estructura compuesta.
 Si el recipiente es una Hoja, la petición se trata correctamente.
 Si es un Compuesto, normalmente redirige las peticiones a sus componentes
 hijos, posiblemente realizando operaciones adicionales antes o después.
\end_layout

\begin_layout Subsection
Consecuencias
\end_layout

\begin_layout Itemize
Define jerarquías de clases formadas por objetos primitivos y compuestos.
 Allí donde el código espere un objeto primitivo, también podrá recibir
 un objeto compuesto.
\end_layout

\begin_layout Itemize
Simplifica el cliente.
 Los cliente pueden tratar uniformemente a las estructuras compuestas y
 a los objetos individuales.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
Facilita añadir nuevos tipos de componentes.
 Si se definen nuevas subclases Compuesto u Hoja, éstas funcionarán automáticame
nte con las estructuras y el código cliente existentes.
 No hay que cambiar los clientes para las nuevas clases Componente.
\end_layout

\begin_layout Itemize
Puede hacer que un diseño sea demasiado general.
 La desventaja de facilitar añadir nuevos componentes es que hace más difícil
 restringir los componentes de un compuesto.
\end_layout

\begin_layout Subsection
Patrones relacionados
\end_layout

\begin_layout Itemize

\strikeout on
Muchas veces se usa el enlace al componente padre para implementar el patrón
 Chain of Responsibility.
\end_layout

\begin_layout Itemize
El patrón Decorator (Wrapper) suele usarse junto con el Composite.
 Cuando se usan juntos decoradores y compuestos, normalmente ambos tendrán
 una clase padre común.
 Por lo tanto, los decoradores tendrán que admitir la interfaz Componente
 con operaciones como Añadir, Eliminar y ObtenerHijo.
\end_layout

\begin_layout Itemize

\strikeout on
El patron Flyweight permite compartir componentes, si bien en ese caso éstos
 ya no pueden referirse a sus padres.
\end_layout

\begin_layout Itemize
Se puede usar el patrón Iterator para recorrer las estructuras definidas
 por el patrón Composite.
\end_layout

\begin_layout Itemize
El patrón Visitor localiza operaciones y comportamiento que de otro modo
 estaría distribuido en varias clases Compuesto y Hoja.
\end_layout

\begin_layout Subsection
Documentación
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="16" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pattern
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
based on
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Composite
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
because
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Fundamentación de la elección del patrón en términos de:
\end_layout

\begin_layout Itemize
Los cambios que este admite y los cambios probables anticipados en el diseño
 concreto.
\end_layout

\begin_layout Itemize
Las necesidades funcionales de alguna parte del sistema.
\end_layout

\begin_layout Itemize
Las restricciones de diseño que se deseen imponer.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
where
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Componente
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Componente
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Operacion()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Operacion()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Añadir(Componente)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Añadir(Componente)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Eliminar(Componente)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Eliminar(Componente)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ObtenerHijo(Int)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ObtenerHijo(Int)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compuesto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operacion()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operacion()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Añadir(Componente)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Añadir(Componente)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eliminar(Componente)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eliminar(Componente)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ObtenerHijo(Int)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ObtenerHijo(Int)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoja
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operacion()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operacion()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
comments
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Explicación coloquial de la relación entre los elementos del patrón y los
 elementos del diseño concreto; otros comentarios adicionales que ayuden
 a entender cómo se aplica el patrón de diseño
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Wrapper/Decorator
\end_layout

\begin_layout Subsection
Propósito
\end_layout

\begin_layout Standard
Asigna responsabilidades adicionales a un objeto dinámicamente, proporcionando
 una alternativa flexible a la herencia para extender la funcionalidad.
\end_layout

\begin_layout Subsection
Aplicabilidad
\end_layout

\begin_layout Itemize
Para añadir objetos individuales de forma dinámica y transparente, es decir,
 sin afectar a otros objetos.
\end_layout

\begin_layout Itemize
Para responsabilidades que pueden ser retiradas.
\end_layout

\begin_layout Itemize
Cuando la extensión mediante la herencia no es viable.
 A veces es posible tener un gran número de extensiones independientes,
 produciéndose una explosión de subclases para permitir todas las combinaciones.
 O puede ser que una definición de una clase esté oculta o que no esté disponibl
e para ser heredada.
\end_layout

\begin_layout Subsection
Estructura
\end_layout

\begin_layout Standard
\begin_inset space \hspace*{}
\length -1cm
\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{myverbbox}{
\backslash
wr}
\end_layout

\begin_layout Plain Layout

componente->Operacion();
\end_layout

\begin_layout Plain Layout


\backslash
end{myverbbox}
\end_layout

\begin_layout Plain Layout


\backslash
begin{myverbbox}{
\backslash
wrr}
\end_layout

\begin_layout Plain Layout

Decorador::Operacion();
\end_layout

\begin_layout Plain Layout

ComportamientoAñadido();
\end_layout

\begin_layout Plain Layout


\backslash
end{myverbbox}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.8, every node/.style={scale=0.8}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=0, y=0]{Componente} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Operacion()}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=-3, y=-3]{ComponenteConcreto} {
\end_layout

\begin_layout Plain Layout

        Operacion()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=2, y=-3]{Decorador} {
\end_layout

\begin_layout Plain Layout

        Operacion()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=-1, y=-6]{DecoradorConcretoA} {
\end_layout

\begin_layout Plain Layout

        Operacion()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        estadoAñadido
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=5, y=-6]{DecoradorConcretoB} {
\end_layout

\begin_layout Plain Layout

        Operacion() 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        ComportamientoAñadido()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlnote[width=150, x=8, y=-3, anchor1=0]{Decorador} {
\end_layout

\begin_layout Plain Layout

        
\backslash
wr
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlnote[width=150, x=11.5, y=-6, anchor1=0]{DecoradorConcretoB} {
\end_layout

\begin_layout Plain Layout

        
\backslash
wrr
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{ComponenteConcreto}{Componente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{Decorador}{Componente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{DecoradorConcretoA}{Decorador}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{DecoradorConcretoB}{Decorador}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniaggreg[mult=componente, pos=0.3, geometry=|-, anchor1=60, anchor2=20]{Decor
ador}{Componente}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Participantes
\end_layout

\begin_layout Paragraph
Componente
\end_layout

\begin_layout Itemize
Define la interfaz para objetos a los que se puede añadir responsabilidades
 dinámicamente.
\end_layout

\begin_layout Paragraph
ComponenteConcreto
\end_layout

\begin_layout Itemize
Define un objeto al que se pueden añadir reponsabilidades adicionales.
\end_layout

\begin_layout Paragraph
Decorador
\end_layout

\begin_layout Itemize
Mantiene una referencia a un objeto Componente y define una interfaz que
 se ajusta a la interfaz Componente.
\end_layout

\begin_layout Paragraph
DecoradorConcreto
\end_layout

\begin_layout Itemize
Añade responsabilidades al componente.
\end_layout

\begin_layout Subsection
Colaboraciones
\end_layout

\begin_layout Standard
El Decorador redirige peticiones a su objeto Componente.
 Opcionalmente puede realizar operaciones adicionales antes y después de
 reenviar la petición.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Consecuencias
\end_layout

\begin_layout Itemize
Mas flexibilidad que la herencia estática.
 Con los decoradores se pueden añadir y eliminar responsabilidades en tiempo
 de ejecución simplemente poniéndolas y quitándolas.
 Por otro lado, proporcionar diferentes clases Decorador para una determinada
 clase Componente permite mezclar responsabilidades.
 Los Decoradores también facilitan añadir una propiedad dos veces.
\end_layout

\begin_layout Itemize
Evita clases cargadas de funciones en la parte de arriba de la jerarquía.
 En vez de tratar de permitir todas las funcionalidades inimaginables en
 una clase compleja y adaptable, podemos definir primero una clase simple
 y añadir luego funcionalidad incrementalmente con objetos Decorador.
 La funcionalidad puede obtenerse componiendo partes simples.
 También resulta fácil definir nuevos tipos de Decoradores independientemente
 de las clases de objetos de las que hereden, incluso para extensiones que
 no hubieran sido previstas.
\end_layout

\begin_layout Subsection
Patrones relacionados
\end_layout

\begin_layout Itemize

\strikeout on
Adapter: un decorador se diferencia de un adaptador en que el decorador
 sólo cambia las responsabilidades de un objeto, no su interfaz, mientras
 que un adaptador le da a un objeto una interfaz completamente nueva.
\end_layout

\begin_layout Itemize
Composite: podemos ver a un decorador como un compuesto degenerado que sólo
 tiene un componente.
 No obstante, un decorador añade responsabilidades adicionales; no está
 pensando para la agregación de objetos.
\end_layout

\begin_layout Itemize
Strategy: un decorador permite cambiar el exterior de un objeto; una estrategia
 permite cambiar sus 
\begin_inset Quotes fld
\end_inset

tripas
\begin_inset Quotes frd
\end_inset

.
 Son dos formas alternativas de modificar un objeto.
\end_layout

\begin_layout Subsection
Documentación
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pattern
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
based on
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wrapper
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
because
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Fundamentación de la elección del patrón en términos de:
\end_layout

\begin_layout Itemize
Los cambios que este admite y los cambios probables anticipados en el diseño
 concreto.
\end_layout

\begin_layout Itemize
Las necesidades funcionales de alguna parte del sistema.
\end_layout

\begin_layout Itemize
Las restricciones de diseño que se deseen imponer.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
where
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Componente
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Componente
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Operacion()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ComponenteConcreto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operacion()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Decorador
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Operacion()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DecoradorConcretoA
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operacion()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DecoradorConcretoB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operacion()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
comments
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Explicación coloquial de la relación entre los elementos del patrón y los
 elementos del diseño concreto; otros comentarios adicionales que ayuden
 a entender cómo se aplica el patrón de diseño
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Chapter
Patrones de comportamiento
\end_layout

\begin_layout Section
Command
\end_layout

\begin_layout Subsection
Propósito
\end_layout

\begin_layout Standard
Encapsula una petición en un objeto, permitiendo así parametrizar a los
 clientes con diferentes peticiones, hacer cola o llevar un registro de
 las peticiones, y poder deshacer las operaciones.
\end_layout

\begin_layout Subsection
Aplicabilidad
\end_layout

\begin_layout Itemize
Parametrizar objetos con una acción a realizar.
 Los objetos Orden son un sustituto orientado a objetos para las funciones
 callback.
\end_layout

\begin_layout Itemize
Especificar, poner en cola y ejecutar peticiones en diferentes instantes
 de tiempo.
 Un objeto Orden puede tener un tiempo de vida independiente de la petición
 original.
\end_layout

\begin_layout Itemize
Permitir deshacer.
 La operación Ejecutar de Orden puede guardar en la propia orden el estado
 que anule sus efectos.
 Debe añadirse a la interfaz Orden una operación Deshacer que anule los
 efectos de una llamada anterior a Ejecutar.
 Las órdenes ejecutadas se guardan en una lista que hace las veces de historial.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
Permitir registrar los cambios de manera que se puedan volver a aplicar
 en caso de una caída del sistema.
 Aumentando la interfaz Orden con operaciones para cargar y guardar se puede
 mantener un registro persistente de los cambios.
 Recuperarse de una caída implica volver a cargar desde el disco las órdenes
 guardadas y volver a ejecutarlas con la operación Ejecutar.
\end_layout

\begin_layout Itemize
Estructurar un sistema alrededor de operaciones de alto nivel construidas
 sobre operaciones básicas.
 Dicha estructura es común en los sistemas de información que permiten transacci
ones.
\end_layout

\begin_layout Subsection
Estructura
\end_layout

\begin_layout Standard
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{myverbbox}{
\backslash
imp}
\end_layout

\begin_layout Plain Layout

receptor->Accion();
\end_layout

\begin_layout Plain Layout


\backslash
end{myverbbox}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.8, every node/.style={scale=0.8}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=0, y=0]{Cliente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=3, y=0]{Invocador}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=3, y=-3]{Receptor} {
\end_layout

\begin_layout Plain Layout

        Accion()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=8, y=-0.5]{Orden} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Ejecutar()}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=8, y=-3.2]{OrdenConcreta} {
\end_layout

\begin_layout Plain Layout

        Ejecutar()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        estado
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlnote[width=115, x=13, y=-3.2, anchor1=0, geometry=-|]{Compuesto} {
\end_layout

\begin_layout Plain Layout

        
\backslash
imp
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit{OrdenConcreta}{Orden}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[anchor2=155, geometry=|-]{Cliente}{Receptor}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[anchor1=160, anchor2=20, mult1=receptor, pos1=0.5]{OrdenConcreta}{Rec
eptor}
\end_layout

\begin_layout Plain Layout

    
\backslash
umldep[anchor1=-130, anchor2=208, geometry=|-]{Cliente}{OrdenConcreta}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniaggreg[anchor1=0, anchor2=157]{Invocador}{Orden}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Participantes
\end_layout

\begin_layout Paragraph
Orden
\end_layout

\begin_layout Itemize
Declara una interfaz para ejecutar una operación.
\end_layout

\begin_layout Paragraph
OrdenConcreta
\end_layout

\begin_layout Itemize
Define un enlace entre un objeto Receptor y una acción.
\end_layout

\begin_layout Itemize
Implementa Ejecutar invocando la correspondiente operación u operaciones
 del Receptor.
\end_layout

\begin_layout Paragraph
Cliente
\end_layout

\begin_layout Itemize
Crea un objeto OrdenConcreta y establece su receptor.
\end_layout

\begin_layout Paragraph
Invocador
\end_layout

\begin_layout Itemize
Le pide a la orden que ejecute la petición.
\end_layout

\begin_layout Paragraph
Receptor
\end_layout

\begin_layout Itemize
Sabe cómo llevar a cabo las operaciones asociadas a una petición.
 Cualquier clase puede hacer actuar como Receptor.
\end_layout

\begin_layout Subsection
Colaboraciones
\end_layout

\begin_layout Itemize
El cliente crea un objeto OrdenConcreta y especifica su receptor.
\end_layout

\begin_layout Itemize
Un objeto Invocador almacena el objeto OrdenConcreta.
\end_layout

\begin_layout Itemize
El invocador envía una petición llamando a Ejecutar sobre la orden.
 Cuando las órdenes se pueden deshacer, OrdenConcreta guarda el estado para
 deshacer la orden antes de llamar a Ejecutar.
\end_layout

\begin_layout Itemize
El objeto OrdenConcreta invoca operaciones de su receptor para llevar a
 cabo la petición.
\end_layout

\begin_layout Subsection
Consecuencias
\end_layout

\begin_layout Itemize
Orden desacopla el objeto que invoca la operación de aquél que sabe cómo
 realizarla.
\end_layout

\begin_layout Itemize
Las órdenes son objetos de primera clase.
 Pueden ser manipulados y extendidos como cualquier otro objeto.
\end_layout

\begin_layout Itemize
Se pueden ensamblar órdenes en una orden compuesta.
 En general, las órdenes compuestas son una instancia del patrón Composite.
\end_layout

\begin_layout Itemize
Es mas fácil añadir nuevas órdenes, ya que no hay que cambiar las clases
 existentes.
\end_layout

\begin_layout Subsection
Patrones relacionados
\end_layout

\begin_layout Itemize
Se puede usar el patrón Composite para implementar ordenes compuestas.
\end_layout

\begin_layout Itemize

\strikeout on
Un memento puede mantener el estado que necesitan las órdenes para anular
 (deshacer) sus efectos.
\end_layout

\begin_layout Itemize

\strikeout on
Una orden que debe ser copiada antes de ser guardada en el historial funciona
 como un Prototype.
\end_layout

\begin_layout Subsection
Documentación
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pattern
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
based on
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Command
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
because
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Fundamentación de la elección del patrón en términos de:
\end_layout

\begin_layout Itemize
Los cambios que este admite y los cambios probables anticipados en el diseño
 concreto.
\end_layout

\begin_layout Itemize
Las necesidades funcionales de alguna parte del sistema.
\end_layout

\begin_layout Itemize
Las restricciones de diseño que se deseen imponer.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
where
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Invocador
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Orden
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Orden
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Ejecutar()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Ejecutar()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OrdenConcreta
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ejecutar()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ejecutar()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Receptor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Accion()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
estado
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
comments
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Explicación coloquial de la relación entre los elementos del patrón y los
 elementos del diseño concreto; otros comentarios adicionales que ayuden
 a entender cómo se aplica el patrón de diseño
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Iterator
\end_layout

\begin_layout Subsection
Propósito
\end_layout

\begin_layout Standard
Proporciona un modo de acceder secuencialmente a los elementos de un objeto
 agregado sin exponer su representación interna.
\end_layout

\begin_layout Subsection
Aplicabilidad
\end_layout

\begin_layout Itemize
Acceder al contenido de un objeto agregado sin exponer su representación
 interna.
\end_layout

\begin_layout Itemize
Permitir varios recorridos sobre objetos agregados.
\end_layout

\begin_layout Itemize
Proporcionar una interfaz uniforme para recorrer diferentes estructuras
 agregadas.
\end_layout

\begin_layout Subsection
Estructura
\end_layout

\begin_layout Standard
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{myverbbox}{
\backslash
imp}
\end_layout

\begin_layout Plain Layout

return new IteradorConcreto(this);
\end_layout

\begin_layout Plain Layout


\backslash
end{myverbbox}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.8, every node/.style={scale=0.8}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=3.5, y=0]{Cliente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=0, y=-0.5]{Agregado} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{CrearIterador()}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=7, y=-1.2]{Iterador} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Primero()} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Siguiente()} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{HaTerminado()} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{ElementoActual()} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=0, y=-4]{AgregadoConcreto} {
\end_layout

\begin_layout Plain Layout

        CrearIterador()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=7, y=-4.2]{IteradorConcreto}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlnote[width=210, x=0, y=-6.5, anchor1=90]{AgregadoConcreto} {
\end_layout

\begin_layout Plain Layout

        
\backslash
imp
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit{AgregadoConcreto}{Agregado}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit{IteradorConcreto}{Iterador}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[anchor1=0, anchor2=147]{Cliente}{Iterador}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[anchor1=0, anchor2=17]{Cliente}{Agregado}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[anchor1=180, anchor2=-5]{IteradorConcreto}{AgregadoConcreto}
\end_layout

\begin_layout Plain Layout

    
\backslash
umldep[anchor1=15, anchor2=160, geometry=-|]{AgregadoConcreto}{IteradorConcreto}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Participantes
\end_layout

\begin_layout Paragraph
Iterador
\end_layout

\begin_layout Itemize
Define una interfaz para recorrer los elementos y acceder a ellos.
\end_layout

\begin_layout Paragraph
IteradorConcreto
\end_layout

\begin_layout Itemize
Implementa la interfaz Iterador.
\end_layout

\begin_layout Itemize
Mantiene la posición actual en el recorrido del agregado.
\end_layout

\begin_layout Paragraph
Agregado
\end_layout

\begin_layout Itemize
Define una interfaz para crear un objeto Iterador.
\end_layout

\begin_layout Paragraph
AgregadoConcreto
\end_layout

\begin_layout Itemize
Implementa la interfaz de creación de Iterador para devolver una instancia
 del IteradorConcreto apropiado.
\end_layout

\begin_layout Subsection
Colaboraciones
\end_layout

\begin_layout Itemize
Un IteradorConcreto sabe cuál es el objeto actual del agregado y puede calcular
 el objeto siguiente en el recorrido.
\end_layout

\begin_layout Subsection
Consecuencias
\end_layout

\begin_layout Itemize
Permite variaciones en el recorrido de un agregado.
 Los agregados pueden recorrerse de muchas formas.
 Los iteradores facilitan cambiar el algoritmo de recorrido: basta con sustituir
 la instancia de iterador por otra diferente.
 También se pueden definir subclases de Iterador para permitir nuevos recorridos.
\end_layout

\begin_layout Itemize
Los iteradores simplifican la interfaz de los agregados.
 La interfaz de recorrido de Iterador elimina la necesidad de una interfaz
 parecida en Agregado, simplificando así la interfaz del agregado.
\end_layout

\begin_layout Itemize
Se puede hacer más de un recorrido a la vez sobre un agregado.
 Un iterador mantiene su propio estado del recorrido, por lo tanto, es posible
 estar realizando más de un recorrido al mismo tiempo.
\end_layout

\begin_layout Subsection
Patrones relacionados
\end_layout

\begin_layout Itemize
Composite: los iteradores suelen aplicarse a estructuras recursivas como
 los compuestos.
\end_layout

\begin_layout Itemize

\strikeout on
Factory Method: los iteradores polimórficos se basan en métodos de fabricación
 para crear instancias de las subclases apropiadas de Iterator.
\end_layout

\begin_layout Itemize

\strikeout on
El patrón Memento suele usarse conjuntamente con el patrón Iterator.
 Un iterador puede usar un memento para representar el estado de una interacción.
 El iterador almacena el memento internamente.
\end_layout

\begin_layout Subsection
Documentación
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="19" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pattern
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
based on
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Iterator
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
because
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cliente
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
where
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Agregado
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Agregado
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
crearIterador()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
crearIterador()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AgregadoConcreto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
crearIterador()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
crearIterador()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Iterador
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Iterador
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
primero()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
primero()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
siguente()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
siguente()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
haTerminado()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
haTerminado()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
elementoActual()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
elementoActual()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IteradorConcreto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
primero()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
primero()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
siguente()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
siguente()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
haTerminado()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
haTerminado()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
elementoActual()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
elementoActual()
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
comments
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Explicación coloquial de la relación entre los elementos del patrón y los
 elementos del diseño concreto; otros comentarios adicionales que ayuden
 a entender cómo se aplica el patrón de diseño
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Strategy
\end_layout

\begin_layout Subsection
Propósito
\end_layout

\begin_layout Standard
Defina una familia de algoritmos, encapsula cada uno de ellos y los hace
 intercambiables.
 Permite que un algoritmo varíe independientemente de los clientes que lo
 usan.
\end_layout

\begin_layout Subsection
Aplicabilidad
\end_layout

\begin_layout Itemize
Cuando muchas clases relacionadas difieren sólo en su comportamiento, las
 estrategias permiten configurar una clase con un determinado comportamiento
 de entre muchos posibles.
\end_layout

\begin_layout Itemize
Cuando se necesitan distintas variantes de un algoritmo.
\end_layout

\begin_layout Itemize
Cuando un algoritmo usa datos que los clientes no deberían conocer, puede
 usarse el patrón Strategy para evitar exponer estructuras de datos complejas.
\end_layout

\begin_layout Itemize
Cuando una clase define muchos comportamientos, en vez de tener muchos condicion
ales podemos mover las ramas de éstos a su propia clase Estrategia.
\end_layout

\begin_layout Subsection
Estructura
\end_layout

\begin_layout Standard
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.8, every node/.style={scale=0.8}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=0, y=0]{Contexto} {
\end_layout

\begin_layout Plain Layout

        InterfazContexto()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=6, y=0]{Estrategia} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{InterfazAlgoritmo()}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=3, y=-3]{EstrategiaConcretaA} {
\end_layout

\begin_layout Plain Layout

        InterfazAlgoritmo()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=9, y=-3]{EstrategiaConcretaB} {
\end_layout

\begin_layout Plain Layout

        InterfazAlgoritmo()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniaggreg[arg=estrategia, pos=0.5, anchor1=15, anchor2=165]{Contexto}{Estrateg
ia}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{EstrategiaConcretaA}{Estrategia}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{EstrategiaConcretaB}{Estrategia}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Participantes
\end_layout

\begin_layout Paragraph
Estrategia
\end_layout

\begin_layout Itemize
Declara una interfaz común a todos los algoritmos permitidos.
 El Contexto usa esta interfaz para llamar al algoritmo definido por una
 EstrategiaConcreta.
\end_layout

\begin_layout Paragraph
EstrategiaConcreta
\end_layout

\begin_layout Itemize
Implementa el algoritmo usando la interfaz de Estrategia.
\end_layout

\begin_layout Paragraph
Contexto
\end_layout

\begin_layout Itemize
Se configura con un objeto EstrategiaConcreta.
\end_layout

\begin_layout Itemize
Mantiene una referencia a un objeto Estrategia.
\end_layout

\begin_layout Itemize
Puede definir una interfaz que permita a la Estrategia acceder a sus datos.
\end_layout

\begin_layout Subsection
Colaboraciones
\end_layout

\begin_layout Itemize
Estrategia y Contexto interactúan para implementar el algoritmo elegido.
 Un contexto puede pasar a la estrategia todos los datos requeridos por
 el algoritmo cada vez que se llama a éste.
 Otra alternativa es que el contexto se pase a sí mismo como argumento de
 las operaciones de Estrategia.
 Esto permite a la estrategia hacer llamadas al contexto cuando sea necesario.
\end_layout

\begin_layout Itemize
Un contexto redirige peticiones de los clientes a su estrategia.
 Los clientes normalmente crean un objeto EstrategiaConcreta, el cual pasan
 al contexto; por lo tanto, los clientes interactúan exclusivamente con
 el contexto.
 Suele haber una familia de clases EstrategiaConcreta a elegir por el cliente.
\end_layout

\begin_layout Subsection
Consecuencias
\end_layout

\begin_layout Itemize
Familias de algoritmos.
 Las jerarquías de clases Estrategia definen una familia de algoritmos o
 comportamientos para ser reutilizados por los contextos.
 La herencia puede ayudar a sacar factor común de la funcionalidad de estos
 algoritmos.
\end_layout

\begin_layout Itemize
Una alternativa a la herencia.
 Heredar de una clase Contexto para proporcionar diferentes comportamientos
 liga el comportamiento al Contexto mezclando la implementación del algoritmo
 con el Contexto y ademas impide modificar el algoritmo dinamicamente.
 Encapsular el algoritmo en clases Estrategia separadas nos permite variar
 el algoritmo independientemente de su contexto, haciéndolo mas fácil de
 cambiar, comprender y extender.
\end_layout

\begin_layout Itemize
Las estrategias eliminan las sentencias condicionales.
 El patrón Strategy ofrece una alternativa a las sentencias condicionales
 para seleccionar el comportamiento deseado.
 Un código que contiene muchas sentencias condicionales suele indicar la
 necesidad de aplicar el patrón Estrategia.
\end_layout

\begin_layout Itemize
Elección de implementaciones.
 Las estrategias pueden proporcionar distintas implementaciones del mismo
 comportamiento.
 El cliente puede elegir entre estrategias con diferentes soluciones de
 compromiso tiempo y espacio.
\end_layout

\begin_layout Itemize
Los clientes deben conocer las diferentes Estrategias.
 El patrón tiene el inconveniente potencial de que un cliente debe comprender
 como difieren la Estrategias antes de seleccionar la adecuada.
 El patrón Strategy debería usarse sólo cuando la variación de comportamiento
 sea relevante a los clientes.
\end_layout

\begin_layout Itemize
Costes de comunicación entre Estrategia y Contexto.
 La interfaz de Estrategia es compartida por todas las clases EstrategiaConcreta
, por lo tanto, es probable que algunos objetos EstrategiaConcreta no usen
 toda la información que reciben a través de dicha interfaz.
 Esto significa que habrá veces en las que el contexto crea e inicializa
 parámetros que nunca se usan.
\end_layout

\begin_layout Itemize
Mayor número de objetos.
 Las estrategias aumentan el número de objetos de una aplicación.
 A veces se puede reducir este coste implementando las estrategias como
 objetos sin estado que puedan ser compartidos por el contexto.
 El patrón Flyweight describe este enfoque en más detalle.
\end_layout

\begin_layout Subsection
Patrones relacionados
\end_layout

\begin_layout Itemize

\strikeout on
Flyweight: los objetos Estrategia suelen ser buenos pesos ligeros.
\end_layout

\begin_layout Subsection
Documentación
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pattern
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
based on
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Strategy
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
because
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Fundamentación de la elección del patrón en términos de:
\end_layout

\begin_layout Itemize
Los cambios que este admite y los cambios probables anticipados en el diseño
 concreto.
\end_layout

\begin_layout Itemize
Las necesidades funcionales de alguna parte del sistema.
\end_layout

\begin_layout Itemize
Las restricciones de diseño que se deseen imponer.
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
where
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Contexto
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
InterfazContexto()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Estrategia
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
InterfazAlgoritmo()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EstrategiaConcretaA
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
InterfazAlgoritmo()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EstrategiaConcretaB
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
InterfazAlgoritmo()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
comments
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Explicación coloquial de la relación entre los elementos del patrón y los
 elementos del diseño concreto; otros comentarios adicionales que ayuden
 a entender cómo se aplica el patrón de diseño
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Visitor
\end_layout

\begin_layout Subsection
Propósito
\end_layout

\begin_layout Standard
Representa una operación sobre los elementos de una estructura de objetos.
 Permite definir una nueva operación sin cambiar las clases de los elementos
 sobre los que opera.
\end_layout

\begin_layout Subsection
Aplicabilidad
\end_layout

\begin_layout Itemize
Cuando una estructura de objetos contiene muchas clases de objetos con diferente
s interfaces, y queremos realizar operaciones sobre esos elementos que dependen
 de su clase concreta.
\end_layout

\begin_layout Itemize
Cuando se necesitan realizar muchas operaciones distintas y no relacionadas
 sobre objetos de una estructura de objetos, y queremos evitar 
\begin_inset Quotes fld
\end_inset

contaminar
\begin_inset Quotes frd
\end_inset

 sus clases con dichas operaciones.
\end_layout

\begin_layout Itemize
Cuando las clases que definen la estructura de objeto rara vez cambian,
 pero muchas veces queremos definir nuevas operaciones sobre la estructura.
\end_layout

\begin_layout Subsection
Estructura
\end_layout

\begin_layout Standard
\align center
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{myverbbox}{
\backslash
imp}
\end_layout

\begin_layout Plain Layout

v->VisitarElementoConcretoA(this);
\end_layout

\begin_layout Plain Layout


\backslash
end{myverbbox}
\end_layout

\begin_layout Plain Layout


\backslash
begin{myverbbox}{
\backslash
impp}
\end_layout

\begin_layout Plain Layout

v->VisitarElementoConcretoB(this);
\end_layout

\begin_layout Plain Layout


\backslash
end{myverbbox}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[scale=0.5, every node/.style={scale=0.5}]
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=-2.5, y=-3]{Cliente}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlsimpleclass[x=1, y=0]{EstructuraDeObjetos}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=6, y=-0.5]{Elemento} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{Aceptar(Visitante)}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=3, y=-3.5]{ElementoConcretoA} {
\end_layout

\begin_layout Plain Layout

        Aceptar(Visitante v) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        OperacionA()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=8, y=-3.5]{ElementoConcretoB} {
\end_layout

\begin_layout Plain Layout

        Aceptar(Visitante v) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        OperacionB()
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlnote[width=210, x=2, y=-6.0, anchor1=160, geometry=|-]{ElementoConcretoA}
 {
\end_layout

\begin_layout Plain Layout

        
\backslash
imp
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlnote[width=210, x=10, y=-6.0, anchor1=30, geometry=|-]{ElementoConcretoB}
 {
\end_layout

\begin_layout Plain Layout

        
\backslash
impp
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[anchor1=0, anchor2=165]{EstructuraDeObjetos}{Elemento}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{ElementoConcretoA}{Elemento}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{ElementoConcretoB}{Elemento}
\end_layout

\begin_layout Plain Layout

    
\backslash
fill (4.1,0) circle (2pt) coordinate[pos=0.7];
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umlabstract[x=6, y=-8.5]{Visitante} {
\end_layout

\begin_layout Plain Layout

        
\backslash
emph{VisitarElementoConcretoA(ElementoConcretoA)} 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        
\backslash
emph{VisitarElementoConcretoB(ElementoConcretoB)}
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=2, y=-12]{VisitanteConcreto1} {
\end_layout

\begin_layout Plain Layout

        VisitarElementoConcretoA(ElementoConcretoA) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        VisitarElementoConcretoB(ElementoConcretoB) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlclass[x=11.5, y=-12]{VisitanteConcreto2} {
\end_layout

\begin_layout Plain Layout

        VisitarElementoConcretoA(ElementoConcretoA) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

        VisitarElementoConcretoB(ElementoConcretoB) 
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{VisitanteConcreto1}{Visitante}
\end_layout

\begin_layout Plain Layout

    
\backslash
umlinherit[geometry=|-|]{VisitanteConcreto2}{Visitante}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[geometry=|-]{Cliente}{Visitante}
\end_layout

\begin_layout Plain Layout

    
\backslash
umluniassoc[geometry=|-]{Cliente}{EstructuraDeObjetos}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Participantes
\end_layout

\begin_layout Paragraph
Visitante
\end_layout

\begin_layout Itemize
Declara una operación Visitar para cada clase de operación ElementoConcreto
 de la estructura de objetos.
 El nombre y signatura de la operación identifican a la clase que envía
 la petición Visitar al visitante.
 A continuación el visitante puede acceder al elemento directamente a través
 de su interfaz particular.
\end_layout

\begin_layout Paragraph
VisitanteConcreto
\end_layout

\begin_layout Itemize
Implementa cada operación declarada por Visitante.
 Cada operación implementa un fragmento del algoritmo definido para la clase
 correspondiente de la estructura.
 VisitanteConcreto proporciona el contexto para el algoritmo y guarda su
 estado local.
 Muchas veces este estado acumula resultados durante el recorrido de la
 estructura.
\end_layout

\begin_layout Paragraph
Elemento
\end_layout

\begin_layout Itemize
Define una operación Aceptar que toma un visitante como argumento.
\end_layout

\begin_layout Paragraph
ElementoConcreo
\end_layout

\begin_layout Itemize
Implementa una operación Aceptar que toma un visitante como argumento.
\end_layout

\begin_layout Paragraph
EstructuraDeObjetos
\end_layout

\begin_layout Itemize
Puede enumerar sus elementos.
\end_layout

\begin_layout Itemize
Puede proporcionar una interfaz de alto nivel para permitir al visitante
 visitar a sus elementos.
\end_layout

\begin_layout Itemize
Puede ser un compuesto (Composite) o una colección, como una lista o un
 conjunto.
\end_layout

\begin_layout Subsection
Colaboraciones
\end_layout

\begin_layout Itemize
Un cliente que usa el patrón Visitor debe crear un objeto VisitanteConcreto
 y a continuación recorrer la estructura, visitando cada objeto con el visitante.
\end_layout

\begin_layout Itemize
Cada vez que se visita a un elemento, este llama a la operación del Visitante
 que se corresponde con su clase.
 El elemento se pasa a sí mismo como argumento de la operación para permitir
 al visitante acceder a su estado, en caso de que sea necesario.
\end_layout

\begin_layout Subsection
Consecuencias
\end_layout

\begin_layout Itemize
Los visitantes facilitan añadir nuevas operaciones que dependen de los component
es de objetos complejos.
 Podemos definir una nueva operación sobre una estructura simplemente añadiendo
 un nuevo visitante.
\end_layout

\begin_layout Itemize
Un visitante agrupa operaciones relacionadas y separa las que no lo están.
 El comportamiento similar no está desperdigado por las clases que definen
 la estructura de objetos; está localizado en un visitante.
 Las partes de comportamiento no relacionadas se dividen en sus propias
 subclases del visitante.
\end_layout

\begin_layout Itemize
Es difícil añadir nuevas clases de ElementoConcreto.
 Cada ElementoConcreto nuevo da lugar a una nueva operación abstracta del
 Visitante y a su correspondiente implementación predeterminada que puede
 ser heredada por la mayoría de los visitantes concretos, pero esto representa
 una excepción mas que una regla.
\end_layout

\begin_layout Itemize
Visitar varias jerarquías de clases.
 Un Iterador puede visitar a los objetos de una estructura llamando a sus
 operaciones a medida que los recorre.
 Pero un Iterador no puede trabajar en varias estructuras de objetos con
 distintos tipos de elementos.
 El patrón Visitor no tiene esta restricción.
 Puede visitar objetos que no tienen una clase padre en común.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Itemize
Acumular el estado.
 Los visitante pueden acumular estado a medida que van visitando cada elemento
 de la estructura de objetos.
 Sin un visitante, este estado se pasaría como argumentos extra a las operacione
s que realizan el recorrido.
\end_layout

\begin_layout Itemize
Romper la encapsulación.
 El enfoque del patrón Visitor asume que la interfaz de ElementoConcreto
 es lo bastante porente como para que los visitantes hagan su trabajo.
 Como resultado, el patrón suele obligarnos a proporcionar operaciones públicas
 que accedan al estado interno de un elemento, lo que puede comprometer
 su encapsulación.
\end_layout

\begin_layout Subsection
Patrones relacionados
\end_layout

\begin_layout Itemize
Composite: los visitantes pueden usarse para aplicar una operación sobre
 una estructura de objetos definida por el patrón Composite.
\end_layout

\begin_layout Itemize

\strikeout on
Interpreter: se puede aplicar el patrón Visitor para llevar a cabo la interpreta
ción.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Documentación
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="23" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pattern
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
based on
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Visitor
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
because
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
where
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cliente
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
EstructuraDeObjetos
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Elemento
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Elemento
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Aceptar(Visitante)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ElementoConcretoA
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aceptar(Visitante)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OperacionA()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ElementoConcretoB
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aceptar(Visitante)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OperacionB()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
Visitante
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
VisitanteConcretoElementoA(ElementoConcretoA)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
VisitanteConcretoElementoB(ElementoConcretoB)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\emph on
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VisitanteConcreto1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VisitarElementoConcretoA(ElementoConcretoA)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VisitarElementoConcretoB(ElementoConcretoB)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VisitanteConcreto2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VisitarElementoConcretoA(ElementoConcretoA)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VisitarElementoConcretoB(ElementoConcretoB)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
is
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
comments
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "75col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
Explicación coloquial de la relación entre los elementos del patrón y los
 elementos del diseño concreto; otros comentarios adicionales que ayuden
 a entender cómo se aplica el patrón de diseño
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\end_layout

\end_body
\end_document
