#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{pgfplots}
\end_preamble
\use_default_options true
\begin_modules
tcolorbox
\end_modules
\maintain_unincluded_children false
\language spanish-mexico
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Seguridad Ofensiva 2020: Trabajo Práctico 5
\end_layout

\begin_layout Author
Federico Juan Badaloni y Damián Ariel Marotte
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section*
Ejercicio 1
\end_layout

\begin_layout Standard
La utilidad 
\begin_inset Quotes fld
\end_inset


\family typewriter
zzuf
\family default

\begin_inset Quotes frd
\end_inset

 permite realizar pequeñas modificaciones a una entrada válida de un programa,
 con el fin de encontrar otra entrada que logre un funcionamiento indebido.
\end_layout

\begin_layout Standard
La opción de linea de comandos 
\begin_inset Quotes fld
\end_inset

-s
\begin_inset Quotes frd
\end_inset

 permite indicar las diferentes semillas con las que se alterará la entada
 y la opción 
\begin_inset Quotes fld
\end_inset

-c
\begin_inset Quotes frd
\end_inset

 establece el radio de perturbación generado.
\end_layout

\begin_layout Standard
Encontramos un crash corriendo 
\begin_inset Quotes fld
\end_inset


\family typewriter
zzuf -c -s0:10000 -r 0.0001:0.001 ./parse mono.bmp
\family default

\begin_inset Quotes frd
\end_inset

.
 El resultado puede reproducirse con la seed 
\family typewriter
s=36
\family default
.
\end_layout

\begin_layout Standard
Posteriormente generamos el archivo malicioso 
\begin_inset Quotes fld
\end_inset


\family typewriter
cat mono.bmp | zzuf -cvq -s36 -r 0.0001:0.001 > error.bmp
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
Si analizamos la ejecución con gdb (estableciendo un breakpoint en la linea
 74) puede observarse que la variable 
\begin_inset Quotes fld
\end_inset


\family typewriter
infoheader.ncolours
\family default

\begin_inset Quotes frd
\end_inset

 vale 
\begin_inset Quotes fld
\end_inset

524288
\begin_inset Quotes frd
\end_inset

, por lo que 
\begin_inset Quotes fld
\end_inset


\family typewriter
i
\family default

\begin_inset Quotes frd
\end_inset

 tarde o temprano asumirá valores mayores a 255.
 La llamada a la función 
\begin_inset Quotes fld
\end_inset


\family typewriter
read
\family default

\begin_inset Quotes frd
\end_inset

 escribirá en 
\begin_inset Quotes fld
\end_inset


\family typewriter
colourindex[i]
\family default

\begin_inset Quotes frd
\end_inset

 pero puede observarse en la linea 40 que dicho arreglo solo tiene capacidad
 para 255 valores, por lo que puede desbordarse y modificar la 
\emph on
return address
\emph default
 de la función 
\family typewriter
parse
\family default
, lo cual modifica el EIP.
\end_layout

\begin_layout Section*
Ejercicio 2
\end_layout

\begin_layout Standard
El siguiente script Python utiliza angr para buscar un camino de ejecución
 que llegué a ejecutar la dirección de memoria donde se imprime la flag.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

import angr, claripy
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

base_address    = 0x08048000
\end_layout

\begin_layout Plain Layout

success_address = 0x08048570
\end_layout

\begin_layout Plain Layout

failure_address = 0x0804852d
\end_layout

\begin_layout Plain Layout

pass_length     = 20
\end_layout

\begin_layout Plain Layout

binary_name     = "r1"
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

proj = angr.Project(
\end_layout

\begin_layout Plain Layout

        binary_name
\end_layout

\begin_layout Plain Layout

        # main_opts    = {'base_addr': base_address},
\end_layout

\begin_layout Plain Layout

        # load_options = {'auto_load_libs': False}
\end_layout

\begin_layout Plain Layout

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

pass_chars = [
\end_layout

\begin_layout Plain Layout

	claripy.BVS(f"pass_char{i}", 8)
\end_layout

\begin_layout Plain Layout

	for i in range(pass_length)
\end_layout

\begin_layout Plain Layout

]
\end_layout

\begin_layout Plain Layout

password   = claripy.Concat(*pass_chars)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

state = proj.factory.full_init_state(
\end_layout

\begin_layout Plain Layout

        # args = ["./" + binary_name],
\end_layout

\begin_layout Plain Layout

        add_options = angr.options.unicorn,
\end_layout

\begin_layout Plain Layout

        stdin = angr.SimFileStream(
\end_layout

\begin_layout Plain Layout

			name='stdin',
\end_layout

\begin_layout Plain Layout

			content=password, has_end=False)
\end_layout

\begin_layout Plain Layout

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

sim_mgr = proj.factory.simulation_manager(state)
\end_layout

\begin_layout Plain Layout

sim_mgr.explore(find = success_address, avoid = failure_address)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if len(sim_mgr.found):
\end_layout

\begin_layout Plain Layout

    for found in sim_mgr.found:
\end_layout

\begin_layout Plain Layout

        print(found.posix.dumps(0))
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Ejercicio 3
\end_layout

\begin_layout Enumerate
El modulo del kernel de Linux 
\begin_inset Quotes fld
\end_inset


\family typewriter
fmem
\family default

\begin_inset Quotes frd
\end_inset

, crea el dispositivo 
\family typewriter
/dev/fmem
\family default
 con el cual podemos realizar un voldado de la memoria usando el comando
 
\family typewriter
sudo dd if=/dev/fmem of=/tmp/memory.raw bs=1MB count=512
\family default
 (notar que se necesitan los 
\emph on
headers
\emph default
 del kernel de Linux para su correcta compilación).
\end_layout

\begin_layout Enumerate
\begin_inset Quotes fld
\end_inset

LiME
\begin_inset Quotes frd
\end_inset

 es otro modulo que provee la misma funcionalidad.
 Luego de compilarlo, el volcado de la memoria se puede realizar con el
 comando 
\family typewriter
sudo insmod lime-5.9.0-kali2-amd64.ko "path=/tmp/memory.raw format=raw"
\family default
.
\end_layout

\begin_layout Standard
A continuación se adjuntan las imágenes que documentan dicho proceso con
 ambas herramientas.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename fmem.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename lime.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Section*
Ejercicio 4
\end_layout

\begin_layout Standard
Para poder recuperar la contraseña del archivo, primero debe extraerse el
 hash del archivo.
 Para ello utilizamos la herramienta 
\begin_inset CommandInset href
LatexCommand href
name "Online Hash Crack"
target "https://www.onlinehashcrack.com/tools-office-hash-extractor.php"
literal "false"

\end_inset

, obteniendo:
\end_layout

\begin_layout Standard
\begin_inset Quotes fld
\end_inset


\family typewriter
$office$*2007*20*128*16*ba1ae53b4d016fc3a15124b2a3034779*
\end_layout

\begin_layout Standard

\family typewriter
49a69de2853eac6c62cceeeb549aac18*57e5fd8bfd182b4c70071a3052b91194e048055c
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
Finalmente basándonos en nuestra experiencia previa, utilizamos 
\begin_inset Quotes fld
\end_inset


\family typewriter
hashcat
\family default

\begin_inset Quotes frd
\end_inset

 para recuperar la constraseña.
 Para ello nos bastó con un ataque de producto cartesiano.
\end_layout

\begin_layout Standard
La contraseña recuperada es: 
\begin_inset Quotes fld
\end_inset


\family typewriter
immyisno.1saop91
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Section*
Ejercicio 5
\end_layout

\begin_layout Standard
Para poder analizar la memoria, es necesario contar con un perfil del sistema
 operativo apropiado.
 En la siguiente URL pueden encontrarse varios perfiles, entre ellos el
 que utilizamos con volatility:
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/volatilityfoundation/profiles/tree/master/Linux/Ubuntu/x86"

\end_inset


\end_layout

\begin_layout Standard
Luego de configurar volatility, pudimos encontrar en rootkit usando el comando:
 
\begin_inset Quotes fld
\end_inset


\family typewriter
./volatility_2.6_lin64_standalone -f ubuntu-10.04.3-i386-LiveCD-kbeast.mem --profile=
LinuxUbuntu10043x86 linux_check_modules
\family default

\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
En forma alternativa, el comando 
\begin_inset Quotes fld
\end_inset


\family typewriter
strings ubuntu-10.04.3-i386-LiveCD-kbeast.mem | grep kbeast
\family default

\begin_inset Quotes frd
\end_inset

 provee suficiente evidencia para confirmar lo que sospechabamos.
\end_layout

\end_body
\end_document
